/// <reference path="core.d.ts" />
declare namespace gui {
	interface QAbstractTextDocumentLayout_ITF extends core.QObject_ITF {
		QAbstractTextDocumentLayout_PTR():QAbstractTextDocumentLayout;
	}

	class QAbstractTextDocumentLayout extends core.QObject {
		___pointer: number;
		QAbstractTextDocumentLayout_PTR():QAbstractTextDocumentLayout;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectBlockBoundingRect(f:(block:QTextBlock)=>core.QRectF):void;
		DisconnectBlockBoundingRect():void;
		BlockBoundingRect(block:QTextBlock_ITF):core.QRectF;
		Document():QTextDocument;
		ConnectDocumentChanged(f:(position:number,charsRemoved:number,charsAdded:number)=>void):void;
		DisconnectDocumentChanged():void;
		DocumentChanged(position:number,charsRemoved:number,charsAdded:number):void;
		ConnectDocumentSize(f:()=>core.QSizeF):void;
		DisconnectDocumentSize():void;
		DocumentSize():core.QSizeF;
		Format(position:number):QTextCharFormat;
		ConnectFrameBoundingRect(f:(frame:QTextFrame)=>core.QRectF):void;
		DisconnectFrameBoundingRect():void;
		FrameBoundingRect(frame:QTextFrame_ITF):core.QRectF;
		ConnectHitTest(f:(point:core.QPointF,accuracy:number)=>number):void;
		DisconnectHitTest():void;
		HitTest(point:core.QPointF_ITF,accuracy:number):number;
		ConnectPageCount(f:()=>number):void;
		DisconnectPageCount():void;
		PageCount():number;
		ConnectUpdate(f:(rect:core.QRectF)=>void):void;
		DisconnectUpdate():void;
		Update(rect:core.QRectF_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQAbstractTextDocumentLayoutFromPointer(ptr:number):QAbstractTextDocumentLayout;
	const QAccessible__SoundPlayed: number;
	const QAccessible__Alert: number;
	const QAccessible__ForegroundChanged: number;
	const QAccessible__MenuStart: number;
	const QAccessible__MenuEnd: number;
	const QAccessible__PopupMenuStart: number;
	const QAccessible__PopupMenuEnd: number;
	const QAccessible__ContextHelpStart: number;
	const QAccessible__ContextHelpEnd: number;
	const QAccessible__DragDropStart: number;
	const QAccessible__DragDropEnd: number;
	const QAccessible__DialogStart: number;
	const QAccessible__DialogEnd: number;
	const QAccessible__ScrollingStart: number;
	const QAccessible__ScrollingEnd: number;
	const QAccessible__MenuCommand: number;
	const QAccessible__ActionChanged: number;
	const QAccessible__ActiveDescendantChanged: number;
	const QAccessible__AttributeChanged: number;
	const QAccessible__DocumentContentChanged: number;
	const QAccessible__DocumentLoadComplete: number;
	const QAccessible__DocumentLoadStopped: number;
	const QAccessible__DocumentReload: number;
	const QAccessible__HyperlinkEndIndexChanged: number;
	const QAccessible__HyperlinkNumberOfAnchorsChanged: number;
	const QAccessible__HyperlinkSelectedLinkChanged: number;
	const QAccessible__HypertextLinkActivated: number;
	const QAccessible__HypertextLinkSelected: number;
	const QAccessible__HyperlinkStartIndexChanged: number;
	const QAccessible__HypertextChanged: number;
	const QAccessible__HypertextNLinksChanged: number;
	const QAccessible__ObjectAttributeChanged: number;
	const QAccessible__PageChanged: number;
	const QAccessible__SectionChanged: number;
	const QAccessible__TableCaptionChanged: number;
	const QAccessible__TableColumnDescriptionChanged: number;
	const QAccessible__TableColumnHeaderChanged: number;
	const QAccessible__TableModelChanged: number;
	const QAccessible__TableRowDescriptionChanged: number;
	const QAccessible__TableRowHeaderChanged: number;
	const QAccessible__TableSummaryChanged: number;
	const QAccessible__TextAttributeChanged: number;
	const QAccessible__TextCaretMoved: number;
	const QAccessible__TextColumnChanged: number;
	const QAccessible__TextInserted: number;
	const QAccessible__TextRemoved: number;
	const QAccessible__TextUpdated: number;
	const QAccessible__TextSelectionChanged: number;
	const QAccessible__VisibleDataChanged: number;
	const QAccessible__ObjectCreated: number;
	const QAccessible__ObjectDestroyed: number;
	const QAccessible__ObjectShow: number;
	const QAccessible__ObjectHide: number;
	const QAccessible__ObjectReorder: number;
	const QAccessible__Focus: number;
	const QAccessible__Selection: number;
	const QAccessible__SelectionAdd: number;
	const QAccessible__SelectionRemove: number;
	const QAccessible__SelectionWithin: number;
	const QAccessible__StateChanged: number;
	const QAccessible__LocationChanged: number;
	const QAccessible__NameChanged: number;
	const QAccessible__DescriptionChanged: number;
	const QAccessible__ValueChanged: number;
	const QAccessible__ParentChanged: number;
	const QAccessible__HelpChanged: number;
	const QAccessible__DefaultActionChanged: number;
	const QAccessible__AcceleratorChanged: number;
	const QAccessible__InvalidEvent: number;
	const QAccessible__NoRole: number;
	const QAccessible__TitleBar: number;
	const QAccessible__MenuBar: number;
	const QAccessible__ScrollBar: number;
	const QAccessible__Grip: number;
	const QAccessible__Sound: number;
	const QAccessible__Cursor: number;
	const QAccessible__Caret: number;
	const QAccessible__AlertMessage: number;
	const QAccessible__Window: number;
	const QAccessible__Client: number;
	const QAccessible__PopupMenu: number;
	const QAccessible__MenuItem: number;
	const QAccessible__ToolTip: number;
	const QAccessible__Application: number;
	const QAccessible__Document: number;
	const QAccessible__Pane: number;
	const QAccessible__Chart: number;
	const QAccessible__Dialog: number;
	const QAccessible__Border: number;
	const QAccessible__Grouping: number;
	const QAccessible__Separator: number;
	const QAccessible__ToolBar: number;
	const QAccessible__StatusBar: number;
	const QAccessible__Table: number;
	const QAccessible__ColumnHeader: number;
	const QAccessible__RowHeader: number;
	const QAccessible__Column: number;
	const QAccessible__Row: number;
	const QAccessible__Cell: number;
	const QAccessible__Link: number;
	const QAccessible__HelpBalloon: number;
	const QAccessible__Assistant: number;
	const QAccessible__List: number;
	const QAccessible__ListItem: number;
	const QAccessible__Tree: number;
	const QAccessible__TreeItem: number;
	const QAccessible__PageTab: number;
	const QAccessible__PropertyPage: number;
	const QAccessible__Indicator: number;
	const QAccessible__Graphic: number;
	const QAccessible__StaticText: number;
	const QAccessible__EditableText: number;
	const QAccessible__Button: number;
	const QAccessible__CheckBox: number;
	const QAccessible__RadioButton: number;
	const QAccessible__ComboBox: number;
	const QAccessible__ProgressBar: number;
	const QAccessible__Dial: number;
	const QAccessible__HotkeyField: number;
	const QAccessible__Slider: number;
	const QAccessible__SpinBox: number;
	const QAccessible__Canvas: number;
	const QAccessible__Animation: number;
	const QAccessible__Equation: number;
	const QAccessible__ButtonDropDown: number;
	const QAccessible__ButtonMenu: number;
	const QAccessible__ButtonDropGrid: number;
	const QAccessible__Whitespace: number;
	const QAccessible__PageTabList: number;
	const QAccessible__Clock: number;
	const QAccessible__Splitter: number;
	const QAccessible__LayeredPane: number;
	const QAccessible__Terminal: number;
	const QAccessible__Desktop: number;
	const QAccessible__Paragraph: number;
	const QAccessible__WebDocument: number;
	const QAccessible__Section: number;
	const QAccessible__ColorChooser: number;
	const QAccessible__Footer: number;
	const QAccessible__Form: number;
	const QAccessible__Heading: number;
	const QAccessible__Note: number;
	const QAccessible__ComplementaryContent: number;
	const QAccessible__UserRole: number;
	const QAccessible__Name: number;
	const QAccessible__Description: number;
	const QAccessible__Value: number;
	const QAccessible__Help: number;
	const QAccessible__Accelerator: number;
	const QAccessible__DebugDescription: number;
	const QAccessible__UserText: number;
	const QAccessible__Label: number;
	const QAccessible__Labelled: number;
	const QAccessible__Controller: number;
	const QAccessible__Controlled: number;
	const QAccessible__AllRelations: number;
	const QAccessible__TextInterface: number;
	const QAccessible__EditableTextInterface: number;
	const QAccessible__ValueInterface: number;
	const QAccessible__ActionInterface: number;
	const QAccessible__ImageInterface: number;
	const QAccessible__TableInterface: number;
	const QAccessible__TableCellInterface: number;
	const QAccessible__CharBoundary: number;
	const QAccessible__WordBoundary: number;
	const QAccessible__SentenceBoundary: number;
	const QAccessible__ParagraphBoundary: number;
	const QAccessible__LineBoundary: number;
	const QAccessible__NoBoundary: number;
	const QAccessibleTableModelChangeEvent__ModelReset: number;
	const QAccessibleTableModelChangeEvent__DataChanged: number;
	const QAccessibleTableModelChangeEvent__RowsInserted: number;
	const QAccessibleTableModelChangeEvent__ColumnsInserted: number;
	const QAccessibleTableModelChangeEvent__RowsRemoved: number;
	const QAccessibleTableModelChangeEvent__ColumnsRemoved: number;
	interface QBitmap_ITF extends QPixmap_ITF {
		QBitmap_PTR():QBitmap;
	}

	class QBitmap extends QPixmap {
		___pointer: number;
		QBitmap_PTR():QBitmap;
		Pointer():number;
		SetPointer(p:number):void;
		Clear():void;
		FromImage(image:QImage_ITF,flags:number):QBitmap;
		FromImage2(image:QImage_ITF,flags:number):QBitmap;
		ConnectDestroyQBitmap(f:()=>void):void;
		DisconnectDestroyQBitmap():void;
		DestroyQBitmap():void;
		DestroyQBitmapDefault():void;
	}
	function NewQBitmapFromPointer(ptr:number):QBitmap;
	function NewQBitmap():QBitmap;
	function NewQBitmap2(pixmap:QPixmap_ITF):QBitmap;
	function NewQBitmap3(width:number,height:number):QBitmap;
	function NewQBitmap4(size:core.QSize_ITF):QBitmap;
	function NewQBitmap5(fileName:string,format:string):QBitmap;
	function QBitmap_FromImage(image:QImage_ITF,flags:number):QBitmap;
	function QBitmap_FromImage2(image:QImage_ITF,flags:number):QBitmap;
	interface QBrush_ITF {
		QBrush_PTR():QBrush;
	}

	class QBrush {
		___pointer: number;
		QBrush_PTR():QBrush;
		Pointer():number;
		SetPointer(p:number):void;
		Color():QColor;
		SetStyle(style:number):void;
		SetTransform(matrix:QTransform_ITF):void;
		Style():number;
		Transform():QTransform;
		DestroyQBrush():void;
		ToVariant():core.QVariant;
	}
	function NewQBrushFromPointer(ptr:number):QBrush;
	function NewQBrush():QBrush;
	function NewQBrush2(style:number):QBrush;
	function NewQBrush3(color:QColor_ITF,style:number):QBrush;
	function NewQBrush4(color:number,style:number):QBrush;
	function NewQBrush5(color:QColor_ITF,pixmap:QPixmap_ITF):QBrush;
	function NewQBrush6(color:number,pixmap:QPixmap_ITF):QBrush;
	function NewQBrush7(pixmap:QPixmap_ITF):QBrush;
	function NewQBrush8(image:QImage_ITF):QBrush;
	function NewQBrush9(other:QBrush_ITF):QBrush;
	function NewQBrush10(gradient:QGradient_ITF):QBrush;
	const QClipboard__Clipboard: number;
	const QClipboard__Selection: number;
	const QClipboard__FindBuffer: number;
	const QClipboard__LastMode: number;
	interface QCloseEvent_ITF extends core.QEvent_ITF {
		QCloseEvent_PTR():QCloseEvent;
	}

	class QCloseEvent extends core.QEvent {
		___pointer: number;
		QCloseEvent_PTR():QCloseEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQCloseEvent():void;
	}
	function NewQCloseEventFromPointer(ptr:number):QCloseEvent;
	function NewQCloseEvent():QCloseEvent;
	interface QColor_ITF {
		QColor_PTR():QColor;
	}

	class QColor {
		___pointer: number;
		QColor_PTR():QColor;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQColor():void;
		Blue():number;
		Cyan():number;
		Green():number;
		IsValid():boolean;
		Magenta():number;
		Name():string;
		Name2(format:number):string;
		Spec():number;
		Value():number;
		ValueF():number;
		ToVariant():core.QVariant;
	}
	function NewQColorFromPointer(ptr:number):QColor;
	function NewQColor():QColor;
	function NewQColor2(color:number):QColor;
	function NewQColor3(r:number,g:number,b:number,a:number):QColor;
	function NewQColor4(color:number):QColor;
	function NewQColor5(rgba64:QRgba64_ITF):QColor;
	function NewQColor6(name:string):QColor;
	function NewQColor8(name:string):QColor;
	function NewQColor9(name:core.QLatin1String_ITF):QColor;
	const QColor__Invalid: number;
	const QColor__Rgb: number;
	const QColor__Hsv: number;
	const QColor__Cmyk: number;
	const QColor__Hsl: number;
	const QColor__HexRgb: number;
	const QColor__HexArgb: number;
	const QContextMenuEvent__Mouse: number;
	const QContextMenuEvent__Keyboard: number;
	const QContextMenuEvent__Other: number;
	interface QCursor_ITF {
		QCursor_PTR():QCursor;
	}

	class QCursor {
		___pointer: number;
		QCursor_PTR():QCursor;
		Pointer():number;
		SetPointer(p:number):void;
		Mask():QBitmap;
		Pixmap():QPixmap;
		Pos():core.QPoint;
		Pos2(screen:QScreen_ITF):core.QPoint;
		SetPos(x:number,y:number):void;
		SetPos2(screen:QScreen_ITF,x:number,y:number):void;
		SetPos3(p:core.QPoint_ITF):void;
		SetPos4(screen:QScreen_ITF,p:core.QPoint_ITF):void;
		DestroyQCursor():void;
	}
	function NewQCursorFromPointer(ptr:number):QCursor;
	function NewQCursor():QCursor;
	function NewQCursor2(shape:number):QCursor;
	function NewQCursor3(bitmap:QBitmap_ITF,mask:QBitmap_ITF,hotX:number,hotY:number):QCursor;
	function NewQCursor4(pixmap:QPixmap_ITF,hotX:number,hotY:number):QCursor;
	function NewQCursor5(c:QCursor_ITF):QCursor;
	function NewQCursor6(other:QCursor_ITF):QCursor;
	function QCursor_Pos():core.QPoint;
	function QCursor_Pos2(screen:QScreen_ITF):core.QPoint;
	function QCursor_SetPos(x:number,y:number):void;
	function QCursor_SetPos2(screen:QScreen_ITF,x:number,y:number):void;
	function QCursor_SetPos3(p:core.QPoint_ITF):void;
	function QCursor_SetPos4(screen:QScreen_ITF,p:core.QPoint_ITF):void;
	interface QDesktopServices_ITF {
		QDesktopServices_PTR():QDesktopServices;
	}

	class QDesktopServices {
		___pointer: number;
		QDesktopServices_PTR():QDesktopServices;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQDesktopServices():void;
		OpenUrl(url:core.QUrl_ITF):boolean;
	}
	function NewQDesktopServicesFromPointer(ptr:number):QDesktopServices;
	function QDesktopServices_OpenUrl(url:core.QUrl_ITF):boolean;
	interface QDoubleValidator_ITF extends QValidator_ITF {
		QDoubleValidator_PTR():QDoubleValidator;
	}

	class QDoubleValidator extends QValidator {
		___pointer: number;
		QDoubleValidator_PTR():QDoubleValidator;
		Pointer():number;
		SetPointer(p:number):void;
		Bottom():number;
		ConnectSetRange(f:(minimum:number,maximum:number,decimals:number)=>void):void;
		DisconnectSetRange():void;
		SetRange(minimum:number,maximum:number,decimals:number):void;
		SetRangeDefault(minimum:number,maximum:number,decimals:number):void;
		Top():number;
		ConnectDestroyQDoubleValidator(f:()=>void):void;
		DisconnectDestroyQDoubleValidator():void;
		DestroyQDoubleValidator():void;
		DestroyQDoubleValidatorDefault():void;
		Validate(input:string,pos:number):number;
		ValidateDefault(input:string,pos:number):number;
	}
	function NewQDoubleValidatorFromPointer(ptr:number):QDoubleValidator;
	function NewQDoubleValidator(parent:core.QObject_ITF):QDoubleValidator;
	function NewQDoubleValidator2(bottom:number,top:number,decimals:number,parent:core.QObject_ITF):QDoubleValidator;
	const QDoubleValidator__StandardNotation: number;
	const QDoubleValidator__ScientificNotation: number;
	interface QDragEnterEvent_ITF extends QDragMoveEvent_ITF {
		QDragEnterEvent_PTR():QDragEnterEvent;
	}

	class QDragEnterEvent extends QDragMoveEvent {
		___pointer: number;
		QDragEnterEvent_PTR():QDragEnterEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQDragEnterEvent():void;
	}
	function NewQDragEnterEventFromPointer(ptr:number):QDragEnterEvent;
	function NewQDragEnterEvent(point:core.QPoint_ITF,actions:number,data:core.QMimeData_ITF,buttons:number,modifiers:number):QDragEnterEvent;
	interface QDragLeaveEvent_ITF extends core.QEvent_ITF {
		QDragLeaveEvent_PTR():QDragLeaveEvent;
	}

	class QDragLeaveEvent extends core.QEvent {
		___pointer: number;
		QDragLeaveEvent_PTR():QDragLeaveEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQDragLeaveEvent():void;
	}
	function NewQDragLeaveEventFromPointer(ptr:number):QDragLeaveEvent;
	function NewQDragLeaveEvent():QDragLeaveEvent;
	interface QDragMoveEvent_ITF extends QDropEvent_ITF {
		QDragMoveEvent_PTR():QDragMoveEvent;
	}

	class QDragMoveEvent extends QDropEvent {
		___pointer: number;
		QDragMoveEvent_PTR():QDragMoveEvent;
		Pointer():number;
		SetPointer(p:number):void;
		Accept(rectangle:core.QRect_ITF):void;
		ConnectDestroyQDragMoveEvent(f:()=>void):void;
		DisconnectDestroyQDragMoveEvent():void;
		DestroyQDragMoveEvent():void;
		DestroyQDragMoveEventDefault():void;
	}
	function NewQDragMoveEventFromPointer(ptr:number):QDragMoveEvent;
	function NewQDragMoveEvent(pos:core.QPoint_ITF,actions:number,data:core.QMimeData_ITF,buttons:number,modifiers:number,ty:number):QDragMoveEvent;
	interface QDropEvent_ITF extends core.QEvent_ITF {
		QDropEvent_PTR():QDropEvent;
	}

	class QDropEvent extends core.QEvent {
		___pointer: number;
		QDropEvent_PTR():QDropEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQDropEvent():void;
		AcceptProposedAction():void;
		MimeData():core.QMimeData;
		Pos():core.QPoint;
		ProposedAction():number;
		Source():core.QObject;
	}
	function NewQDropEventFromPointer(ptr:number):QDropEvent;
	function NewQDropEvent(pos:core.QPointF_ITF,actions:number,data:core.QMimeData_ITF,buttons:number,modifiers:number,ty:number):QDropEvent;
	interface QFont_ITF {
		QFont_PTR():QFont;
	}

	class QFont {
		___pointer: number;
		QFont_PTR():QFont;
		Pointer():number;
		SetPointer(p:number):void;
		Bold():boolean;
		Key():string;
		PointSize():number;
		SetPointSize(pointSize:number):void;
		SetStretch(factor:number):void;
		SetStyle(style:number):void;
		Stretch():number;
		Style():number;
		ToString():string;
		Weight():number;
		DestroyQFont():void;
		ToVariant():core.QVariant;
	}
	function NewQFontFromPointer(ptr:number):QFont;
	function NewQFont():QFont;
	function NewQFont2(family:string,pointSize:number,weight:number,italic:boolean):QFont;
	function NewQFont4(font:QFont_ITF,pd:QPaintDevice_ITF):QFont;
	function NewQFont5(font:QFont_ITF):QFont;
	const QFont__Helvetica: number;
	const QFont__SansSerif: number;
	const QFont__Times: number;
	const QFont__Serif: number;
	const QFont__Courier: number;
	const QFont__TypeWriter: number;
	const QFont__OldEnglish: number;
	const QFont__Decorative: number;
	const QFont__System: number;
	const QFont__AnyStyle: number;
	const QFont__Cursive: number;
	const QFont__Monospace: number;
	const QFont__Fantasy: number;
	const QFont__PreferDefault: number;
	const QFont__PreferBitmap: number;
	const QFont__PreferDevice: number;
	const QFont__PreferOutline: number;
	const QFont__ForceOutline: number;
	const QFont__PreferMatch: number;
	const QFont__PreferQuality: number;
	const QFont__PreferAntialias: number;
	const QFont__NoAntialias: number;
	const QFont__OpenGLCompatible: number;
	const QFont__ForceIntegerMetrics: number;
	const QFont__NoSubpixelAntialias: number;
	const QFont__PreferNoShaping: number;
	const QFont__NoFontMerging: number;
	const QFont__PreferDefaultHinting: number;
	const QFont__PreferNoHinting: number;
	const QFont__PreferVerticalHinting: number;
	const QFont__PreferFullHinting: number;
	const QFont__Thin: number;
	const QFont__ExtraLight: number;
	const QFont__Light: number;
	const QFont__Normal: number;
	const QFont__Medium: number;
	const QFont__DemiBold: number;
	const QFont__Bold: number;
	const QFont__ExtraBold: number;
	const QFont__Black: number;
	const QFont__StyleNormal: number;
	const QFont__StyleItalic: number;
	const QFont__StyleOblique: number;
	const QFont__AnyStretch: number;
	const QFont__UltraCondensed: number;
	const QFont__ExtraCondensed: number;
	const QFont__Condensed: number;
	const QFont__SemiCondensed: number;
	const QFont__Unstretched: number;
	const QFont__SemiExpanded: number;
	const QFont__Expanded: number;
	const QFont__ExtraExpanded: number;
	const QFont__UltraExpanded: number;
	const QFont__MixedCase: number;
	const QFont__AllUppercase: number;
	const QFont__AllLowercase: number;
	const QFont__SmallCaps: number;
	const QFont__Capitalize: number;
	const QFont__PercentageSpacing: number;
	const QFont__AbsoluteSpacing: number;
	const QFontDatabase__Any: number;
	const QFontDatabase__Latin: number;
	const QFontDatabase__Greek: number;
	const QFontDatabase__Cyrillic: number;
	const QFontDatabase__Armenian: number;
	const QFontDatabase__Hebrew: number;
	const QFontDatabase__Arabic: number;
	const QFontDatabase__Syriac: number;
	const QFontDatabase__Thaana: number;
	const QFontDatabase__Devanagari: number;
	const QFontDatabase__Bengali: number;
	const QFontDatabase__Gurmukhi: number;
	const QFontDatabase__Gujarati: number;
	const QFontDatabase__Oriya: number;
	const QFontDatabase__Tamil: number;
	const QFontDatabase__Telugu: number;
	const QFontDatabase__Kannada: number;
	const QFontDatabase__Malayalam: number;
	const QFontDatabase__Sinhala: number;
	const QFontDatabase__Thai: number;
	const QFontDatabase__Lao: number;
	const QFontDatabase__Tibetan: number;
	const QFontDatabase__Myanmar: number;
	const QFontDatabase__Georgian: number;
	const QFontDatabase__Khmer: number;
	const QFontDatabase__SimplifiedChinese: number;
	const QFontDatabase__TraditionalChinese: number;
	const QFontDatabase__Japanese: number;
	const QFontDatabase__Korean: number;
	const QFontDatabase__Vietnamese: number;
	const QFontDatabase__Symbol: number;
	const QFontDatabase__Other: number;
	const QFontDatabase__Ogham: number;
	const QFontDatabase__Runic: number;
	const QFontDatabase__Nko: number;
	const QFontDatabase__WritingSystemsCount: number;
	const QFontDatabase__GeneralFont: number;
	const QFontDatabase__FixedFont: number;
	const QFontDatabase__TitleFont: number;
	const QFontDatabase__SmallestReadableFont: number;
	interface QGlyphRun_ITF {
		QGlyphRun_PTR():QGlyphRun;
	}

	class QGlyphRun {
		___pointer: number;
		QGlyphRun_PTR():QGlyphRun;
		Pointer():number;
		SetPointer(p:number):void;
		BoundingRect():core.QRectF;
		Clear():void;
		Flags():number;
		IsEmpty():boolean;
		SetFlag(flag:number,enabled:boolean):void;
		SetFlags(flags:number):void;
		DestroyQGlyphRun():void;
	}
	function NewQGlyphRunFromPointer(ptr:number):QGlyphRun;
	function NewQGlyphRun():QGlyphRun;
	function NewQGlyphRun2(other:QGlyphRun_ITF):QGlyphRun;
	const QGlyphRun__Overline: number;
	const QGlyphRun__Underline: number;
	const QGlyphRun__StrikeOut: number;
	const QGlyphRun__RightToLeft: number;
	const QGlyphRun__SplitLigature: number;
	interface QGradient_ITF {
		QGradient_PTR():QGradient;
	}

	class QGradient {
		___pointer: number;
		QGradient_PTR():QGradient;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQGradient():void;
		Type():number;
	}
	function NewQGradientFromPointer(ptr:number):QGradient;
	function NewQGradient2(preset:number):QGradient;
	const QGradient__LinearGradient: number;
	const QGradient__RadialGradient: number;
	const QGradient__ConicalGradient: number;
	const QGradient__NoGradient: number;
	const QGradient__PadSpread: number;
	const QGradient__ReflectSpread: number;
	const QGradient__RepeatSpread: number;
	const QGradient__LogicalMode: number;
	const QGradient__StretchToDeviceMode: number;
	const QGradient__ObjectBoundingMode: number;
	const QGradient__ObjectMode: number;
	const QGradient__WarmFlame: number;
	const QGradient__NightFade: number;
	const QGradient__SpringWarmth: number;
	const QGradient__JuicyPeach: number;
	const QGradient__YoungPassion: number;
	const QGradient__LadyLips: number;
	const QGradient__SunnyMorning: number;
	const QGradient__RainyAshville: number;
	const QGradient__FrozenDreams: number;
	const QGradient__WinterNeva: number;
	const QGradient__DustyGrass: number;
	const QGradient__TemptingAzure: number;
	const QGradient__HeavyRain: number;
	const QGradient__AmyCrisp: number;
	const QGradient__MeanFruit: number;
	const QGradient__DeepBlue: number;
	const QGradient__RipeMalinka: number;
	const QGradient__CloudyKnoxville: number;
	const QGradient__MalibuBeach: number;
	const QGradient__NewLife: number;
	const QGradient__TrueSunset: number;
	const QGradient__MorpheusDen: number;
	const QGradient__RareWind: number;
	const QGradient__NearMoon: number;
	const QGradient__WildApple: number;
	const QGradient__SaintPetersburg: number;
	const QGradient__PlumPlate: number;
	const QGradient__EverlastingSky: number;
	const QGradient__HappyFisher: number;
	const QGradient__Blessing: number;
	const QGradient__SharpeyeEagle: number;
	const QGradient__LadogaBottom: number;
	const QGradient__LemonGate: number;
	const QGradient__ItmeoBranding: number;
	const QGradient__ZeusMiracle: number;
	const QGradient__OldHat: number;
	const QGradient__StarWine: number;
	const QGradient__HappyAcid: number;
	const QGradient__AwesomePine: number;
	const QGradient__NewYork: number;
	const QGradient__ShyRainbow: number;
	const QGradient__MixedHopes: number;
	const QGradient__FlyHigh: number;
	const QGradient__StrongBliss: number;
	const QGradient__FreshMilk: number;
	const QGradient__SnowAgain: number;
	const QGradient__FebruaryInk: number;
	const QGradient__KindSteel: number;
	const QGradient__SoftGrass: number;
	const QGradient__GrownEarly: number;
	const QGradient__SharpBlues: number;
	const QGradient__ShadyWater: number;
	const QGradient__DirtyBeauty: number;
	const QGradient__GreatWhale: number;
	const QGradient__TeenNotebook: number;
	const QGradient__PoliteRumors: number;
	const QGradient__SweetPeriod: number;
	const QGradient__WideMatrix: number;
	const QGradient__SoftCherish: number;
	const QGradient__RedSalvation: number;
	const QGradient__BurningSpring: number;
	const QGradient__NightParty: number;
	const QGradient__SkyGlider: number;
	const QGradient__HeavenPeach: number;
	const QGradient__PurpleDivision: number;
	const QGradient__AquaSplash: number;
	const QGradient__SpikyNaga: number;
	const QGradient__LoveKiss: number;
	const QGradient__CleanMirror: number;
	const QGradient__PremiumDark: number;
	const QGradient__ColdEvening: number;
	const QGradient__CochitiLake: number;
	const QGradient__SummerGames: number;
	const QGradient__PassionateBed: number;
	const QGradient__MountainRock: number;
	const QGradient__DesertHump: number;
	const QGradient__JungleDay: number;
	const QGradient__PhoenixStart: number;
	const QGradient__OctoberSilence: number;
	const QGradient__FarawayRiver: number;
	const QGradient__AlchemistLab: number;
	const QGradient__OverSun: number;
	const QGradient__PremiumWhite: number;
	const QGradient__MarsParty: number;
	const QGradient__EternalConstance: number;
	const QGradient__JapanBlush: number;
	const QGradient__SmilingRain: number;
	const QGradient__CloudyApple: number;
	const QGradient__BigMango: number;
	const QGradient__HealthyWater: number;
	const QGradient__AmourAmour: number;
	const QGradient__RiskyConcrete: number;
	const QGradient__StrongStick: number;
	const QGradient__ViciousStance: number;
	const QGradient__PaloAlto: number;
	const QGradient__HappyMemories: number;
	const QGradient__MidnightBloom: number;
	const QGradient__Crystalline: number;
	const QGradient__PartyBliss: number;
	const QGradient__ConfidentCloud: number;
	const QGradient__LeCocktail: number;
	const QGradient__RiverCity: number;
	const QGradient__FrozenBerry: number;
	const QGradient__ChildCare: number;
	const QGradient__FlyingLemon: number;
	const QGradient__NewRetrowave: number;
	const QGradient__HiddenJaguar: number;
	const QGradient__AboveTheSky: number;
	const QGradient__Nega: number;
	const QGradient__DenseWater: number;
	const QGradient__Seashore: number;
	const QGradient__MarbleWall: number;
	const QGradient__CheerfulCaramel: number;
	const QGradient__NightSky: number;
	const QGradient__MagicLake: number;
	const QGradient__YoungGrass: number;
	const QGradient__ColorfulPeach: number;
	const QGradient__GentleCare: number;
	const QGradient__PlumBath: number;
	const QGradient__HappyUnicorn: number;
	const QGradient__AfricanField: number;
	const QGradient__SolidStone: number;
	const QGradient__OrangeJuice: number;
	const QGradient__GlassWater: number;
	const QGradient__NorthMiracle: number;
	const QGradient__FruitBlend: number;
	const QGradient__MillenniumPine: number;
	const QGradient__HighFlight: number;
	const QGradient__MoleHall: number;
	const QGradient__SpaceShift: number;
	const QGradient__ForestInei: number;
	const QGradient__RoyalGarden: number;
	const QGradient__RichMetal: number;
	const QGradient__JuicyCake: number;
	const QGradient__SmartIndigo: number;
	const QGradient__SandStrike: number;
	const QGradient__NorseBeauty: number;
	const QGradient__AquaGuidance: number;
	const QGradient__SunVeggie: number;
	const QGradient__SeaLord: number;
	const QGradient__BlackSea: number;
	const QGradient__GrassShampoo: number;
	const QGradient__LandingAircraft: number;
	const QGradient__WitchDance: number;
	const QGradient__SleeplessNight: number;
	const QGradient__AngelCare: number;
	const QGradient__CrystalRiver: number;
	const QGradient__SoftLipstick: number;
	const QGradient__SaltMountain: number;
	const QGradient__PerfectWhite: number;
	const QGradient__FreshOasis: number;
	const QGradient__StrictNovember: number;
	const QGradient__MorningSalad: number;
	const QGradient__DeepRelief: number;
	const QGradient__SeaStrike: number;
	const QGradient__NightCall: number;
	const QGradient__SupremeSky: number;
	const QGradient__LightBlue: number;
	const QGradient__MindCrawl: number;
	const QGradient__LilyMeadow: number;
	const QGradient__SugarLollipop: number;
	const QGradient__SweetDessert: number;
	const QGradient__MagicRay: number;
	const QGradient__TeenParty: number;
	const QGradient__FrozenHeat: number;
	const QGradient__GagarinView: number;
	const QGradient__FabledSunset: number;
	const QGradient__PerfectBlue: number;
	interface QGuiApplication_ITF extends core.QCoreApplication_ITF {
		QGuiApplication_PTR():QGuiApplication;
	}

	class QGuiApplication extends core.QCoreApplication {
		___pointer: number;
		QGuiApplication_PTR():QGuiApplication;
		Pointer():number;
		SetPointer(p:number):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		Exec():number;
		Font():QFont;
		Palette():QPalette;
		SetFont(font:QFont_ITF):void;
		Sync():void;
		ConnectDestroyQGuiApplication(f:()=>void):void;
		DisconnectDestroyQGuiApplication():void;
		DestroyQGuiApplication():void;
		DestroyQGuiApplicationDefault():void;
		QuitDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQGuiApplicationFromPointer(ptr:number):QGuiApplication;
	function NewQGuiApplication(argc:number,argv:string[]):QGuiApplication;
	function QGuiApplication_Exec():number;
	function QGuiApplication_Font():QFont;
	function QGuiApplication_Palette():QPalette;
	function QGuiApplication_SetFont(font:QFont_ITF):void;
	function QGuiApplication_Sync():void;
	interface QIcon_ITF {
		QIcon_PTR():QIcon;
	}

	class QIcon {
		___pointer: number;
		QIcon_PTR():QIcon;
		Pointer():number;
		SetPointer(p:number):void;
		AddPixmap(pixmap:QPixmap_ITF,mode:number,state:number):void;
		Name():string;
		Pixmap(size:core.QSize_ITF,mode:number,state:number):QPixmap;
		Pixmap2(w:number,h:number,mode:number,state:number):QPixmap;
		Pixmap3(extent:number,mode:number,state:number):QPixmap;
		Pixmap4(window:QWindow_ITF,size:core.QSize_ITF,mode:number,state:number):QPixmap;
		DestroyQIcon():void;
		ToVariant():core.QVariant;
	}
	function NewQIconFromPointer(ptr:number):QIcon;
	function NewQIcon():QIcon;
	function NewQIcon2(pixmap:QPixmap_ITF):QIcon;
	function NewQIcon3(other:QIcon_ITF):QIcon;
	function NewQIcon4(other:QIcon_ITF):QIcon;
	function NewQIcon5(fileName:string):QIcon;
	function NewQIcon6(engine:QIconEngine_ITF):QIcon;
	function NewQIconEngine():QIconEngine;
	const QIcon__Normal: number;
	const QIcon__Disabled: number;
	const QIcon__Active: number;
	const QIcon__Selected: number;
	const QIcon__On: number;
	const QIcon__Off: number;
	interface QIconEngine_ITF {
		QIconEngine_PTR():QIconEngine;
	}

	class QIconEngine {
		___pointer: number;
		QIconEngine_PTR():QIconEngine;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectAddPixmap(f:(pixmap:QPixmap,mode:number,state:number)=>void):void;
		DisconnectAddPixmap():void;
		AddPixmap(pixmap:QPixmap_ITF,mode:number,state:number):void;
		AddPixmapDefault(pixmap:QPixmap_ITF,mode:number,state:number):void;
		ConnectClone(f:()=>QIconEngine):void;
		DisconnectClone():void;
		Clone():QIconEngine;
		ConnectKey(f:()=>string):void;
		DisconnectKey():void;
		Key():string;
		KeyDefault():string;
		ConnectPaint(f:(painter:QPainter,rect:core.QRect,mode:number,state:number)=>void):void;
		DisconnectPaint():void;
		Paint(painter:QPainter_ITF,rect:core.QRect_ITF,mode:number,state:number):void;
		ConnectPixmap(f:(size:core.QSize,mode:number,state:number)=>QPixmap):void;
		DisconnectPixmap():void;
		Pixmap(size:core.QSize_ITF,mode:number,state:number):QPixmap;
		PixmapDefault(size:core.QSize_ITF,mode:number,state:number):QPixmap;
		ConnectRead(f:(i:core.QDataStream)=>boolean):void;
		DisconnectRead():void;
		Read(i:core.QDataStream_ITF):boolean;
		ReadDefault(i:core.QDataStream_ITF):boolean;
		ConnectWrite(f:(out:core.QDataStream)=>boolean):void;
		DisconnectWrite():void;
		Write(out:core.QDataStream_ITF):boolean;
		WriteDefault(out:core.QDataStream_ITF):boolean;
		ConnectDestroyQIconEngine(f:()=>void):void;
		DisconnectDestroyQIconEngine():void;
		DestroyQIconEngine():void;
		DestroyQIconEngineDefault():void;
	}
	function NewQIconEngineFromPointer(ptr:number):QIconEngine;
	function NewQIconEngine():QIconEngine;
	const QIconEngine__AvailableSizesHook: number;
	const QIconEngine__IconNameHook: number;
	const QIconEngine__IsNullHook: number;
	const QIconEngine__ScaledPixmapHook: number;
	interface QImage_ITF extends QPaintDevice_ITF {
		QImage_PTR():QImage;
	}

	class QImage extends QPaintDevice {
		___pointer: number;
		QImage_PTR():QImage;
		Pointer():number;
		SetPointer(p:number):void;
		Color(i:number):number;
		Copy(rectangle:core.QRect_ITF):QImage;
		Copy2(x:number,y:number,width:number,height:number):QImage;
		Fill(pixelValue:number):void;
		Fill2(color:QColor_ITF):void;
		Fill3(color:number):void;
		Format():number;
		Pixel(position:core.QPoint_ITF):number;
		Pixel2(x:number,y:number):number;
		PixelColor(position:core.QPoint_ITF):QColor;
		PixelColor2(x:number,y:number):QColor;
		Rect():core.QRect;
		Save(fileName:string,format:string,quality:number):boolean;
		Save2(device:core.QIODevice_ITF,format:string,quality:number):boolean;
		Scaled(size:core.QSize_ITF,aspectRatioMode:number,transformMode:number):QImage;
		Scaled2(width:number,height:number,aspectRatioMode:number,transformMode:number):QImage;
		SetPixel(position:core.QPoint_ITF,index_or_rgb:number):void;
		SetPixel2(x:number,y:number,index_or_rgb:number):void;
		SetPixelColor(position:core.QPoint_ITF,color:QColor_ITF):void;
		SetPixelColor2(x:number,y:number,color:QColor_ITF):void;
		SetText(key:string,text:string):void;
		Size():core.QSize;
		Text(key:string):string;
		Valid(pos:core.QPoint_ITF):boolean;
		Valid2(x:number,y:number):boolean;
		ConnectDestroyQImage(f:()=>void):void;
		DisconnectDestroyQImage():void;
		DestroyQImage():void;
		DestroyQImageDefault():void;
		ToVariant():core.QVariant;
		PaintEngine():QPaintEngine;
		PaintEngineDefault():QPaintEngine;
	}
	function NewQImageFromPointer(ptr:number):QImage;
	function NewQImage():QImage;
	function NewQImage2(size:core.QSize_ITF,format:number):QImage;
	function NewQImage3(width:number,height:number,format:number):QImage;
	function NewQImage4(data:string,width:number,height:number,format:number):QImage;
	function NewQImage5(data:string,width:number,height:number,format:number):QImage;
	function NewQImage6(data:string,width:number,height:number,bytesPerLine:number,format:number):QImage;
	function NewQImage7(data:string,width:number,height:number,bytesPerLine:number,format:number):QImage;
	function NewQImage9(fileName:string,format:string):QImage;
	function NewQImage10(image:QImage_ITF):QImage;
	function NewQImage11(other:QImage_ITF):QImage;
	const QImage__InvertRgb: number;
	const QImage__InvertRgba: number;
	const QImage__Format_Invalid: number;
	const QImage__Format_Mono: number;
	const QImage__Format_MonoLSB: number;
	const QImage__Format_Indexed8: number;
	const QImage__Format_RGB32: number;
	const QImage__Format_ARGB32: number;
	const QImage__Format_ARGB32_Premultiplied: number;
	const QImage__Format_RGB16: number;
	const QImage__Format_ARGB8565_Premultiplied: number;
	const QImage__Format_RGB666: number;
	const QImage__Format_ARGB6666_Premultiplied: number;
	const QImage__Format_RGB555: number;
	const QImage__Format_ARGB8555_Premultiplied: number;
	const QImage__Format_RGB888: number;
	const QImage__Format_RGB444: number;
	const QImage__Format_ARGB4444_Premultiplied: number;
	const QImage__Format_RGBX8888: number;
	const QImage__Format_RGBA8888: number;
	const QImage__Format_RGBA8888_Premultiplied: number;
	const QImage__Format_BGR30: number;
	const QImage__Format_A2BGR30_Premultiplied: number;
	const QImage__Format_RGB30: number;
	const QImage__Format_A2RGB30_Premultiplied: number;
	const QImage__Format_Alpha8: number;
	const QImage__Format_Grayscale8: number;
	const QImage__Format_RGBX64: number;
	const QImage__Format_RGBA64: number;
	const QImage__Format_RGBA64_Premultiplied: number;
	const QImage__Format_Grayscale16: number;
	const QImageIOHandler__Size: number;
	const QImageIOHandler__ClipRect: number;
	const QImageIOHandler__Description: number;
	const QImageIOHandler__ScaledClipRect: number;
	const QImageIOHandler__ScaledSize: number;
	const QImageIOHandler__CompressionRatio: number;
	const QImageIOHandler__Gamma: number;
	const QImageIOHandler__Quality: number;
	const QImageIOHandler__Name: number;
	const QImageIOHandler__SubType: number;
	const QImageIOHandler__IncrementalReading: number;
	const QImageIOHandler__Endianness: number;
	const QImageIOHandler__Animation: number;
	const QImageIOHandler__BackgroundColor: number;
	const QImageIOHandler__ImageFormat: number;
	const QImageIOHandler__SupportedSubTypes: number;
	const QImageIOHandler__OptimizedWrite: number;
	const QImageIOHandler__ProgressiveScanWrite: number;
	const QImageIOHandler__ImageTransformation: number;
	const QImageIOHandler__TransformedByDefault: number;
	const QImageIOHandler__TransformationNone: number;
	const QImageIOHandler__TransformationMirror: number;
	const QImageIOHandler__TransformationFlip: number;
	const QImageIOHandler__TransformationRotate180: number;
	const QImageIOHandler__TransformationRotate90: number;
	const QImageIOHandler__TransformationMirrorAndRotate90: number;
	const QImageIOHandler__TransformationFlipAndRotate90: number;
	const QImageIOHandler__TransformationRotate270: number;
	const QImageIOPlugin__CanRead: number;
	const QImageIOPlugin__CanWrite: number;
	const QImageIOPlugin__CanReadIncremental: number;
	const QImageReader__UnknownError: number;
	const QImageReader__FileNotFoundError: number;
	const QImageReader__DeviceError: number;
	const QImageReader__UnsupportedFormatError: number;
	const QImageReader__InvalidDataError: number;
	interface QImageTextKeyLang_ITF {
		QImageTextKeyLang_PTR():QImageTextKeyLang;
	}

	class QImageTextKeyLang {
		___pointer: number;
		QImageTextKeyLang_PTR():QImageTextKeyLang;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQImageTextKeyLang():void;
	}
	function NewQImageTextKeyLangFromPointer(ptr:number):QImageTextKeyLang;
	const QImageWriter__UnknownError: number;
	const QImageWriter__DeviceError: number;
	const QImageWriter__UnsupportedFormatError: number;
	const QImageWriter__InvalidImageError: number;
	interface QInputEvent_ITF extends core.QEvent_ITF {
		QInputEvent_PTR():QInputEvent;
	}

	class QInputEvent extends core.QEvent {
		___pointer: number;
		QInputEvent_PTR():QInputEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQInputEvent():void;
	}
	function NewQInputEventFromPointer(ptr:number):QInputEvent;
	const QInputMethod__Click: number;
	const QInputMethod__ContextMenu: number;
	const QInputMethodEvent__TextFormat: number;
	const QInputMethodEvent__Cursor: number;
	const QInputMethodEvent__Language: number;
	const QInputMethodEvent__Ruby: number;
	const QInputMethodEvent__Selection: number;
	interface QIntValidator_ITF extends QValidator_ITF {
		QIntValidator_PTR():QIntValidator;
	}

	class QIntValidator extends QValidator {
		___pointer: number;
		QIntValidator_PTR():QIntValidator;
		Pointer():number;
		SetPointer(p:number):void;
		Bottom():number;
		ConnectSetRange(f:(bottom:number,top:number)=>void):void;
		DisconnectSetRange():void;
		SetRange(bottom:number,top:number):void;
		SetRangeDefault(bottom:number,top:number):void;
		Top():number;
		ConnectDestroyQIntValidator(f:()=>void):void;
		DisconnectDestroyQIntValidator():void;
		DestroyQIntValidator():void;
		DestroyQIntValidatorDefault():void;
		Validate(input:string,pos:number):number;
		ValidateDefault(input:string,pos:number):number;
	}
	function NewQIntValidatorFromPointer(ptr:number):QIntValidator;
	function NewQIntValidator(parent:core.QObject_ITF):QIntValidator;
	function NewQIntValidator2(minimum:number,maximum:number,parent:core.QObject_ITF):QIntValidator;
	interface QKeySequence_ITF {
		QKeySequence_PTR():QKeySequence;
	}

	class QKeySequence {
		___pointer: number;
		QKeySequence_PTR():QKeySequence;
		Pointer():number;
		SetPointer(p:number):void;
		Count():number;
		IsEmpty():boolean;
		ToString(format:number):string;
		DestroyQKeySequence():void;
	}
	function NewQKeySequenceFromPointer(ptr:number):QKeySequence;
	function NewQKeySequence():QKeySequence;
	function NewQKeySequence2(key:string,format:number):QKeySequence;
	function NewQKeySequence3(k1:number,k2:number,k3:number,k4:number):QKeySequence;
	function NewQKeySequence4(keysequence:QKeySequence_ITF):QKeySequence;
	function NewQKeySequence5(key:number):QKeySequence;
	const QKeySequence__UnknownKey: number;
	const QKeySequence__HelpContents: number;
	const QKeySequence__WhatsThis: number;
	const QKeySequence__Open: number;
	const QKeySequence__Close: number;
	const QKeySequence__Save: number;
	const QKeySequence__New: number;
	const QKeySequence__Delete: number;
	const QKeySequence__Cut: number;
	const QKeySequence__Copy: number;
	const QKeySequence__Paste: number;
	const QKeySequence__Undo: number;
	const QKeySequence__Redo: number;
	const QKeySequence__Back: number;
	const QKeySequence__Forward: number;
	const QKeySequence__Refresh: number;
	const QKeySequence__ZoomIn: number;
	const QKeySequence__ZoomOut: number;
	const QKeySequence__Print: number;
	const QKeySequence__AddTab: number;
	const QKeySequence__NextChild: number;
	const QKeySequence__PreviousChild: number;
	const QKeySequence__Find: number;
	const QKeySequence__FindNext: number;
	const QKeySequence__FindPrevious: number;
	const QKeySequence__Replace: number;
	const QKeySequence__SelectAll: number;
	const QKeySequence__Bold: number;
	const QKeySequence__Italic: number;
	const QKeySequence__Underline: number;
	const QKeySequence__MoveToNextChar: number;
	const QKeySequence__MoveToPreviousChar: number;
	const QKeySequence__MoveToNextWord: number;
	const QKeySequence__MoveToPreviousWord: number;
	const QKeySequence__MoveToNextLine: number;
	const QKeySequence__MoveToPreviousLine: number;
	const QKeySequence__MoveToNextPage: number;
	const QKeySequence__MoveToPreviousPage: number;
	const QKeySequence__MoveToStartOfLine: number;
	const QKeySequence__MoveToEndOfLine: number;
	const QKeySequence__MoveToStartOfBlock: number;
	const QKeySequence__MoveToEndOfBlock: number;
	const QKeySequence__MoveToStartOfDocument: number;
	const QKeySequence__MoveToEndOfDocument: number;
	const QKeySequence__SelectNextChar: number;
	const QKeySequence__SelectPreviousChar: number;
	const QKeySequence__SelectNextWord: number;
	const QKeySequence__SelectPreviousWord: number;
	const QKeySequence__SelectNextLine: number;
	const QKeySequence__SelectPreviousLine: number;
	const QKeySequence__SelectNextPage: number;
	const QKeySequence__SelectPreviousPage: number;
	const QKeySequence__SelectStartOfLine: number;
	const QKeySequence__SelectEndOfLine: number;
	const QKeySequence__SelectStartOfBlock: number;
	const QKeySequence__SelectEndOfBlock: number;
	const QKeySequence__SelectStartOfDocument: number;
	const QKeySequence__SelectEndOfDocument: number;
	const QKeySequence__DeleteStartOfWord: number;
	const QKeySequence__DeleteEndOfWord: number;
	const QKeySequence__DeleteEndOfLine: number;
	const QKeySequence__InsertParagraphSeparator: number;
	const QKeySequence__InsertLineSeparator: number;
	const QKeySequence__SaveAs: number;
	const QKeySequence__Preferences: number;
	const QKeySequence__Quit: number;
	const QKeySequence__FullScreen: number;
	const QKeySequence__Deselect: number;
	const QKeySequence__DeleteCompleteLine: number;
	const QKeySequence__Backspace: number;
	const QKeySequence__Cancel: number;
	const QKeySequence__NativeText: number;
	const QKeySequence__PortableText: number;
	const QKeySequence__NoMatch: number;
	const QKeySequence__PartialMatch: number;
	const QKeySequence__ExactMatch: number;
	interface QMatrix_ITF {
		QMatrix_PTR():QMatrix;
	}

	class QMatrix {
		___pointer: number;
		QMatrix_PTR():QMatrix;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQMatrix():void;
		Dy():number;
		Map(x:number,y:number,tx:number,ty:number):void;
		Map2(x:number,y:number,tx:number,ty:number):void;
		Map3(point:core.QPoint_ITF):core.QPoint;
		Map4(point:core.QPointF_ITF):core.QPointF;
		Map5(line:core.QLine_ITF):core.QLine;
		Map6(line:core.QLineF_ITF):core.QLineF;
		Map7(polygon:QPolygonF_ITF):QPolygonF;
		Map8(polygon:QPolygon_ITF):QPolygon;
		Map9(region:QRegion_ITF):QRegion;
		Map10(path:QPainterPath_ITF):QPainterPath;
		Reset():void;
		Scale(sx:number,sy:number):QMatrix;
	}
	function NewQMatrixFromPointer(ptr:number):QMatrix;
	function NewQMatrix2():QMatrix;
	function NewQMatrix3(m11:number,m12:number,m21:number,m22:number,dx:number,dy:number):QMatrix;
	function NewQMatrix5(matrix:QMatrix_ITF):QMatrix;
	function NewQMatrix4x4():QMatrix4x4;
	function NewQMatrix4x43(values:number):QMatrix4x4;
	function NewQMatrix4x44(m11:number,m12:number,m13:number,m14:number,m21:number,m22:number,m23:number,m24:number,m31:number,m32:number,m33:number,m34:number,m41:number,m42:number,m43:number,m44:number):QMatrix4x4;
	function NewQMatrix4x46(matrix:QMatrix_ITF):QMatrix4x4;
	interface QMatrix4x4_ITF {
		QMatrix4x4_PTR():QMatrix4x4;
	}

	class QMatrix4x4 {
		___pointer: number;
		QMatrix4x4_PTR():QMatrix4x4;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQMatrix4x4():void;
		Column(index:number):QVector4D;
		ConstData():number;
		Data():number;
		Data2():number;
		Fill(value:number):void;
		Map(point:core.QPoint_ITF):core.QPoint;
		Map2(point:core.QPointF_ITF):core.QPointF;
		Map3(point:QVector3D_ITF):QVector3D;
		Map4(point:QVector4D_ITF):QVector4D;
		Row(index:number):QVector4D;
		Scale(vector:QVector3D_ITF):void;
		Scale2(x:number,y:number):void;
		Scale3(x:number,y:number,z:number):void;
		Scale4(factor:number):void;
		SetColumn(index:number,value:QVector4D_ITF):void;
		SetRow(index:number,value:QVector4D_ITF):void;
	}
	function NewQMatrix4x4FromPointer(ptr:number):QMatrix4x4;
	function NewQMatrix4x4():QMatrix4x4;
	function NewQMatrix4x43(values:number):QMatrix4x4;
	function NewQMatrix4x44(m11:number,m12:number,m13:number,m14:number,m21:number,m22:number,m23:number,m24:number,m31:number,m32:number,m33:number,m34:number,m41:number,m42:number,m43:number,m44:number):QMatrix4x4;
	function NewQMatrix4x46(matrix:QMatrix_ITF):QMatrix4x4;
	interface QMouseEvent_ITF extends QInputEvent_ITF {
		QMouseEvent_PTR():QMouseEvent;
	}

	class QMouseEvent extends QInputEvent {
		___pointer: number;
		QMouseEvent_PTR():QMouseEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQMouseEvent():void;
		Button():number;
		Buttons():number;
		Flags():number;
		Pos():core.QPoint;
		Source():number;
		X():number;
		Y():number;
	}
	function NewQMouseEventFromPointer(ptr:number):QMouseEvent;
	function NewQMouseEvent(ty:number,localPos:core.QPointF_ITF,button:number,buttons:number,modifiers:number):QMouseEvent;
	function NewQMouseEvent2(ty:number,localPos:core.QPointF_ITF,screenPos:core.QPointF_ITF,button:number,buttons:number,modifiers:number):QMouseEvent;
	function NewQMouseEvent3(ty:number,localPos:core.QPointF_ITF,windowPos:core.QPointF_ITF,screenPos:core.QPointF_ITF,button:number,buttons:number,modifiers:number):QMouseEvent;
	function NewQMouseEvent4(ty:number,localPos:core.QPointF_ITF,windowPos:core.QPointF_ITF,screenPos:core.QPointF_ITF,button:number,buttons:number,modifiers:number,source:number):QMouseEvent;
	interface QMoveEvent_ITF extends core.QEvent_ITF {
		QMoveEvent_PTR():QMoveEvent;
	}

	class QMoveEvent extends core.QEvent {
		___pointer: number;
		QMoveEvent_PTR():QMoveEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQMoveEvent():void;
		Pos():core.QPoint;
	}
	function NewQMoveEventFromPointer(ptr:number):QMoveEvent;
	function NewQMoveEvent(pos:core.QPoint_ITF,oldPos:core.QPoint_ITF):QMoveEvent;
	interface QMovie_ITF extends core.QObject_ITF {
		QMovie_PTR():QMovie;
	}

	class QMovie extends core.QObject {
		___pointer: number;
		QMovie_PTR():QMovie;
		Pointer():number;
		SetPointer(p:number):void;
		Device():core.QIODevice;
		ConnectError(f:(error:number)=>void):void;
		DisconnectError():void;
		Error(error:number):void;
		FileName():string;
		Format():core.QByteArray;
		IsValid():boolean;
		SetFormat(format:core.QByteArray_ITF):void;
		ConnectStart(f:()=>void):void;
		DisconnectStart():void;
		Start():void;
		StartDefault():void;
		State():number;
		ConnectStateChanged(f:(state:number)=>void):void;
		DisconnectStateChanged():void;
		StateChanged(state:number):void;
		ConnectStop(f:()=>void):void;
		DisconnectStop():void;
		Stop():void;
		StopDefault():void;
		ConnectDestroyQMovie(f:()=>void):void;
		DisconnectDestroyQMovie():void;
		DestroyQMovie():void;
		DestroyQMovieDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQMovieFromPointer(ptr:number):QMovie;
	function NewQMovie(parent:core.QObject_ITF):QMovie;
	function NewQMovie2(device:core.QIODevice_ITF,format:core.QByteArray_ITF,parent:core.QObject_ITF):QMovie;
	function NewQMovie3(fileName:string,format:core.QByteArray_ITF,parent:core.QObject_ITF):QMovie;
	const QMovie__NotRunning: number;
	const QMovie__Paused: number;
	const QMovie__Running: number;
	const QMovie__CacheNone: number;
	const QMovie__CacheAll: number;
	const QOpenGLBuffer__VertexBuffer: number;
	const QOpenGLBuffer__IndexBuffer: number;
	const QOpenGLBuffer__PixelPackBuffer: number;
	const QOpenGLBuffer__PixelUnpackBuffer: number;
	const QOpenGLBuffer__StreamDraw: number;
	const QOpenGLBuffer__StreamRead: number;
	const QOpenGLBuffer__StreamCopy: number;
	const QOpenGLBuffer__StaticDraw: number;
	const QOpenGLBuffer__StaticRead: number;
	const QOpenGLBuffer__StaticCopy: number;
	const QOpenGLBuffer__DynamicDraw: number;
	const QOpenGLBuffer__DynamicRead: number;
	const QOpenGLBuffer__DynamicCopy: number;
	const QOpenGLBuffer__ReadOnly: number;
	const QOpenGLBuffer__WriteOnly: number;
	const QOpenGLBuffer__ReadWrite: number;
	const QOpenGLBuffer__RangeRead: number;
	const QOpenGLBuffer__RangeWrite: number;
	const QOpenGLBuffer__RangeInvalidate: number;
	const QOpenGLBuffer__RangeInvalidateBuffer: number;
	const QOpenGLBuffer__RangeFlushExplicit: number;
	const QOpenGLBuffer__RangeUnsynchronized: number;
	const QOpenGLContext__LibGL: number;
	const QOpenGLContext__LibGLES: number;
	const QOpenGLDebugLogger__AsynchronousLogging: number;
	const QOpenGLDebugLogger__SynchronousLogging: number;
	const QOpenGLDebugMessage__InvalidSource: number;
	const QOpenGLDebugMessage__APISource: number;
	const QOpenGLDebugMessage__WindowSystemSource: number;
	const QOpenGLDebugMessage__ShaderCompilerSource: number;
	const QOpenGLDebugMessage__ThirdPartySource: number;
	const QOpenGLDebugMessage__ApplicationSource: number;
	const QOpenGLDebugMessage__OtherSource: number;
	const QOpenGLDebugMessage__LastSource: number;
	const QOpenGLDebugMessage__AnySource: number;
	const QOpenGLDebugMessage__InvalidType: number;
	const QOpenGLDebugMessage__ErrorType: number;
	const QOpenGLDebugMessage__DeprecatedBehaviorType: number;
	const QOpenGLDebugMessage__UndefinedBehaviorType: number;
	const QOpenGLDebugMessage__PortabilityType: number;
	const QOpenGLDebugMessage__PerformanceType: number;
	const QOpenGLDebugMessage__OtherType: number;
	const QOpenGLDebugMessage__MarkerType: number;
	const QOpenGLDebugMessage__GroupPushType: number;
	const QOpenGLDebugMessage__GroupPopType: number;
	const QOpenGLDebugMessage__LastType: number;
	const QOpenGLDebugMessage__AnyType: number;
	const QOpenGLDebugMessage__InvalidSeverity: number;
	const QOpenGLDebugMessage__HighSeverity: number;
	const QOpenGLDebugMessage__MediumSeverity: number;
	const QOpenGLDebugMessage__LowSeverity: number;
	const QOpenGLDebugMessage__NotificationSeverity: number;
	const QOpenGLDebugMessage__LastSeverity: number;
	const QOpenGLDebugMessage__AnySeverity: number;
	const QOpenGLFramebufferObject__NoAttachment: number;
	const QOpenGLFramebufferObject__CombinedDepthStencil: number;
	const QOpenGLFramebufferObject__Depth: number;
	const QOpenGLFramebufferObject__DontRestoreFramebufferBinding: number;
	const QOpenGLFramebufferObject__RestoreFramebufferBindingToDefault: number;
	const QOpenGLFramebufferObject__RestoreFrameBufferBinding: number;
	const QOpenGLFunctions__Multitexture: number;
	const QOpenGLFunctions__Shaders: number;
	const QOpenGLFunctions__Buffers: number;
	const QOpenGLFunctions__Framebuffers: number;
	const QOpenGLFunctions__BlendColor: number;
	const QOpenGLFunctions__BlendEquation: number;
	const QOpenGLFunctions__BlendEquationSeparate: number;
	const QOpenGLFunctions__BlendFuncSeparate: number;
	const QOpenGLFunctions__BlendSubtract: number;
	const QOpenGLFunctions__CompressedTextures: number;
	const QOpenGLFunctions__Multisample: number;
	const QOpenGLFunctions__StencilSeparate: number;
	const QOpenGLFunctions__NPOTTextures: number;
	const QOpenGLFunctions__NPOTTextureRepeat: number;
	const QOpenGLFunctions__FixedFunctionPipeline: number;
	const QOpenGLFunctions__TextureRGFormats: number;
	const QOpenGLFunctions__MultipleRenderTargets: number;
	const QOpenGLFunctions__BlendEquationAdvanced: number;
	const QOpenGLShader__Vertex: number;
	const QOpenGLShader__Fragment: number;
	const QOpenGLShader__Geometry: number;
	const QOpenGLShader__TessellationControl: number;
	const QOpenGLShader__TessellationEvaluation: number;
	const QOpenGLShader__Compute: number;
	const QOpenGLTexture__Target1D: number;
	const QOpenGLTexture__Target1DArray: number;
	const QOpenGLTexture__Target2D: number;
	const QOpenGLTexture__Target2DArray: number;
	const QOpenGLTexture__Target3D: number;
	const QOpenGLTexture__TargetCubeMap: number;
	const QOpenGLTexture__TargetCubeMapArray: number;
	const QOpenGLTexture__Target2DMultisample: number;
	const QOpenGLTexture__Target2DMultisampleArray: number;
	const QOpenGLTexture__TargetRectangle: number;
	const QOpenGLTexture__TargetBuffer: number;
	const QOpenGLTexture__BindingTarget1D: number;
	const QOpenGLTexture__BindingTarget1DArray: number;
	const QOpenGLTexture__BindingTarget2D: number;
	const QOpenGLTexture__BindingTarget2DArray: number;
	const QOpenGLTexture__BindingTarget3D: number;
	const QOpenGLTexture__BindingTargetCubeMap: number;
	const QOpenGLTexture__BindingTargetCubeMapArray: number;
	const QOpenGLTexture__BindingTarget2DMultisample: number;
	const QOpenGLTexture__BindingTarget2DMultisampleArray: number;
	const QOpenGLTexture__BindingTargetRectangle: number;
	const QOpenGLTexture__BindingTargetBuffer: number;
	const QOpenGLTexture__GenerateMipMaps: number;
	const QOpenGLTexture__DontGenerateMipMaps: number;
	const QOpenGLTexture__ResetTextureUnit: number;
	const QOpenGLTexture__DontResetTextureUnit: number;
	const QOpenGLTexture__NoFormat: number;
	const QOpenGLTexture__R8_UNorm: number;
	const QOpenGLTexture__RG8_UNorm: number;
	const QOpenGLTexture__RGB8_UNorm: number;
	const QOpenGLTexture__RGBA8_UNorm: number;
	const QOpenGLTexture__R16_UNorm: number;
	const QOpenGLTexture__RG16_UNorm: number;
	const QOpenGLTexture__RGB16_UNorm: number;
	const QOpenGLTexture__RGBA16_UNorm: number;
	const QOpenGLTexture__R8_SNorm: number;
	const QOpenGLTexture__RG8_SNorm: number;
	const QOpenGLTexture__RGB8_SNorm: number;
	const QOpenGLTexture__RGBA8_SNorm: number;
	const QOpenGLTexture__R16_SNorm: number;
	const QOpenGLTexture__RG16_SNorm: number;
	const QOpenGLTexture__RGB16_SNorm: number;
	const QOpenGLTexture__RGBA16_SNorm: number;
	const QOpenGLTexture__R8U: number;
	const QOpenGLTexture__RG8U: number;
	const QOpenGLTexture__RGB8U: number;
	const QOpenGLTexture__RGBA8U: number;
	const QOpenGLTexture__R16U: number;
	const QOpenGLTexture__RG16U: number;
	const QOpenGLTexture__RGB16U: number;
	const QOpenGLTexture__RGBA16U: number;
	const QOpenGLTexture__R32U: number;
	const QOpenGLTexture__RG32U: number;
	const QOpenGLTexture__RGB32U: number;
	const QOpenGLTexture__RGBA32U: number;
	const QOpenGLTexture__R8I: number;
	const QOpenGLTexture__RG8I: number;
	const QOpenGLTexture__RGB8I: number;
	const QOpenGLTexture__RGBA8I: number;
	const QOpenGLTexture__R16I: number;
	const QOpenGLTexture__RG16I: number;
	const QOpenGLTexture__RGB16I: number;
	const QOpenGLTexture__RGBA16I: number;
	const QOpenGLTexture__R32I: number;
	const QOpenGLTexture__RG32I: number;
	const QOpenGLTexture__RGB32I: number;
	const QOpenGLTexture__RGBA32I: number;
	const QOpenGLTexture__R16F: number;
	const QOpenGLTexture__RG16F: number;
	const QOpenGLTexture__RGB16F: number;
	const QOpenGLTexture__RGBA16F: number;
	const QOpenGLTexture__R32F: number;
	const QOpenGLTexture__RG32F: number;
	const QOpenGLTexture__RGB32F: number;
	const QOpenGLTexture__RGBA32F: number;
	const QOpenGLTexture__RGB9E5: number;
	const QOpenGLTexture__RG11B10F: number;
	const QOpenGLTexture__RG3B2: number;
	const QOpenGLTexture__R5G6B5: number;
	const QOpenGLTexture__RGB5A1: number;
	const QOpenGLTexture__RGBA4: number;
	const QOpenGLTexture__RGB10A2: number;
	const QOpenGLTexture__D16: number;
	const QOpenGLTexture__D24: number;
	const QOpenGLTexture__D24S8: number;
	const QOpenGLTexture__D32: number;
	const QOpenGLTexture__D32F: number;
	const QOpenGLTexture__D32FS8X24: number;
	const QOpenGLTexture__S8: number;
	const QOpenGLTexture__RGB_DXT1: number;
	const QOpenGLTexture__RGBA_DXT1: number;
	const QOpenGLTexture__RGBA_DXT3: number;
	const QOpenGLTexture__RGBA_DXT5: number;
	const QOpenGLTexture__R_ATI1N_UNorm: number;
	const QOpenGLTexture__R_ATI1N_SNorm: number;
	const QOpenGLTexture__RG_ATI2N_UNorm: number;
	const QOpenGLTexture__RG_ATI2N_SNorm: number;
	const QOpenGLTexture__RGB_BP_UNSIGNED_FLOAT: number;
	const QOpenGLTexture__RGB_BP_SIGNED_FLOAT: number;
	const QOpenGLTexture__RGB_BP_UNorm: number;
	const QOpenGLTexture__R11_EAC_UNorm: number;
	const QOpenGLTexture__R11_EAC_SNorm: number;
	const QOpenGLTexture__RG11_EAC_UNorm: number;
	const QOpenGLTexture__RG11_EAC_SNorm: number;
	const QOpenGLTexture__RGB8_ETC2: number;
	const QOpenGLTexture__SRGB8_ETC2: number;
	const QOpenGLTexture__RGB8_PunchThrough_Alpha1_ETC2: number;
	const QOpenGLTexture__SRGB8_PunchThrough_Alpha1_ETC2: number;
	const QOpenGLTexture__RGBA8_ETC2_EAC: number;
	const QOpenGLTexture__SRGB8_Alpha8_ETC2_EAC: number;
	const QOpenGLTexture__RGB8_ETC1: number;
	const QOpenGLTexture__RGBA_ASTC_4x4: number;
	const QOpenGLTexture__RGBA_ASTC_5x4: number;
	const QOpenGLTexture__RGBA_ASTC_5x5: number;
	const QOpenGLTexture__RGBA_ASTC_6x5: number;
	const QOpenGLTexture__RGBA_ASTC_6x6: number;
	const QOpenGLTexture__RGBA_ASTC_8x5: number;
	const QOpenGLTexture__RGBA_ASTC_8x6: number;
	const QOpenGLTexture__RGBA_ASTC_8x8: number;
	const QOpenGLTexture__RGBA_ASTC_10x5: number;
	const QOpenGLTexture__RGBA_ASTC_10x6: number;
	const QOpenGLTexture__RGBA_ASTC_10x8: number;
	const QOpenGLTexture__RGBA_ASTC_10x10: number;
	const QOpenGLTexture__RGBA_ASTC_12x10: number;
	const QOpenGLTexture__RGBA_ASTC_12x12: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_4x4: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_5x4: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_5x5: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_6x5: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_6x6: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_8x5: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_8x6: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_8x8: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_10x5: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_10x6: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_10x8: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_10x10: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_12x10: number;
	const QOpenGLTexture__SRGB8_Alpha8_ASTC_12x12: number;
	const QOpenGLTexture__SRGB8: number;
	const QOpenGLTexture__SRGB8_Alpha8: number;
	const QOpenGLTexture__SRGB_DXT1: number;
	const QOpenGLTexture__SRGB_Alpha_DXT1: number;
	const QOpenGLTexture__SRGB_Alpha_DXT3: number;
	const QOpenGLTexture__SRGB_Alpha_DXT5: number;
	const QOpenGLTexture__SRGB_BP_UNorm: number;
	const QOpenGLTexture__DepthFormat: number;
	const QOpenGLTexture__AlphaFormat: number;
	const QOpenGLTexture__RGBFormat: number;
	const QOpenGLTexture__RGBAFormat: number;
	const QOpenGLTexture__LuminanceFormat: number;
	const QOpenGLTexture__LuminanceAlphaFormat: number;
	const QOpenGLTexture__CubeMapPositiveX: number;
	const QOpenGLTexture__CubeMapNegativeX: number;
	const QOpenGLTexture__CubeMapPositiveY: number;
	const QOpenGLTexture__CubeMapNegativeY: number;
	const QOpenGLTexture__CubeMapPositiveZ: number;
	const QOpenGLTexture__CubeMapNegativeZ: number;
	const QOpenGLTexture__NoSourceFormat: number;
	const QOpenGLTexture__Red: number;
	const QOpenGLTexture__RG: number;
	const QOpenGLTexture__RGB: number;
	const QOpenGLTexture__BGR: number;
	const QOpenGLTexture__RGBA: number;
	const QOpenGLTexture__BGRA: number;
	const QOpenGLTexture__Red_Integer: number;
	const QOpenGLTexture__RG_Integer: number;
	const QOpenGLTexture__RGB_Integer: number;
	const QOpenGLTexture__BGR_Integer: number;
	const QOpenGLTexture__RGBA_Integer: number;
	const QOpenGLTexture__BGRA_Integer: number;
	const QOpenGLTexture__Stencil: number;
	const QOpenGLTexture__Depth: number;
	const QOpenGLTexture__DepthStencil: number;
	const QOpenGLTexture__Alpha: number;
	const QOpenGLTexture__Luminance: number;
	const QOpenGLTexture__LuminanceAlpha: number;
	const QOpenGLTexture__NoPixelType: number;
	const QOpenGLTexture__Int8: number;
	const QOpenGLTexture__UInt8: number;
	const QOpenGLTexture__Int16: number;
	const QOpenGLTexture__UInt16: number;
	const QOpenGLTexture__Int32: number;
	const QOpenGLTexture__UInt32: number;
	const QOpenGLTexture__Float16: number;
	const QOpenGLTexture__Float16OES: number;
	const QOpenGLTexture__Float32: number;
	const QOpenGLTexture__UInt32_RGB9_E5: number;
	const QOpenGLTexture__UInt32_RG11B10F: number;
	const QOpenGLTexture__UInt8_RG3B2: number;
	const QOpenGLTexture__UInt8_RG3B2_Rev: number;
	const QOpenGLTexture__UInt16_RGB5A1: number;
	const QOpenGLTexture__UInt16_RGB5A1_Rev: number;
	const QOpenGLTexture__UInt16_R5G6B5: number;
	const QOpenGLTexture__UInt16_R5G6B5_Rev: number;
	const QOpenGLTexture__UInt16_RGBA4: number;
	const QOpenGLTexture__UInt16_RGBA4_Rev: number;
	const QOpenGLTexture__UInt32_RGBA8: number;
	const QOpenGLTexture__UInt32_RGBA8_Rev: number;
	const QOpenGLTexture__UInt32_RGB10A2: number;
	const QOpenGLTexture__UInt32_RGB10A2_Rev: number;
	const QOpenGLTexture__UInt32_D24S8: number;
	const QOpenGLTexture__Float32_D32_UInt32_S8_X24: number;
	const QOpenGLTexture__SwizzleRed: number;
	const QOpenGLTexture__SwizzleGreen: number;
	const QOpenGLTexture__SwizzleBlue: number;
	const QOpenGLTexture__SwizzleAlpha: number;
	const QOpenGLTexture__RedValue: number;
	const QOpenGLTexture__GreenValue: number;
	const QOpenGLTexture__BlueValue: number;
	const QOpenGLTexture__AlphaValue: number;
	const QOpenGLTexture__ZeroValue: number;
	const QOpenGLTexture__OneValue: number;
	const QOpenGLTexture__Repeat: number;
	const QOpenGLTexture__MirroredRepeat: number;
	const QOpenGLTexture__ClampToEdge: number;
	const QOpenGLTexture__ClampToBorder: number;
	const QOpenGLTexture__DirectionS: number;
	const QOpenGLTexture__DirectionT: number;
	const QOpenGLTexture__DirectionR: number;
	const QOpenGLTexture__ImmutableStorage: number;
	const QOpenGLTexture__ImmutableMultisampleStorage: number;
	const QOpenGLTexture__TextureRectangle: number;
	const QOpenGLTexture__TextureArrays: number;
	const QOpenGLTexture__Texture3D: number;
	const QOpenGLTexture__TextureMultisample: number;
	const QOpenGLTexture__TextureBuffer: number;
	const QOpenGLTexture__TextureCubeMapArrays: number;
	const QOpenGLTexture__Swizzle: number;
	const QOpenGLTexture__StencilTexturing: number;
	const QOpenGLTexture__AnisotropicFiltering: number;
	const QOpenGLTexture__NPOTTextures: number;
	const QOpenGLTexture__NPOTTextureRepeat: number;
	const QOpenGLTexture__Texture1D: number;
	const QOpenGLTexture__TextureComparisonOperators: number;
	const QOpenGLTexture__TextureMipMapLevel: number;
	const QOpenGLTexture__DepthMode: number;
	const QOpenGLTexture__StencilMode: number;
	const QOpenGLTexture__CompareLessEqual: number;
	const QOpenGLTexture__CompareGreaterEqual: number;
	const QOpenGLTexture__CompareLess: number;
	const QOpenGLTexture__CompareGreater: number;
	const QOpenGLTexture__CompareEqual: number;
	const QOpenGLTexture__CommpareNotEqual: number;
	const QOpenGLTexture__CompareAlways: number;
	const QOpenGLTexture__CompareNever: number;
	const QOpenGLTexture__CompareRefToTexture: number;
	const QOpenGLTexture__CompareNone: number;
	const QOpenGLTexture__Nearest: number;
	const QOpenGLTexture__Linear: number;
	const QOpenGLTexture__NearestMipMapNearest: number;
	const QOpenGLTexture__NearestMipMapLinear: number;
	const QOpenGLTexture__LinearMipMapNearest: number;
	const QOpenGLTexture__LinearMipMapLinear: number;
	const QOpenGLTextureBlitter__OriginBottomLeft: number;
	const QOpenGLTextureBlitter__OriginTopLeft: number;
	const QOpenGLWindow__NoPartialUpdate: number;
	const QOpenGLWindow__PartialUpdateBlit: number;
	const QOpenGLWindow__PartialUpdateBlend: number;
	const QPageLayout__Millimeter: number;
	const QPageLayout__Point: number;
	const QPageLayout__Inch: number;
	const QPageLayout__Pica: number;
	const QPageLayout__Didot: number;
	const QPageLayout__Cicero: number;
	const QPageLayout__Portrait: number;
	const QPageLayout__Landscape: number;
	const QPageLayout__StandardMode: number;
	const QPageLayout__FullPageMode: number;
	const QPageSize__A4: number;
	const QPageSize__B5: number;
	const QPageSize__Letter: number;
	const QPageSize__Legal: number;
	const QPageSize__Executive: number;
	const QPageSize__A0: number;
	const QPageSize__A1: number;
	const QPageSize__A2: number;
	const QPageSize__A3: number;
	const QPageSize__A5: number;
	const QPageSize__A6: number;
	const QPageSize__A7: number;
	const QPageSize__A8: number;
	const QPageSize__A9: number;
	const QPageSize__B0: number;
	const QPageSize__B1: number;
	const QPageSize__B10: number;
	const QPageSize__B2: number;
	const QPageSize__B3: number;
	const QPageSize__B4: number;
	const QPageSize__B6: number;
	const QPageSize__B7: number;
	const QPageSize__B8: number;
	const QPageSize__B9: number;
	const QPageSize__C5E: number;
	const QPageSize__Comm10E: number;
	const QPageSize__DLE: number;
	const QPageSize__Folio: number;
	const QPageSize__Ledger: number;
	const QPageSize__Tabloid: number;
	const QPageSize__Custom: number;
	const QPageSize__A10: number;
	const QPageSize__A3Extra: number;
	const QPageSize__A4Extra: number;
	const QPageSize__A4Plus: number;
	const QPageSize__A4Small: number;
	const QPageSize__A5Extra: number;
	const QPageSize__B5Extra: number;
	const QPageSize__JisB0: number;
	const QPageSize__JisB1: number;
	const QPageSize__JisB2: number;
	const QPageSize__JisB3: number;
	const QPageSize__JisB4: number;
	const QPageSize__JisB5: number;
	const QPageSize__JisB6: number;
	const QPageSize__JisB7: number;
	const QPageSize__JisB8: number;
	const QPageSize__JisB9: number;
	const QPageSize__JisB10: number;
	const QPageSize__AnsiC: number;
	const QPageSize__AnsiD: number;
	const QPageSize__AnsiE: number;
	const QPageSize__LegalExtra: number;
	const QPageSize__LetterExtra: number;
	const QPageSize__LetterPlus: number;
	const QPageSize__LetterSmall: number;
	const QPageSize__TabloidExtra: number;
	const QPageSize__ArchA: number;
	const QPageSize__ArchB: number;
	const QPageSize__ArchC: number;
	const QPageSize__ArchD: number;
	const QPageSize__ArchE: number;
	const QPageSize__Imperial7x9: number;
	const QPageSize__Imperial8x10: number;
	const QPageSize__Imperial9x11: number;
	const QPageSize__Imperial9x12: number;
	const QPageSize__Imperial10x11: number;
	const QPageSize__Imperial10x13: number;
	const QPageSize__Imperial10x14: number;
	const QPageSize__Imperial12x11: number;
	const QPageSize__Imperial15x11: number;
	const QPageSize__ExecutiveStandard: number;
	const QPageSize__Note: number;
	const QPageSize__Quarto: number;
	const QPageSize__Statement: number;
	const QPageSize__SuperA: number;
	const QPageSize__SuperB: number;
	const QPageSize__Postcard: number;
	const QPageSize__DoublePostcard: number;
	const QPageSize__Prc16K: number;
	const QPageSize__Prc32K: number;
	const QPageSize__Prc32KBig: number;
	const QPageSize__FanFoldUS: number;
	const QPageSize__FanFoldGerman: number;
	const QPageSize__FanFoldGermanLegal: number;
	const QPageSize__EnvelopeB4: number;
	const QPageSize__EnvelopeB5: number;
	const QPageSize__EnvelopeB6: number;
	const QPageSize__EnvelopeC0: number;
	const QPageSize__EnvelopeC1: number;
	const QPageSize__EnvelopeC2: number;
	const QPageSize__EnvelopeC3: number;
	const QPageSize__EnvelopeC4: number;
	const QPageSize__EnvelopeC6: number;
	const QPageSize__EnvelopeC65: number;
	const QPageSize__EnvelopeC7: number;
	const QPageSize__Envelope9: number;
	const QPageSize__Envelope11: number;
	const QPageSize__Envelope12: number;
	const QPageSize__Envelope14: number;
	const QPageSize__EnvelopeMonarch: number;
	const QPageSize__EnvelopePersonal: number;
	const QPageSize__EnvelopeChou3: number;
	const QPageSize__EnvelopeChou4: number;
	const QPageSize__EnvelopeInvite: number;
	const QPageSize__EnvelopeItalian: number;
	const QPageSize__EnvelopeKaku2: number;
	const QPageSize__EnvelopeKaku3: number;
	const QPageSize__EnvelopePrc1: number;
	const QPageSize__EnvelopePrc2: number;
	const QPageSize__EnvelopePrc3: number;
	const QPageSize__EnvelopePrc4: number;
	const QPageSize__EnvelopePrc5: number;
	const QPageSize__EnvelopePrc6: number;
	const QPageSize__EnvelopePrc7: number;
	const QPageSize__EnvelopePrc8: number;
	const QPageSize__EnvelopePrc9: number;
	const QPageSize__EnvelopePrc10: number;
	const QPageSize__EnvelopeYou4: number;
	const QPageSize__LastPageSize: number;
	const QPageSize__NPageSize: number;
	const QPageSize__NPaperSize: number;
	const QPageSize__AnsiA: number;
	const QPageSize__AnsiB: number;
	const QPageSize__EnvelopeC5: number;
	const QPageSize__EnvelopeDL: number;
	const QPageSize__Envelope10: number;
	const QPageSize__Millimeter: number;
	const QPageSize__Point: number;
	const QPageSize__Inch: number;
	const QPageSize__Pica: number;
	const QPageSize__Didot: number;
	const QPageSize__Cicero: number;
	const QPageSize__FuzzyMatch: number;
	const QPageSize__FuzzyOrientationMatch: number;
	const QPageSize__ExactMatch: number;
	interface QPagedPaintDevice_ITF extends QPaintDevice_ITF {
		QPagedPaintDevice_PTR():QPagedPaintDevice;
	}

	class QPagedPaintDevice extends QPaintDevice {
		___pointer: number;
		QPagedPaintDevice_PTR():QPagedPaintDevice;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectNewPage(f:()=>boolean):void;
		DisconnectNewPage():void;
		NewPage():boolean;
		ConnectDestroyQPagedPaintDevice(f:()=>void):void;
		DisconnectDestroyQPagedPaintDevice():void;
		DestroyQPagedPaintDevice():void;
		DestroyQPagedPaintDeviceDefault():void;
		PaintEngine():QPaintEngine;
		PaintEngineDefault():QPaintEngine;
	}
	function NewQPagedPaintDeviceFromPointer(ptr:number):QPagedPaintDevice;
	const QPagedPaintDevice__A4: number;
	const QPagedPaintDevice__B5: number;
	const QPagedPaintDevice__Letter: number;
	const QPagedPaintDevice__Legal: number;
	const QPagedPaintDevice__Executive: number;
	const QPagedPaintDevice__A0: number;
	const QPagedPaintDevice__A1: number;
	const QPagedPaintDevice__A2: number;
	const QPagedPaintDevice__A3: number;
	const QPagedPaintDevice__A5: number;
	const QPagedPaintDevice__A6: number;
	const QPagedPaintDevice__A7: number;
	const QPagedPaintDevice__A8: number;
	const QPagedPaintDevice__A9: number;
	const QPagedPaintDevice__B0: number;
	const QPagedPaintDevice__B1: number;
	const QPagedPaintDevice__B10: number;
	const QPagedPaintDevice__B2: number;
	const QPagedPaintDevice__B3: number;
	const QPagedPaintDevice__B4: number;
	const QPagedPaintDevice__B6: number;
	const QPagedPaintDevice__B7: number;
	const QPagedPaintDevice__B8: number;
	const QPagedPaintDevice__B9: number;
	const QPagedPaintDevice__C5E: number;
	const QPagedPaintDevice__Comm10E: number;
	const QPagedPaintDevice__DLE: number;
	const QPagedPaintDevice__Folio: number;
	const QPagedPaintDevice__Ledger: number;
	const QPagedPaintDevice__Tabloid: number;
	const QPagedPaintDevice__Custom: number;
	const QPagedPaintDevice__A10: number;
	const QPagedPaintDevice__A3Extra: number;
	const QPagedPaintDevice__A4Extra: number;
	const QPagedPaintDevice__A4Plus: number;
	const QPagedPaintDevice__A4Small: number;
	const QPagedPaintDevice__A5Extra: number;
	const QPagedPaintDevice__B5Extra: number;
	const QPagedPaintDevice__JisB0: number;
	const QPagedPaintDevice__JisB1: number;
	const QPagedPaintDevice__JisB2: number;
	const QPagedPaintDevice__JisB3: number;
	const QPagedPaintDevice__JisB4: number;
	const QPagedPaintDevice__JisB5: number;
	const QPagedPaintDevice__JisB6: number;
	const QPagedPaintDevice__JisB7: number;
	const QPagedPaintDevice__JisB8: number;
	const QPagedPaintDevice__JisB9: number;
	const QPagedPaintDevice__JisB10: number;
	const QPagedPaintDevice__AnsiC: number;
	const QPagedPaintDevice__AnsiD: number;
	const QPagedPaintDevice__AnsiE: number;
	const QPagedPaintDevice__LegalExtra: number;
	const QPagedPaintDevice__LetterExtra: number;
	const QPagedPaintDevice__LetterPlus: number;
	const QPagedPaintDevice__LetterSmall: number;
	const QPagedPaintDevice__TabloidExtra: number;
	const QPagedPaintDevice__ArchA: number;
	const QPagedPaintDevice__ArchB: number;
	const QPagedPaintDevice__ArchC: number;
	const QPagedPaintDevice__ArchD: number;
	const QPagedPaintDevice__ArchE: number;
	const QPagedPaintDevice__Imperial7x9: number;
	const QPagedPaintDevice__Imperial8x10: number;
	const QPagedPaintDevice__Imperial9x11: number;
	const QPagedPaintDevice__Imperial9x12: number;
	const QPagedPaintDevice__Imperial10x11: number;
	const QPagedPaintDevice__Imperial10x13: number;
	const QPagedPaintDevice__Imperial10x14: number;
	const QPagedPaintDevice__Imperial12x11: number;
	const QPagedPaintDevice__Imperial15x11: number;
	const QPagedPaintDevice__ExecutiveStandard: number;
	const QPagedPaintDevice__Note: number;
	const QPagedPaintDevice__Quarto: number;
	const QPagedPaintDevice__Statement: number;
	const QPagedPaintDevice__SuperA: number;
	const QPagedPaintDevice__SuperB: number;
	const QPagedPaintDevice__Postcard: number;
	const QPagedPaintDevice__DoublePostcard: number;
	const QPagedPaintDevice__Prc16K: number;
	const QPagedPaintDevice__Prc32K: number;
	const QPagedPaintDevice__Prc32KBig: number;
	const QPagedPaintDevice__FanFoldUS: number;
	const QPagedPaintDevice__FanFoldGerman: number;
	const QPagedPaintDevice__FanFoldGermanLegal: number;
	const QPagedPaintDevice__EnvelopeB4: number;
	const QPagedPaintDevice__EnvelopeB5: number;
	const QPagedPaintDevice__EnvelopeB6: number;
	const QPagedPaintDevice__EnvelopeC0: number;
	const QPagedPaintDevice__EnvelopeC1: number;
	const QPagedPaintDevice__EnvelopeC2: number;
	const QPagedPaintDevice__EnvelopeC3: number;
	const QPagedPaintDevice__EnvelopeC4: number;
	const QPagedPaintDevice__EnvelopeC6: number;
	const QPagedPaintDevice__EnvelopeC65: number;
	const QPagedPaintDevice__EnvelopeC7: number;
	const QPagedPaintDevice__Envelope9: number;
	const QPagedPaintDevice__Envelope11: number;
	const QPagedPaintDevice__Envelope12: number;
	const QPagedPaintDevice__Envelope14: number;
	const QPagedPaintDevice__EnvelopeMonarch: number;
	const QPagedPaintDevice__EnvelopePersonal: number;
	const QPagedPaintDevice__EnvelopeChou3: number;
	const QPagedPaintDevice__EnvelopeChou4: number;
	const QPagedPaintDevice__EnvelopeInvite: number;
	const QPagedPaintDevice__EnvelopeItalian: number;
	const QPagedPaintDevice__EnvelopeKaku2: number;
	const QPagedPaintDevice__EnvelopeKaku3: number;
	const QPagedPaintDevice__EnvelopePrc1: number;
	const QPagedPaintDevice__EnvelopePrc2: number;
	const QPagedPaintDevice__EnvelopePrc3: number;
	const QPagedPaintDevice__EnvelopePrc4: number;
	const QPagedPaintDevice__EnvelopePrc5: number;
	const QPagedPaintDevice__EnvelopePrc6: number;
	const QPagedPaintDevice__EnvelopePrc7: number;
	const QPagedPaintDevice__EnvelopePrc8: number;
	const QPagedPaintDevice__EnvelopePrc9: number;
	const QPagedPaintDevice__EnvelopePrc10: number;
	const QPagedPaintDevice__EnvelopeYou4: number;
	const QPagedPaintDevice__LastPageSize: number;
	const QPagedPaintDevice__NPageSize: number;
	const QPagedPaintDevice__NPaperSize: number;
	const QPagedPaintDevice__AnsiA: number;
	const QPagedPaintDevice__AnsiB: number;
	const QPagedPaintDevice__EnvelopeC5: number;
	const QPagedPaintDevice__EnvelopeDL: number;
	const QPagedPaintDevice__Envelope10: number;
	const QPagedPaintDevice__PdfVersion_1_4: number;
	const QPagedPaintDevice__PdfVersion_A1b: number;
	const QPagedPaintDevice__PdfVersion_1_6: number;
	interface QPaintDevice_ITF {
		QPaintDevice_PTR():QPaintDevice;
	}

	class QPaintDevice {
		___pointer: number;
		QPaintDevice_PTR():QPaintDevice;
		Pointer():number;
		SetPointer(p:number):void;
		Height():number;
		ConnectPaintEngine(f:()=>QPaintEngine):void;
		DisconnectPaintEngine():void;
		PaintEngine():QPaintEngine;
		Width():number;
		ConnectDestroyQPaintDevice(f:()=>void):void;
		DisconnectDestroyQPaintDevice():void;
		DestroyQPaintDevice():void;
		DestroyQPaintDeviceDefault():void;
	}
	function NewQPaintDeviceFromPointer(ptr:number):QPaintDevice;
	function NewQPaintDevice():QPaintDevice;
	const QPaintDevice__PdmWidth: number;
	const QPaintDevice__PdmHeight: number;
	const QPaintDevice__PdmWidthMM: number;
	const QPaintDevice__PdmHeightMM: number;
	const QPaintDevice__PdmNumColors: number;
	const QPaintDevice__PdmDepth: number;
	const QPaintDevice__PdmDpiX: number;
	const QPaintDevice__PdmDpiY: number;
	const QPaintDevice__PdmPhysicalDpiX: number;
	const QPaintDevice__PdmPhysicalDpiY: number;
	const QPaintDevice__PdmDevicePixelRatio: number;
	const QPaintDevice__PdmDevicePixelRatioScaled: number;
	interface QPaintEngine_ITF {
		QPaintEngine_PTR():QPaintEngine;
	}

	class QPaintEngine {
		___pointer: number;
		QPaintEngine_PTR():QPaintEngine;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectBegin(f:(pdev:QPaintDevice)=>boolean):void;
		DisconnectBegin():void;
		Begin(pdev:QPaintDevice_ITF):boolean;
		ConnectDrawPixmap(f:(r:core.QRectF,pm:QPixmap,sr:core.QRectF)=>void):void;
		DisconnectDrawPixmap():void;
		DrawPixmap(r:core.QRectF_ITF,pm:QPixmap_ITF,sr:core.QRectF_ITF):void;
		ConnectEnd(f:()=>boolean):void;
		DisconnectEnd():void;
		End():boolean;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		ConnectUpdateState(f:(state:QPaintEngineState)=>void):void;
		DisconnectUpdateState():void;
		UpdateState(state:QPaintEngineState_ITF):void;
		ConnectDestroyQPaintEngine(f:()=>void):void;
		DisconnectDestroyQPaintEngine():void;
		DestroyQPaintEngine():void;
		DestroyQPaintEngineDefault():void;
	}
	function NewQPaintEngineFromPointer(ptr:number):QPaintEngine;
	function NewQPaintEngine(caps:number):QPaintEngine;
	const QPaintEngine__PrimitiveTransform: number;
	const QPaintEngine__PatternTransform: number;
	const QPaintEngine__PixmapTransform: number;
	const QPaintEngine__PatternBrush: number;
	const QPaintEngine__LinearGradientFill: number;
	const QPaintEngine__RadialGradientFill: number;
	const QPaintEngine__ConicalGradientFill: number;
	const QPaintEngine__AlphaBlend: number;
	const QPaintEngine__PorterDuff: number;
	const QPaintEngine__PainterPaths: number;
	const QPaintEngine__Antialiasing: number;
	const QPaintEngine__BrushStroke: number;
	const QPaintEngine__ConstantOpacity: number;
	const QPaintEngine__MaskedBrush: number;
	const QPaintEngine__PerspectiveTransform: number;
	const QPaintEngine__BlendModes: number;
	const QPaintEngine__ObjectBoundingModeGradients: number;
	const QPaintEngine__RasterOpModes: number;
	const QPaintEngine__PaintOutsidePaintEvent: number;
	const QPaintEngine__AllFeatures: number;
	const QPaintEngine__DirtyPen: number;
	const QPaintEngine__DirtyBrush: number;
	const QPaintEngine__DirtyBrushOrigin: number;
	const QPaintEngine__DirtyFont: number;
	const QPaintEngine__DirtyBackground: number;
	const QPaintEngine__DirtyBackgroundMode: number;
	const QPaintEngine__DirtyTransform: number;
	const QPaintEngine__DirtyClipRegion: number;
	const QPaintEngine__DirtyClipPath: number;
	const QPaintEngine__DirtyHints: number;
	const QPaintEngine__DirtyCompositionMode: number;
	const QPaintEngine__DirtyClipEnabled: number;
	const QPaintEngine__DirtyOpacity: number;
	const QPaintEngine__AllDirty: number;
	const QPaintEngine__OddEvenMode: number;
	const QPaintEngine__WindingMode: number;
	const QPaintEngine__ConvexMode: number;
	const QPaintEngine__PolylineMode: number;
	const QPaintEngine__X11: number;
	const QPaintEngine__Windows: number;
	const QPaintEngine__QuickDraw: number;
	const QPaintEngine__CoreGraphics: number;
	const QPaintEngine__MacPrinter: number;
	const QPaintEngine__QWindowSystem: number;
	const QPaintEngine__PostScript: number;
	const QPaintEngine__OpenGL: number;
	const QPaintEngine__Picture: number;
	const QPaintEngine__SVG: number;
	const QPaintEngine__Raster: number;
	const QPaintEngine__Direct3D: number;
	const QPaintEngine__Pdf: number;
	const QPaintEngine__OpenVG: number;
	const QPaintEngine__OpenGL2: number;
	const QPaintEngine__PaintBuffer: number;
	const QPaintEngine__Blitter: number;
	const QPaintEngine__Direct2D: number;
	const QPaintEngine__User: number;
	const QPaintEngine__MaxUser: number;
	interface QPaintEngineState_ITF {
		QPaintEngineState_PTR():QPaintEngineState;
	}

	class QPaintEngineState {
		___pointer: number;
		QPaintEngineState_PTR():QPaintEngineState;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQPaintEngineState():void;
		Brush():QBrush;
		Font():QFont;
		Pen():QPen;
		State():number;
		Transform():QTransform;
	}
	function NewQPaintEngineStateFromPointer(ptr:number):QPaintEngineState;
	interface QPaintEvent_ITF extends core.QEvent_ITF {
		QPaintEvent_PTR():QPaintEvent;
	}

	class QPaintEvent extends core.QEvent {
		___pointer: number;
		QPaintEvent_PTR():QPaintEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQPaintEvent():void;
		Rect():core.QRect;
	}
	function NewQPaintEventFromPointer(ptr:number):QPaintEvent;
	function NewQPaintEvent(paintRegion:QRegion_ITF):QPaintEvent;
	function NewQPaintEvent2(paintRect:core.QRect_ITF):QPaintEvent;
	interface QPainter_ITF {
		QPainter_PTR():QPainter;
	}

	class QPainter {
		___pointer: number;
		QPainter_PTR():QPainter;
		Pointer():number;
		SetPointer(p:number):void;
		Background():QBrush;
		Begin(device:QPaintDevice_ITF):boolean;
		BoundingRect(rectangle:core.QRectF_ITF,flags:number,text:string):core.QRectF;
		BoundingRect2(rectangle:core.QRect_ITF,flags:number,text:string):core.QRect;
		BoundingRect3(x:number,y:number,w:number,h:number,flags:number,text:string):core.QRect;
		BoundingRect4(rectangle:core.QRectF_ITF,text:string,option:QTextOption_ITF):core.QRectF;
		Brush():QBrush;
		Device():QPaintDevice;
		End():boolean;
		Font():QFont;
		Pen():QPen;
		Save():void;
		Scale(sx:number,sy:number):void;
		SetBackground(brush:QBrush_ITF):void;
		SetFont(font:QFont_ITF):void;
		SetTransform(transform:QTransform_ITF,combine:boolean):void;
		SetWindow(rectangle:core.QRect_ITF):void;
		SetWindow2(x:number,y:number,width:number,height:number):void;
		Transform():QTransform;
		Window():core.QRect;
		DestroyQPainter():void;
	}
	function NewQPainterFromPointer(ptr:number):QPainter;
	function NewQPainter():QPainter;
	function NewQPainter2(device:QPaintDevice_ITF):QPainter;
	function NewQPainterPath():QPainterPath;
	function NewQPainterPath2(startPoint:core.QPointF_ITF):QPainterPath;
	function NewQPainterPath3(path:QPainterPath_ITF):QPainterPath;
	const QPainter__Antialiasing: number;
	const QPainter__TextAntialiasing: number;
	const QPainter__SmoothPixmapTransform: number;
	const QPainter__HighQualityAntialiasing: number;
	const QPainter__NonCosmeticDefaultPen: number;
	const QPainter__Qt4CompatiblePainting: number;
	const QPainter__LosslessImageRendering: number;
	const QPainter__OpaqueHint: number;
	const QPainter__CompositionMode_SourceOver: number;
	const QPainter__CompositionMode_DestinationOver: number;
	const QPainter__CompositionMode_Clear: number;
	const QPainter__CompositionMode_Source: number;
	const QPainter__CompositionMode_Destination: number;
	const QPainter__CompositionMode_SourceIn: number;
	const QPainter__CompositionMode_DestinationIn: number;
	const QPainter__CompositionMode_SourceOut: number;
	const QPainter__CompositionMode_DestinationOut: number;
	const QPainter__CompositionMode_SourceAtop: number;
	const QPainter__CompositionMode_DestinationAtop: number;
	const QPainter__CompositionMode_Xor: number;
	const QPainter__CompositionMode_Plus: number;
	const QPainter__CompositionMode_Multiply: number;
	const QPainter__CompositionMode_Screen: number;
	const QPainter__CompositionMode_Overlay: number;
	const QPainter__CompositionMode_Darken: number;
	const QPainter__CompositionMode_Lighten: number;
	const QPainter__CompositionMode_ColorDodge: number;
	const QPainter__CompositionMode_ColorBurn: number;
	const QPainter__CompositionMode_HardLight: number;
	const QPainter__CompositionMode_SoftLight: number;
	const QPainter__CompositionMode_Difference: number;
	const QPainter__CompositionMode_Exclusion: number;
	const QPainter__RasterOp_SourceOrDestination: number;
	const QPainter__RasterOp_SourceAndDestination: number;
	const QPainter__RasterOp_SourceXorDestination: number;
	const QPainter__RasterOp_NotSourceAndNotDestination: number;
	const QPainter__RasterOp_NotSourceOrNotDestination: number;
	const QPainter__RasterOp_NotSourceXorDestination: number;
	const QPainter__RasterOp_NotSource: number;
	const QPainter__RasterOp_NotSourceAndDestination: number;
	const QPainter__RasterOp_SourceAndNotDestination: number;
	const QPainter__RasterOp_NotSourceOrDestination: number;
	const QPainter__RasterOp_SourceOrNotDestination: number;
	const QPainter__RasterOp_ClearDestination: number;
	const QPainter__RasterOp_SetDestination: number;
	const QPainter__RasterOp_NotDestination: number;
	interface QPainterPath_ITF {
		QPainterPath_PTR():QPainterPath;
	}

	class QPainterPath {
		___pointer: number;
		QPainterPath_PTR():QPainterPath;
		Pointer():number;
		SetPointer(p:number):void;
		AddPath(path:QPainterPath_ITF):void;
		AddRect(rectangle:core.QRectF_ITF):void;
		AddRect2(x:number,y:number,width:number,height:number):void;
		AddText(point:core.QPointF_ITF,font:QFont_ITF,text:string):void;
		AddText2(x:number,y:number,font:QFont_ITF,text:string):void;
		BoundingRect():core.QRectF;
		Clear():void;
		Contains(point:core.QPointF_ITF):boolean;
		Contains2(rectangle:core.QRectF_ITF):boolean;
		Contains3(p:QPainterPath_ITF):boolean;
		IsEmpty():boolean;
		Length():number;
		DestroyQPainterPath():void;
	}
	function NewQPainterPathFromPointer(ptr:number):QPainterPath;
	function NewQPainterPath():QPainterPath;
	function NewQPainterPath2(startPoint:core.QPointF_ITF):QPainterPath;
	function NewQPainterPath3(path:QPainterPath_ITF):QPainterPath;
	const QPainterPath__MoveToElement: number;
	const QPainterPath__LineToElement: number;
	const QPainterPath__CurveToElement: number;
	const QPainterPath__CurveToDataElement: number;
	interface QPalette_ITF {
		QPalette_PTR():QPalette;
	}

	class QPalette {
		___pointer: number;
		QPalette_PTR():QPalette;
		Pointer():number;
		SetPointer(p:number):void;
		Base():QBrush;
		Brush(group:number,role:number):QBrush;
		Brush2(role:number):QBrush;
		Button():QBrush;
		Color(group:number,role:number):QColor;
		Color2(role:number):QColor;
		Dark():QBrush;
		Highlight():QBrush;
		Mid():QBrush;
		PlaceholderText():QBrush;
		Text():QBrush;
		Window():QBrush;
		DestroyQPalette():void;
	}
	function NewQPaletteFromPointer(ptr:number):QPalette;
	function NewQPalette():QPalette;
	function NewQPalette2(button:QColor_ITF):QPalette;
	function NewQPalette3(button:number):QPalette;
	function NewQPalette4(button:QColor_ITF,window:QColor_ITF):QPalette;
	function NewQPalette5(windowText:QBrush_ITF,button:QBrush_ITF,light:QBrush_ITF,dark:QBrush_ITF,mid:QBrush_ITF,text:QBrush_ITF,bright_text:QBrush_ITF,base:QBrush_ITF,window:QBrush_ITF):QPalette;
	function NewQPalette7(p:QPalette_ITF):QPalette;
	function NewQPalette8(other:QPalette_ITF):QPalette;
	const QPalette__Active: number;
	const QPalette__Disabled: number;
	const QPalette__Inactive: number;
	const QPalette__NColorGroups: number;
	const QPalette__Current: number;
	const QPalette__All: number;
	const QPalette__Normal: number;
	const QPalette__WindowText: number;
	const QPalette__Button: number;
	const QPalette__Light: number;
	const QPalette__Midlight: number;
	const QPalette__Dark: number;
	const QPalette__Mid: number;
	const QPalette__Text: number;
	const QPalette__BrightText: number;
	const QPalette__ButtonText: number;
	const QPalette__Base: number;
	const QPalette__Window: number;
	const QPalette__Shadow: number;
	const QPalette__Highlight: number;
	const QPalette__HighlightedText: number;
	const QPalette__Link: number;
	const QPalette__LinkVisited: number;
	const QPalette__AlternateBase: number;
	const QPalette__NoRole: number;
	const QPalette__ToolTipBase: number;
	const QPalette__ToolTipText: number;
	const QPalette__PlaceholderText: number;
	const QPalette__NColorRoles: number;
	const QPalette__Foreground: number;
	const QPalette__Background: number;
	interface QPen_ITF {
		QPen_PTR():QPen;
	}

	class QPen {
		___pointer: number;
		QPen_PTR():QPen;
		Pointer():number;
		SetPointer(p:number):void;
		Brush():QBrush;
		Color():QColor;
		SetStyle(style:number):void;
		Style():number;
		Width():number;
		DestroyQPen():void;
	}
	function NewQPenFromPointer(ptr:number):QPen;
	function NewQPen():QPen;
	function NewQPen2(style:number):QPen;
	function NewQPen3(color:QColor_ITF):QPen;
	function NewQPen4(brush:QBrush_ITF,width:number,style:number,cap:number,joi:number):QPen;
	function NewQPen5(pen:QPen_ITF):QPen;
	function NewQPen6(pen:QPen_ITF):QPen;
	const QPixelFormat__RGB: number;
	const QPixelFormat__BGR: number;
	const QPixelFormat__Indexed: number;
	const QPixelFormat__Grayscale: number;
	const QPixelFormat__CMYK: number;
	const QPixelFormat__HSL: number;
	const QPixelFormat__HSV: number;
	const QPixelFormat__YUV: number;
	const QPixelFormat__Alpha: number;
	const QPixelFormat__UsesAlpha: number;
	const QPixelFormat__IgnoresAlpha: number;
	const QPixelFormat__AtBeginning: number;
	const QPixelFormat__AtEnd: number;
	const QPixelFormat__NotPremultiplied: number;
	const QPixelFormat__Premultiplied: number;
	const QPixelFormat__UnsignedInteger: number;
	const QPixelFormat__UnsignedShort: number;
	const QPixelFormat__UnsignedByte: number;
	const QPixelFormat__FloatingPoint: number;
	const QPixelFormat__YUV444: number;
	const QPixelFormat__YUV422: number;
	const QPixelFormat__YUV411: number;
	const QPixelFormat__YUV420P: number;
	const QPixelFormat__YUV420SP: number;
	const QPixelFormat__YV12: number;
	const QPixelFormat__UYVY: number;
	const QPixelFormat__YUYV: number;
	const QPixelFormat__NV12: number;
	const QPixelFormat__NV21: number;
	const QPixelFormat__IMC1: number;
	const QPixelFormat__IMC2: number;
	const QPixelFormat__IMC3: number;
	const QPixelFormat__IMC4: number;
	const QPixelFormat__Y8: number;
	const QPixelFormat__Y16: number;
	const QPixelFormat__LittleEndian: number;
	const QPixelFormat__BigEndian: number;
	const QPixelFormat__CurrentSystemEndian: number;
	interface QPixmap_ITF extends QPaintDevice_ITF {
		QPixmap_PTR():QPixmap;
	}

	class QPixmap extends QPaintDevice {
		___pointer: number;
		QPixmap_PTR():QPixmap;
		Pointer():number;
		SetPointer(p:number):void;
		Copy(rectangle:core.QRect_ITF):QPixmap;
		Copy2(x:number,y:number,width:number,height:number):QPixmap;
		Fill(color:QColor_ITF):void;
		FromImage(image:QImage_ITF,flags:number):QPixmap;
		FromImage2(image:QImage_ITF,flags:number):QPixmap;
		Mask():QBitmap;
		Rect():core.QRect;
		Save(fileName:string,format:string,quality:number):boolean;
		Save2(device:core.QIODevice_ITF,format:string,quality:number):boolean;
		Scaled(size:core.QSize_ITF,aspectRatioMode:number,transformMode:number):QPixmap;
		Scaled2(width:number,height:number,aspectRatioMode:number,transformMode:number):QPixmap;
		Size():core.QSize;
		ToImage():QImage;
		ConnectDestroyQPixmap(f:()=>void):void;
		DisconnectDestroyQPixmap():void;
		DestroyQPixmap():void;
		DestroyQPixmapDefault():void;
		PaintEngine():QPaintEngine;
		PaintEngineDefault():QPaintEngine;
	}
	function NewQPixmapFromPointer(ptr:number):QPixmap;
	function NewQPixmap():QPixmap;
	function NewQPixmap2(size:core.QSize_ITF):QPixmap;
	function NewQPixmap3(fileName:string,format:string,flags:number):QPixmap;
	function NewQPixmap5(pixmap:QPixmap_ITF):QPixmap;
	function QPixmap_FromImage(image:QImage_ITF,flags:number):QPixmap;
	function QPixmap_FromImage2(image:QImage_ITF,flags:number):QPixmap;
	const QPlatformSurfaceEvent__SurfaceCreated: number;
	const QPlatformSurfaceEvent__SurfaceAboutToBeDestroyed: number;
	interface QPolygon_ITF extends core.QVector_ITF {
		QPolygon_PTR():QPolygon;
	}

	class QPolygon extends core.QVector {
		___pointer: number;
		QPolygon_PTR():QPolygon;
		Pointer():number;
		SetPointer(p:number):void;
		BoundingRect():core.QRect;
		Point(index:number,x:number,y:number):void;
		Point2(index:number):core.QPoint;
		SetPoint(index:number,x:number,y:number):void;
		SetPoint2(index:number,point:core.QPoint_ITF):void;
		DestroyQPolygon():void;
	}
	function NewQPolygonFromPointer(ptr:number):QPolygon;
	function NewQPolygon():QPolygon;
	function NewQPolygon2(size:number):QPolygon;
	function NewQPolygon3(points:core.QPoint[]):QPolygon;
	function NewQPolygon5(rectangle:core.QRect_ITF,closed:boolean):QPolygon;
	function NewQPolygonF():QPolygonF;
	function NewQPolygonF2(size:number):QPolygonF;
	function NewQPolygonF3(points:core.QPointF[]):QPolygonF;
	function NewQPolygonF5(rectangle:core.QRectF_ITF):QPolygonF;
	function NewQPolygonF6(polygon:QPolygon_ITF):QPolygonF;
	function NewQPolygonF7(polygon:QPolygonF_ITF):QPolygonF;
	interface QPolygonF_ITF extends core.QVector_ITF {
		QPolygonF_PTR():QPolygonF;
	}

	class QPolygonF extends core.QVector {
		___pointer: number;
		QPolygonF_PTR():QPolygonF;
		Pointer():number;
		SetPointer(p:number):void;
		BoundingRect():core.QRectF;
		DestroyQPolygonF():void;
	}
	function NewQPolygonFFromPointer(ptr:number):QPolygonF;
	function NewQPolygonF():QPolygonF;
	function NewQPolygonF2(size:number):QPolygonF;
	function NewQPolygonF3(points:core.QPointF[]):QPolygonF;
	function NewQPolygonF5(rectangle:core.QRectF_ITF):QPolygonF;
	function NewQPolygonF6(polygon:QPolygon_ITF):QPolygonF;
	function NewQPolygonF7(polygon:QPolygonF_ITF):QPolygonF;
	const QRawFont__PixelAntialiasing: number;
	const QRawFont__SubPixelAntialiasing: number;
	const QRawFont__SeparateAdvances: number;
	const QRawFont__KernedAdvances: number;
	const QRawFont__UseDesignMetrics: number;
	interface QRegion_ITF {
		QRegion_PTR():QRegion;
	}

	class QRegion {
		___pointer: number;
		QRegion_PTR():QRegion;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQRegion():void;
		BoundingRect():core.QRect;
		Contains(p:core.QPoint_ITF):boolean;
		Contains2(r:core.QRect_ITF):boolean;
		IsEmpty():boolean;
	}
	function NewQRegionFromPointer(ptr:number):QRegion;
	function NewQRegion():QRegion;
	function NewQRegion2(x:number,y:number,w:number,h:number,t:number):QRegion;
	function NewQRegion3(r:core.QRect_ITF,t:number):QRegion;
	function NewQRegion4(a:QPolygon_ITF,fillRule:number):QRegion;
	function NewQRegion5(r:QRegion_ITF):QRegion;
	function NewQRegion6(other:QRegion_ITF):QRegion;
	function NewQRegion7(bm:QBitmap_ITF):QRegion;
	const QRegion__Rectangle: number;
	const QRegion__Ellipse: number;
	interface QResizeEvent_ITF extends core.QEvent_ITF {
		QResizeEvent_PTR():QResizeEvent;
	}

	class QResizeEvent extends core.QEvent {
		___pointer: number;
		QResizeEvent_PTR():QResizeEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQResizeEvent():void;
		Size():core.QSize;
	}
	function NewQResizeEventFromPointer(ptr:number):QResizeEvent;
	function NewQResizeEvent(size:core.QSize_ITF,oldSize:core.QSize_ITF):QResizeEvent;
	interface QRgba64_ITF {
		QRgba64_PTR():QRgba64;
	}

	class QRgba64 {
		___pointer: number;
		QRgba64_PTR():QRgba64;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQRgba64():void;
		Blue():number;
		Green():number;
	}
	function NewQRgba64FromPointer(ptr:number):QRgba64;
	interface QScreen_ITF extends core.QObject_ITF {
		QScreen_PTR():QScreen;
	}

	class QScreen extends core.QObject {
		___pointer: number;
		QScreen_PTR():QScreen;
		Pointer():number;
		SetPointer(p:number):void;
		Geometry():core.QRect;
		Model():string;
		Name():string;
		Size():core.QSize;
		ConnectDestroyQScreen(f:()=>void):void;
		DisconnectDestroyQScreen():void;
		DestroyQScreen():void;
		DestroyQScreenDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQScreenFromPointer(ptr:number):QScreen;
	const QScrollEvent__ScrollStarted: number;
	const QScrollEvent__ScrollUpdated: number;
	const QScrollEvent__ScrollFinished: number;
	const QSessionManager__RestartIfRunning: number;
	const QSessionManager__RestartAnyway: number;
	const QSessionManager__RestartImmediately: number;
	const QSessionManager__RestartNever: number;
	const QStandardItem__Type: number;
	const QStandardItem__UserType: number;
	const QStaticText__ModerateCaching: number;
	const QStaticText__AggressiveCaching: number;
	interface QSurface_ITF {
		QSurface_PTR():QSurface;
	}

	class QSurface {
		___pointer: number;
		QSurface_PTR():QSurface;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectFormat(f:()=>QSurfaceFormat):void;
		DisconnectFormat():void;
		Format():QSurfaceFormat;
		ConnectSize(f:()=>core.QSize):void;
		DisconnectSize():void;
		Size():core.QSize;
		ConnectSurfaceType(f:()=>number):void;
		DisconnectSurfaceType():void;
		SurfaceType():number;
		ConnectDestroyQSurface(f:()=>void):void;
		DisconnectDestroyQSurface():void;
		DestroyQSurface():void;
		DestroyQSurfaceDefault():void;
	}
	function NewQSurfaceFromPointer(ptr:number):QSurface;
	function NewQSurfaceFormat():QSurfaceFormat;
	function NewQSurfaceFormat2(options:number):QSurfaceFormat;
	function NewQSurfaceFormat3(other:QSurfaceFormat_ITF):QSurfaceFormat;
	const QSurface__Window: number;
	const QSurface__Offscreen: number;
	const QSurface__RasterSurface: number;
	const QSurface__OpenGLSurface: number;
	const QSurface__RasterGLSurface: number;
	const QSurface__OpenVGSurface: number;
	const QSurface__VulkanSurface: number;
	const QSurface__MetalSurface: number;
	interface QSurfaceFormat_ITF {
		QSurfaceFormat_PTR():QSurfaceFormat;
	}

	class QSurfaceFormat {
		___pointer: number;
		QSurfaceFormat_PTR():QSurfaceFormat;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQSurfaceFormat():void;
	}
	function NewQSurfaceFormatFromPointer(ptr:number):QSurfaceFormat;
	function NewQSurfaceFormat():QSurfaceFormat;
	function NewQSurfaceFormat2(options:number):QSurfaceFormat;
	function NewQSurfaceFormat3(other:QSurfaceFormat_ITF):QSurfaceFormat;
	const QSurfaceFormat__StereoBuffers: number;
	const QSurfaceFormat__DebugContext: number;
	const QSurfaceFormat__DeprecatedFunctions: number;
	const QSurfaceFormat__ResetNotification: number;
	const QSurfaceFormat__DefaultSwapBehavior: number;
	const QSurfaceFormat__SingleBuffer: number;
	const QSurfaceFormat__DoubleBuffer: number;
	const QSurfaceFormat__TripleBuffer: number;
	const QSurfaceFormat__DefaultRenderableType: number;
	const QSurfaceFormat__OpenGL: number;
	const QSurfaceFormat__OpenGLES: number;
	const QSurfaceFormat__OpenVG: number;
	const QSurfaceFormat__NoProfile: number;
	const QSurfaceFormat__CoreProfile: number;
	const QSurfaceFormat__CompatibilityProfile: number;
	const QSurfaceFormat__DefaultColorSpace: number;
	const QSurfaceFormat__sRGBColorSpace: number;
	interface QSyntaxHighlighter_ITF extends core.QObject_ITF {
		QSyntaxHighlighter_PTR():QSyntaxHighlighter;
	}

	class QSyntaxHighlighter extends core.QObject {
		___pointer: number;
		QSyntaxHighlighter_PTR():QSyntaxHighlighter;
		Pointer():number;
		SetPointer(p:number):void;
		CurrentBlock():QTextBlock;
		CurrentBlockState():number;
		Document():QTextDocument;
		Format(position:number):QTextCharFormat;
		ConnectHighlightBlock(f:(text:string)=>void):void;
		DisconnectHighlightBlock():void;
		HighlightBlock(text:string):void;
		PreviousBlockState():number;
		ConnectRehighlight(f:()=>void):void;
		DisconnectRehighlight():void;
		Rehighlight():void;
		RehighlightDefault():void;
		ConnectRehighlightBlock(f:(block:QTextBlock)=>void):void;
		DisconnectRehighlightBlock():void;
		RehighlightBlock(block:QTextBlock_ITF):void;
		RehighlightBlockDefault(block:QTextBlock_ITF):void;
		SetCurrentBlockState(newState:number):void;
		SetDocument(doc:QTextDocument_ITF):void;
		SetFormat(start:number,count:number,format:QTextCharFormat_ITF):void;
		SetFormat2(start:number,count:number,color:QColor_ITF):void;
		SetFormat3(start:number,count:number,font:QFont_ITF):void;
		ConnectDestroyQSyntaxHighlighter(f:()=>void):void;
		DisconnectDestroyQSyntaxHighlighter():void;
		DestroyQSyntaxHighlighter():void;
		DestroyQSyntaxHighlighterDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQSyntaxHighlighterFromPointer(ptr:number):QSyntaxHighlighter;
	function NewQSyntaxHighlighter(parent:core.QObject_ITF):QSyntaxHighlighter;
	function NewQSyntaxHighlighter2(parent:QTextDocument_ITF):QSyntaxHighlighter;
	const QTabletEvent__NoDevice: number;
	const QTabletEvent__Puck: number;
	const QTabletEvent__Stylus: number;
	const QTabletEvent__Airbrush: number;
	const QTabletEvent__FourDMouse: number;
	const QTabletEvent__XFreeEraser: number;
	const QTabletEvent__RotationStylus: number;
	const QTabletEvent__UnknownPointer: number;
	const QTabletEvent__Pen: number;
	const QTabletEvent__Cursor: number;
	const QTabletEvent__Eraser: number;
	interface QTextBlock_ITF {
		QTextBlock_PTR():QTextBlock;
	}

	class QTextBlock {
		___pointer: number;
		QTextBlock_PTR():QTextBlock;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQTextBlock():void;
		CharFormat():QTextCharFormat;
		Contains(position:number):boolean;
		Document():QTextDocument;
		IsValid():boolean;
		Layout():QTextLayout;
		Length():number;
		Position():number;
		Previous():QTextBlock;
		SetVisible(visible:boolean):void;
		Text():string;
	}
	function NewQTextBlockFromPointer(ptr:number):QTextBlock;
	function NewQTextBlock3(other:QTextBlock_ITF):QTextBlock;
	const QTextBlockFormat__SingleHeight: number;
	const QTextBlockFormat__ProportionalHeight: number;
	const QTextBlockFormat__FixedHeight: number;
	const QTextBlockFormat__MinimumHeight: number;
	const QTextBlockFormat__LineDistanceHeight: number;
	interface QTextCharFormat_ITF extends QTextFormat_ITF {
		QTextCharFormat_PTR():QTextCharFormat;
	}

	class QTextCharFormat extends QTextFormat {
		___pointer: number;
		QTextCharFormat_PTR():QTextCharFormat;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQTextCharFormat():void;
		Font():QFont;
		FontWeight():number;
		SetFont(font:QFont_ITF,behavior:number):void;
		SetFont2(font:QFont_ITF):void;
		SetFontWeight(weight:number):void;
	}
	function NewQTextCharFormatFromPointer(ptr:number):QTextCharFormat;
	function NewQTextCharFormat():QTextCharFormat;
	const QTextCharFormat__AlignNormal: number;
	const QTextCharFormat__AlignSuperScript: number;
	const QTextCharFormat__AlignSubScript: number;
	const QTextCharFormat__AlignMiddle: number;
	const QTextCharFormat__AlignTop: number;
	const QTextCharFormat__AlignBottom: number;
	const QTextCharFormat__AlignBaseline: number;
	const QTextCharFormat__NoUnderline: number;
	const QTextCharFormat__SingleUnderline: number;
	const QTextCharFormat__DashUnderline: number;
	const QTextCharFormat__DotLine: number;
	const QTextCharFormat__DashDotLine: number;
	const QTextCharFormat__DashDotDotLine: number;
	const QTextCharFormat__WaveUnderline: number;
	const QTextCharFormat__SpellCheckUnderline: number;
	const QTextCharFormat__FontPropertiesSpecifiedOnly: number;
	const QTextCharFormat__FontPropertiesAll: number;
	interface QTextCursor_ITF {
		QTextCursor_PTR():QTextCursor;
	}

	class QTextCursor {
		___pointer: number;
		QTextCursor_PTR():QTextCursor;
		Pointer():number;
		SetPointer(p:number):void;
		Anchor():number;
		Block():QTextBlock;
		CharFormat():QTextCharFormat;
		Document():QTextDocument;
		Position():number;
		Select(selection:number):void;
		Selection():QTextDocumentFragment;
		SetPosition(pos:number,m:number):void;
		DestroyQTextCursor():void;
	}
	function NewQTextCursorFromPointer(ptr:number):QTextCursor;
	function NewQTextCursor():QTextCursor;
	function NewQTextCursor2(document:QTextDocument_ITF):QTextCursor;
	function NewQTextCursor3(frame:QTextFrame_ITF):QTextCursor;
	function NewQTextCursor4(block:QTextBlock_ITF):QTextCursor;
	function NewQTextCursor5(cursor:QTextCursor_ITF):QTextCursor;
	const QTextCursor__MoveAnchor: number;
	const QTextCursor__KeepAnchor: number;
	const QTextCursor__NoMove: number;
	const QTextCursor__Start: number;
	const QTextCursor__Up: number;
	const QTextCursor__StartOfLine: number;
	const QTextCursor__StartOfBlock: number;
	const QTextCursor__StartOfWord: number;
	const QTextCursor__PreviousBlock: number;
	const QTextCursor__PreviousCharacter: number;
	const QTextCursor__PreviousWord: number;
	const QTextCursor__Left: number;
	const QTextCursor__WordLeft: number;
	const QTextCursor__End: number;
	const QTextCursor__Down: number;
	const QTextCursor__EndOfLine: number;
	const QTextCursor__EndOfWord: number;
	const QTextCursor__EndOfBlock: number;
	const QTextCursor__NextBlock: number;
	const QTextCursor__NextCharacter: number;
	const QTextCursor__NextWord: number;
	const QTextCursor__Right: number;
	const QTextCursor__WordRight: number;
	const QTextCursor__NextCell: number;
	const QTextCursor__PreviousCell: number;
	const QTextCursor__NextRow: number;
	const QTextCursor__PreviousRow: number;
	const QTextCursor__WordUnderCursor: number;
	const QTextCursor__LineUnderCursor: number;
	const QTextCursor__BlockUnderCursor: number;
	const QTextCursor__Document: number;
	interface QTextDocument_ITF extends core.QObject_ITF {
		QTextDocument_PTR():QTextDocument;
	}

	class QTextDocument extends core.QObject {
		___pointer: number;
		QTextDocument_PTR():QTextDocument;
		Pointer():number;
		SetPointer(p:number):void;
		AdjustSize():void;
		Begin():QTextBlock;
		ConnectClear(f:()=>void):void;
		DisconnectClear():void;
		Clear():void;
		ClearDefault():void;
		DefaultFont():QFont;
		DocumentLayout():QAbstractTextDocumentLayout;
		End():QTextBlock;
		IsEmpty():boolean;
		Object(objectIndex:number):QTextObject;
		Print(printer:QPagedPaintDevice_ITF):void;
		Resource(ty:number,name:core.QUrl_ITF):core.QVariant;
		SetDefaultFont(font:QFont_ITF):void;
		SetDocumentLayout(layout:QAbstractTextDocumentLayout_ITF):void;
		SetPlainText(text:string):void;
		Size():core.QSizeF;
		ToPlainText():string;
		ConnectDestroyQTextDocument(f:()=>void):void;
		DisconnectDestroyQTextDocument():void;
		DestroyQTextDocument():void;
		DestroyQTextDocumentDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQTextDocumentFromPointer(ptr:number):QTextDocument;
	function NewQTextDocument(parent:core.QObject_ITF):QTextDocument;
	function NewQTextDocument2(text:string,parent:core.QObject_ITF):QTextDocument;
	function NewQTextDocumentFragment():QTextDocumentFragment;
	function NewQTextDocumentFragment2(document:QTextDocument_ITF):QTextDocumentFragment;
	function NewQTextDocumentFragment3(cursor:QTextCursor_ITF):QTextDocumentFragment;
	function NewQTextDocumentFragment4(other:QTextDocumentFragment_ITF):QTextDocumentFragment;
	const QTextDocument__DocumentTitle: number;
	const QTextDocument__DocumentUrl: number;
	const QTextDocument__FindBackward: number;
	const QTextDocument__FindCaseSensitively: number;
	const QTextDocument__FindWholeWords: number;
	const QTextDocument__HtmlResource: number;
	const QTextDocument__ImageResource: number;
	const QTextDocument__StyleSheetResource: number;
	const QTextDocument__UserResource: number;
	const QTextDocument__UndoStack: number;
	const QTextDocument__RedoStack: number;
	const QTextDocument__UndoAndRedoStacks: number;
	interface QTextDocumentFragment_ITF {
		QTextDocumentFragment_PTR():QTextDocumentFragment;
	}

	class QTextDocumentFragment {
		___pointer: number;
		QTextDocumentFragment_PTR():QTextDocumentFragment;
		Pointer():number;
		SetPointer(p:number):void;
		IsEmpty():boolean;
		ToPlainText():string;
		DestroyQTextDocumentFragment():void;
	}
	function NewQTextDocumentFragmentFromPointer(ptr:number):QTextDocumentFragment;
	function NewQTextDocumentFragment():QTextDocumentFragment;
	function NewQTextDocumentFragment2(document:QTextDocument_ITF):QTextDocumentFragment;
	function NewQTextDocumentFragment3(cursor:QTextCursor_ITF):QTextDocumentFragment;
	function NewQTextDocumentFragment4(other:QTextDocumentFragment_ITF):QTextDocumentFragment;
	interface QTextFormat_ITF {
		QTextFormat_PTR():QTextFormat;
	}

	class QTextFormat {
		___pointer: number;
		QTextFormat_PTR():QTextFormat;
		Pointer():number;
		SetPointer(p:number):void;
		Background():QBrush;
		Foreground():QBrush;
		IsEmpty():boolean;
		IsValid():boolean;
		Property(propertyId:number):core.QVariant;
		SetBackground(brush:QBrush_ITF):void;
		SetForeground(brush:QBrush_ITF):void;
		SetProperty(propertyId:number,value:core.QVariant_ITF):void;
		SetProperty2(propertyId:number,value:QTextLength[]):void;
		Type():number;
		DestroyQTextFormat():void;
	}
	function NewQTextFormatFromPointer(ptr:number):QTextFormat;
	function NewQTextFormat():QTextFormat;
	function NewQTextFormat2(ty:number):QTextFormat;
	function NewQTextFormat3(other:QTextFormat_ITF):QTextFormat;
	const QTextFormat__InvalidFormat: number;
	const QTextFormat__BlockFormat: number;
	const QTextFormat__CharFormat: number;
	const QTextFormat__ListFormat: number;
	const QTextFormat__TableFormat: number;
	const QTextFormat__FrameFormat: number;
	const QTextFormat__UserFormat: number;
	const QTextFormat__ObjectIndex: number;
	const QTextFormat__CssFloat: number;
	const QTextFormat__LayoutDirection: number;
	const QTextFormat__OutlinePen: number;
	const QTextFormat__BackgroundBrush: number;
	const QTextFormat__ForegroundBrush: number;
	const QTextFormat__BackgroundImageUrl: number;
	const QTextFormat__BlockAlignment: number;
	const QTextFormat__BlockTopMargin: number;
	const QTextFormat__BlockBottomMargin: number;
	const QTextFormat__BlockLeftMargin: number;
	const QTextFormat__BlockRightMargin: number;
	const QTextFormat__TextIndent: number;
	const QTextFormat__TabPositions: number;
	const QTextFormat__BlockIndent: number;
	const QTextFormat__LineHeight: number;
	const QTextFormat__LineHeightType: number;
	const QTextFormat__BlockNonBreakableLines: number;
	const QTextFormat__BlockTrailingHorizontalRulerWidth: number;
	const QTextFormat__HeadingLevel: number;
	const QTextFormat__FirstFontProperty: number;
	const QTextFormat__FontCapitalization: number;
	const QTextFormat__FontLetterSpacingType: number;
	const QTextFormat__FontLetterSpacing: number;
	const QTextFormat__FontWordSpacing: number;
	const QTextFormat__FontStretch: number;
	const QTextFormat__FontStyleHint: number;
	const QTextFormat__FontStyleStrategy: number;
	const QTextFormat__FontKerning: number;
	const QTextFormat__FontHintingPreference: number;
	const QTextFormat__FontFamilies: number;
	const QTextFormat__FontStyleName: number;
	const QTextFormat__FontFamily: number;
	const QTextFormat__FontPointSize: number;
	const QTextFormat__FontSizeAdjustment: number;
	const QTextFormat__FontSizeIncrement: number;
	const QTextFormat__FontWeight: number;
	const QTextFormat__FontItalic: number;
	const QTextFormat__FontUnderline: number;
	const QTextFormat__FontOverline: number;
	const QTextFormat__FontStrikeOut: number;
	const QTextFormat__FontFixedPitch: number;
	const QTextFormat__FontPixelSize: number;
	const QTextFormat__LastFontProperty: number;
	const QTextFormat__TextUnderlineColor: number;
	const QTextFormat__TextVerticalAlignment: number;
	const QTextFormat__TextOutline: number;
	const QTextFormat__TextUnderlineStyle: number;
	const QTextFormat__TextToolTip: number;
	const QTextFormat__IsAnchor: number;
	const QTextFormat__AnchorHref: number;
	const QTextFormat__AnchorName: number;
	const QTextFormat__ObjectType: number;
	const QTextFormat__ListStyle: number;
	const QTextFormat__ListIndent: number;
	const QTextFormat__ListNumberPrefix: number;
	const QTextFormat__ListNumberSuffix: number;
	const QTextFormat__FrameBorder: number;
	const QTextFormat__FrameMargin: number;
	const QTextFormat__FramePadding: number;
	const QTextFormat__FrameWidth: number;
	const QTextFormat__FrameHeight: number;
	const QTextFormat__FrameTopMargin: number;
	const QTextFormat__FrameBottomMargin: number;
	const QTextFormat__FrameLeftMargin: number;
	const QTextFormat__FrameRightMargin: number;
	const QTextFormat__FrameBorderBrush: number;
	const QTextFormat__FrameBorderStyle: number;
	const QTextFormat__TableColumns: number;
	const QTextFormat__TableColumnWidthConstraints: number;
	const QTextFormat__TableCellSpacing: number;
	const QTextFormat__TableCellPadding: number;
	const QTextFormat__TableHeaderRowCount: number;
	const QTextFormat__TableCellRowSpan: number;
	const QTextFormat__TableCellColumnSpan: number;
	const QTextFormat__TableCellTopPadding: number;
	const QTextFormat__TableCellBottomPadding: number;
	const QTextFormat__TableCellLeftPadding: number;
	const QTextFormat__TableCellRightPadding: number;
	const QTextFormat__ImageName: number;
	const QTextFormat__ImageWidth: number;
	const QTextFormat__ImageHeight: number;
	const QTextFormat__ImageQuality: number;
	const QTextFormat__FullWidthSelection: number;
	const QTextFormat__PageBreakPolicy: number;
	const QTextFormat__UserProperty: number;
	const QTextFormat__NoObject: number;
	const QTextFormat__ImageObject: number;
	const QTextFormat__TableObject: number;
	const QTextFormat__TableCellObject: number;
	const QTextFormat__UserObject: number;
	const QTextFormat__PageBreak_Auto: number;
	const QTextFormat__PageBreak_AlwaysBefore: number;
	const QTextFormat__PageBreak_AlwaysAfter: number;
	interface QTextFrame_ITF extends QTextObject_ITF {
		QTextFrame_PTR():QTextFrame;
	}

	class QTextFrame extends QTextObject {
		___pointer: number;
		QTextFrame_PTR():QTextFrame;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectDestroyQTextFrame(f:()=>void):void;
		DisconnectDestroyQTextFrame():void;
		DestroyQTextFrame():void;
		DestroyQTextFrameDefault():void;
	}
	function NewQTextFrameFromPointer(ptr:number):QTextFrame;
	function NewQTextFrame(document:QTextDocument_ITF):QTextFrame;
	const QTextFrameFormat__InFlow: number;
	const QTextFrameFormat__FloatLeft: number;
	const QTextFrameFormat__FloatRight: number;
	const QTextFrameFormat__BorderStyle_None: number;
	const QTextFrameFormat__BorderStyle_Dotted: number;
	const QTextFrameFormat__BorderStyle_Dashed: number;
	const QTextFrameFormat__BorderStyle_Solid: number;
	const QTextFrameFormat__BorderStyle_Double: number;
	const QTextFrameFormat__BorderStyle_DotDash: number;
	const QTextFrameFormat__BorderStyle_DotDotDash: number;
	const QTextFrameFormat__BorderStyle_Groove: number;
	const QTextFrameFormat__BorderStyle_Ridge: number;
	const QTextFrameFormat__BorderStyle_Inset: number;
	const QTextFrameFormat__BorderStyle_Outset: number;
	const QTextItem__RightToLeft: number;
	const QTextItem__Overline: number;
	const QTextItem__Underline: number;
	const QTextItem__StrikeOut: number;
	const QTextItem__Dummy: number;
	interface QTextLayout_ITF {
		QTextLayout_PTR():QTextLayout;
	}

	class QTextLayout {
		___pointer: number;
		QTextLayout_PTR():QTextLayout;
		Pointer():number;
		SetPointer(p:number):void;
		BoundingRect():core.QRectF;
		Font():QFont;
		Position():core.QPointF;
		SetFont(font:QFont_ITF):void;
		SetPosition(p:core.QPointF_ITF):void;
		SetText(stri:string):void;
		Text():string;
		DestroyQTextLayout():void;
	}
	function NewQTextLayoutFromPointer(ptr:number):QTextLayout;
	function NewQTextLayout():QTextLayout;
	function NewQTextLayout2(text:string):QTextLayout;
	function NewQTextLayout4(text:string,font:QFont_ITF,paintdevice:QPaintDevice_ITF):QTextLayout;
	const QTextLayout__SkipCharacters: number;
	const QTextLayout__SkipWords: number;
	interface QTextLength_ITF {
		QTextLength_PTR():QTextLength;
	}

	class QTextLength {
		___pointer: number;
		QTextLength_PTR():QTextLength;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQTextLength():void;
		Type():number;
		Value(maximumLength:number):number;
	}
	function NewQTextLengthFromPointer(ptr:number):QTextLength;
	function NewQTextLength():QTextLength;
	function NewQTextLength2(ty:number,value:number):QTextLength;
	const QTextLength__VariableLength: number;
	const QTextLength__FixedLength: number;
	const QTextLength__PercentageLength: number;
	const QTextLine__Leading: number;
	const QTextLine__Trailing: number;
	const QTextLine__CursorBetweenCharacters: number;
	const QTextLine__CursorOnCharacter: number;
	const QTextListFormat__ListDisc: number;
	const QTextListFormat__ListCircle: number;
	const QTextListFormat__ListSquare: number;
	const QTextListFormat__ListDecimal: number;
	const QTextListFormat__ListLowerAlpha: number;
	const QTextListFormat__ListUpperAlpha: number;
	const QTextListFormat__ListLowerRoman: number;
	const QTextListFormat__ListUpperRoman: number;
	const QTextListFormat__ListStyleUndefined: number;
	interface QTextObject_ITF extends core.QObject_ITF {
		QTextObject_PTR():QTextObject;
	}

	class QTextObject extends core.QObject {
		___pointer: number;
		QTextObject_PTR():QTextObject;
		Pointer():number;
		SetPointer(p:number):void;
		Document():QTextDocument;
		Format():QTextFormat;
		SetFormat(format:QTextFormat_ITF):void;
		ConnectDestroyQTextObject(f:()=>void):void;
		DisconnectDestroyQTextObject():void;
		DestroyQTextObject():void;
		DestroyQTextObjectDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQTextObjectFromPointer(ptr:number):QTextObject;
	function NewQTextObject(document:QTextDocument_ITF):QTextObject;
	interface QTextOption_ITF {
		QTextOption_PTR():QTextOption;
	}

	class QTextOption {
		___pointer: number;
		QTextOption_PTR():QTextOption;
		Pointer():number;
		SetPointer(p:number):void;
		Alignment():number;
		Flags():number;
		SetAlignment(alignment:number):void;
		SetFlags(flags:number):void;
		SetTabStopDistance(tabStopDistance:number):void;
		TabStopDistance():number;
		DestroyQTextOption():void;
	}
	function NewQTextOptionFromPointer(ptr:number):QTextOption;
	function NewQTextOption():QTextOption;
	function NewQTextOption2(alignment:number):QTextOption;
	function NewQTextOption3(other:QTextOption_ITF):QTextOption;
	const QTextOption__LeftTab: number;
	const QTextOption__RightTab: number;
	const QTextOption__CenterTab: number;
	const QTextOption__DelimiterTab: number;
	const QTextOption__NoWrap: number;
	const QTextOption__WordWrap: number;
	const QTextOption__ManualWrap: number;
	const QTextOption__WrapAnywhere: number;
	const QTextOption__WrapAtWordBoundaryOrAnywhere: number;
	const QTextOption__ShowTabsAndSpaces: number;
	const QTextOption__ShowLineAndParagraphSeparators: number;
	const QTextOption__AddSpaceForLineAndParagraphSeparators: number;
	const QTextOption__SuppressColors: number;
	const QTextOption__ShowDocumentTerminator: number;
	const QTextOption__IncludeTrailingSpaces: number;
	const QTouchDevice__TouchScreen: number;
	const QTouchDevice__TouchPad: number;
	const QTouchDevice__Position: number;
	const QTouchDevice__Area: number;
	const QTouchDevice__Pressure: number;
	const QTouchDevice__Velocity: number;
	const QTouchDevice__RawPositions: number;
	const QTouchDevice__NormalizedPosition: number;
	const QTouchDevice__MouseEmulation: number;
	interface QTransform_ITF {
		QTransform_PTR():QTransform;
	}

	class QTransform {
		___pointer: number;
		QTransform_PTR():QTransform;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQTransform():void;
		Dy():number;
		Map(x:number,y:number,tx:number,ty:number):void;
		Map2(point:core.QPoint_ITF):core.QPoint;
		Map3(p:core.QPointF_ITF):core.QPointF;
		Map4(l:core.QLine_ITF):core.QLine;
		Map5(line:core.QLineF_ITF):core.QLineF;
		Map6(polygon:QPolygonF_ITF):QPolygonF;
		Map7(polygon:QPolygon_ITF):QPolygon;
		Map8(region:QRegion_ITF):QRegion;
		Map9(path:QPainterPath_ITF):QPainterPath;
		Map10(x:number,y:number,tx:number,ty:number):void;
		Reset():void;
		Scale(sx:number,sy:number):QTransform;
		Type():number;
	}
	function NewQTransformFromPointer(ptr:number):QTransform;
	function NewQTransform2():QTransform;
	function NewQTransform3(m11:number,m12:number,m13:number,m21:number,m22:number,m23:number,m31:number,m32:number,m33:number):QTransform;
	function NewQTransform4(m11:number,m12:number,m21:number,m22:number,dx:number,dy:number):QTransform;
	function NewQTransform5(matrix:QMatrix_ITF):QTransform;
	const QTransform__TxNone: number;
	const QTransform__TxTranslate: number;
	const QTransform__TxScale: number;
	const QTransform__TxRotate: number;
	const QTransform__TxShear: number;
	const QTransform__TxProject: number;
	interface QValidator_ITF extends core.QObject_ITF {
		QValidator_PTR():QValidator;
	}

	class QValidator extends core.QObject {
		___pointer: number;
		QValidator_PTR():QValidator;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectChanged(f:()=>void):void;
		DisconnectChanged():void;
		Changed():void;
		ConnectValidate(f:(input:string,pos:number)=>number):void;
		DisconnectValidate():void;
		Validate(input:string,pos:number):number;
		ConnectDestroyQValidator(f:()=>void):void;
		DisconnectDestroyQValidator():void;
		DestroyQValidator():void;
		DestroyQValidatorDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQValidatorFromPointer(ptr:number):QValidator;
	function NewQValidator(parent:core.QObject_ITF):QValidator;
	const QValidator__Invalid: number;
	const QValidator__Intermediate: number;
	const QValidator__Acceptable: number;
	interface QVector2D_ITF {
		QVector2D_PTR():QVector2D;
	}

	class QVector2D {
		___pointer: number;
		QVector2D_PTR():QVector2D;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQVector2D():void;
		Length():number;
		SetX(x:number):void;
		SetY(y:number):void;
		X():number;
		Y():number;
	}
	function NewQVector2DFromPointer(ptr:number):QVector2D;
	function NewQVector2D():QVector2D;
	function NewQVector2D3(xpos:number,ypos:number):QVector2D;
	function NewQVector2D4(point:core.QPoint_ITF):QVector2D;
	function NewQVector2D5(point:core.QPointF_ITF):QVector2D;
	function NewQVector2D6(vector:QVector3D_ITF):QVector2D;
	function NewQVector2D7(vector:QVector4D_ITF):QVector2D;
	interface QVector3D_ITF {
		QVector3D_PTR():QVector3D;
	}

	class QVector3D {
		___pointer: number;
		QVector3D_PTR():QVector3D;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQVector3D():void;
		Length():number;
		Normal(v1:QVector3D_ITF,v2:QVector3D_ITF):QVector3D;
		Normal2(v1:QVector3D_ITF,v2:QVector3D_ITF,v3:QVector3D_ITF):QVector3D;
		SetX(x:number):void;
		SetY(y:number):void;
		X():number;
		Y():number;
		Z():number;
	}
	function NewQVector3DFromPointer(ptr:number):QVector3D;
	function NewQVector3D():QVector3D;
	function NewQVector3D3(xpos:number,ypos:number,zpos:number):QVector3D;
	function NewQVector3D4(point:core.QPoint_ITF):QVector3D;
	function NewQVector3D5(point:core.QPointF_ITF):QVector3D;
	function NewQVector3D6(vector:QVector2D_ITF):QVector3D;
	function NewQVector3D7(vector:QVector2D_ITF,zpos:number):QVector3D;
	function NewQVector3D8(vector:QVector4D_ITF):QVector3D;
	function QVector3D_Normal(v1:QVector3D_ITF,v2:QVector3D_ITF):QVector3D;
	function QVector3D_Normal2(v1:QVector3D_ITF,v2:QVector3D_ITF,v3:QVector3D_ITF):QVector3D;
	interface QVector4D_ITF {
		QVector4D_PTR():QVector4D;
	}

	class QVector4D {
		___pointer: number;
		QVector4D_PTR():QVector4D;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQVector4D():void;
		Length():number;
		SetW(w:number):void;
		SetX(x:number):void;
		SetY(y:number):void;
		W():number;
		X():number;
		Y():number;
		Z():number;
	}
	function NewQVector4DFromPointer(ptr:number):QVector4D;
	function NewQVector4D():QVector4D;
	function NewQVector4D3(xpos:number,ypos:number,zpos:number,wpos:number):QVector4D;
	function NewQVector4D4(point:core.QPoint_ITF):QVector4D;
	function NewQVector4D5(point:core.QPointF_ITF):QVector4D;
	function NewQVector4D6(vector:QVector2D_ITF):QVector4D;
	function NewQVector4D7(vector:QVector2D_ITF,zpos:number,wpos:number):QVector4D;
	function NewQVector4D8(vector:QVector3D_ITF):QVector4D;
	function NewQVector4D9(vector:QVector3D_ITF,wpos:number):QVector4D;
	const QVulkanInstance__NoDebugOutputRedirect: number;
	const QVulkanWindow__PersistentResources: number;
	interface QWindow_ITF extends QSurface_ITF {
		QWindow_PTR():QWindow;
		QObject_PTR():core.QObject;
	}

	class QWindow extends QSurface {
		QObject_PTR():core.QObject
		___pointer: number;
		QWindow_PTR():QWindow;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectClose(f:()=>boolean):void;
		DisconnectClose():void;
		Close():boolean;
		CloseDefault():boolean;
		Create():void;
		Cursor():QCursor;
		Destroy():void;
		ConnectEvent(f:(ev:core.QEvent)=>boolean):void;
		DisconnectEvent():void;
		Event(ev:core.QEvent_ITF):boolean;
		EventDefault(ev:core.QEvent_ITF):boolean;
		Flags():number;
		ConnectFormat(f:()=>QSurfaceFormat):void;
		DisconnectFormat():void;
		Format():QSurfaceFormat;
		FormatDefault():QSurfaceFormat;
		Geometry():core.QRect;
		Height():number;
		ConnectHide(f:()=>void):void;
		DisconnectHide():void;
		Hide():void;
		HideDefault():void;
		Icon():QIcon;
		ConnectLower(f:()=>void):void;
		DisconnectLower():void;
		Lower():void;
		LowerDefault():void;
		MapToGlobal(pos:core.QPoint_ITF):core.QPoint;
		Mask():QRegion;
		MinimumSize():core.QSize;
		ConnectMouseMoveEvent(f:(ev:QMouseEvent)=>void):void;
		DisconnectMouseMoveEvent():void;
		MouseMoveEvent(ev:QMouseEvent_ITF):void;
		MouseMoveEventDefault(ev:QMouseEvent_ITF):void;
		ConnectMousePressEvent(f:(ev:QMouseEvent)=>void):void;
		DisconnectMousePressEvent():void;
		MousePressEvent(ev:QMouseEvent_ITF):void;
		MousePressEventDefault(ev:QMouseEvent_ITF):void;
		ConnectMoveEvent(f:(ev:QMoveEvent)=>void):void;
		DisconnectMoveEvent():void;
		MoveEvent(ev:QMoveEvent_ITF):void;
		MoveEventDefault(ev:QMoveEvent_ITF):void;
		Parent(mode:number):QWindow;
		Parent2():QWindow;
		Position():core.QPoint;
		Resize(newSize:core.QSize_ITF):void;
		Resize2(w:number,h:number):void;
		ConnectResizeEvent(f:(ev:QResizeEvent)=>void):void;
		DisconnectResizeEvent():void;
		ResizeEvent(ev:QResizeEvent_ITF):void;
		ResizeEventDefault(ev:QResizeEvent_ITF):void;
		SetCursor(cursor:QCursor_ITF):void;
		SetFlag(flag:number,on:boolean):void;
		SetFlags(flags:number):void;
		SetFormat(format:QSurfaceFormat_ITF):void;
		ConnectSetGeometry(f:(posx:number,posy:number,w:number,h:number)=>void):void;
		DisconnectSetGeometry():void;
		SetGeometry(posx:number,posy:number,w:number,h:number):void;
		SetGeometryDefault(posx:number,posy:number,w:number,h:number):void;
		ConnectSetGeometry2(f:(rect:core.QRect)=>void):void;
		DisconnectSetGeometry2():void;
		SetGeometry2(rect:core.QRect_ITF):void;
		SetGeometry2Default(rect:core.QRect_ITF):void;
		SetIcon(icon:QIcon_ITF):void;
		SetMinimumSize(size:core.QSize_ITF):void;
		SetParent(parent:QWindow_ITF):void;
		SetPosition(pt:core.QPoint_ITF):void;
		SetPosition2(posx:number,posy:number):void;
		ConnectSetVisible(f:(visible:boolean)=>void):void;
		DisconnectSetVisible():void;
		SetVisible(visible:boolean):void;
		SetVisibleDefault(visible:boolean):void;
		ConnectSetX(f:(arg:number)=>void):void;
		DisconnectSetX():void;
		SetX(arg:number):void;
		SetXDefault(arg:number):void;
		ConnectSetY(f:(arg:number)=>void):void;
		DisconnectSetY():void;
		SetY(arg:number):void;
		SetYDefault(arg:number):void;
		ConnectShow(f:()=>void):void;
		DisconnectShow():void;
		Show():void;
		ShowDefault():void;
		ConnectSize(f:()=>core.QSize):void;
		DisconnectSize():void;
		Size():core.QSize;
		SizeDefault():core.QSize;
		Title():string;
		Type():number;
		Width():number;
		X():number;
		Y():number;
		ConnectDestroyQWindow(f:()=>void):void;
		DisconnectDestroyQWindow():void;
		DestroyQWindow():void;
		DestroyQWindowDefault():void;
		ChildEvent(event:core.QChildEvent_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotify(sign:core.QMetaMethod_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEvent(event:core.QEvent_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLater():void;
		DeleteLaterDefault():void;
		DisconnectNotify(sign:core.QMetaMethod_ITF):void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilter(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		TimerEvent(event:core.QTimerEvent_ITF):void;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
		SurfaceType():number;
		SurfaceTypeDefault():number;
	}
	function NewQWindowFromPointer(ptr:number):QWindow;
	function NewQWindow(targetScreen:QScreen_ITF):QWindow;
	function NewQWindow2(parent:QWindow_ITF):QWindow;
	const QWindow__Hidden: number;
	const QWindow__AutomaticVisibility: number;
	const QWindow__Windowed: number;
	const QWindow__Minimized: number;
	const QWindow__Maximized: number;
	const QWindow__FullScreen: number;
	const QWindow__ExcludeTransients: number;
	const QWindow__IncludeTransients: number;
}
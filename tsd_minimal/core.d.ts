declare namespace core {
	const QAbstractAnimation__Forward: number;
	const QAbstractAnimation__Backward: number;
	const QAbstractAnimation__Stopped: number;
	const QAbstractAnimation__Paused: number;
	const QAbstractAnimation__Running: number;
	const QAbstractAnimation__KeepWhenStopped: number;
	const QAbstractAnimation__DeleteWhenStopped: number;
	interface QAbstractItemModel_ITF extends QObject_ITF {
		QAbstractItemModel_PTR():QAbstractItemModel;
	}

	class QAbstractItemModel extends QObject {
		___pointer: number;
		QAbstractItemModel_PTR():QAbstractItemModel;
		Pointer():number;
		SetPointer(p:number):void;
		BeginInsertRows(parent:QModelIndex_ITF,first:number,last:number):void;
		BeginRemoveRows(parent:QModelIndex_ITF,first:number,last:number):void;
		ConnectColumnCount(f:(parent:QModelIndex)=>number):void;
		DisconnectColumnCount():void;
		ColumnCount(parent:QModelIndex_ITF):number;
		CreateIndex(row:number,column:number,p:number):QModelIndex;
		CreateIndex2(row:number,column:number,id:number):QModelIndex;
		ConnectData(f:(index:QModelIndex,role:number)=>QVariant):void;
		DisconnectData():void;
		Data(index:QModelIndex_ITF,role:number):QVariant;
		ConnectDataChanged(f:(topLeft:QModelIndex,bottomRight:QModelIndex,roles:number[])=>void):void;
		DisconnectDataChanged():void;
		DataChanged(topLeft:QModelIndex_ITF,bottomRight:QModelIndex_ITF,roles:number[]):void;
		EndInsertRows():void;
		EndRemoveRows():void;
		ConnectFlags(f:(index:QModelIndex)=>number):void;
		DisconnectFlags():void;
		Flags(index:QModelIndex_ITF):number;
		FlagsDefault(index:QModelIndex_ITF):number;
		HasIndex(row:number,column:number,parent:QModelIndex_ITF):boolean;
		ConnectHeaderData(f:(section:number,orientation:number,role:number)=>QVariant):void;
		DisconnectHeaderData():void;
		HeaderData(section:number,orientation:number,role:number):QVariant;
		HeaderDataDefault(section:number,orientation:number,role:number):QVariant;
		ConnectIndex(f:(row:number,column:number,parent:QModelIndex)=>QModelIndex):void;
		DisconnectIndex():void;
		Index(row:number,column:number,parent:QModelIndex_ITF):QModelIndex;
		InsertRow(row:number,parent:QModelIndex_ITF):boolean;
		ConnectInsertRows(f:(row:number,count:number,parent:QModelIndex)=>boolean):void;
		DisconnectInsertRows():void;
		InsertRows(row:number,count:number,parent:QModelIndex_ITF):boolean;
		InsertRowsDefault(row:number,count:number,parent:QModelIndex_ITF):boolean;
		ConnectMatch(f:(start:QModelIndex,role:number,value:QVariant,hits:number,flags:number)=>QModelIndex[]):void;
		DisconnectMatch():void;
		Match(start:QModelIndex_ITF,role:number,value:QVariant_ITF,hits:number,flags:number):QModelIndex[];
		MatchDefault(start:QModelIndex_ITF,role:number,value:QVariant_ITF,hits:number,flags:number):QModelIndex[];
		ConnectMimeData(f:(indexes:QModelIndex[])=>QMimeData):void;
		DisconnectMimeData():void;
		MimeData(indexes:QModelIndex[]):QMimeData;
		MimeDataDefault(indexes:QModelIndex[]):QMimeData;
		ConnectParent(f:(index:QModelIndex)=>QModelIndex):void;
		DisconnectParent():void;
		Parent(index:QModelIndex_ITF):QModelIndex;
		RemoveRow(row:number,parent:QModelIndex_ITF):boolean;
		ConnectRemoveRows(f:(row:number,count:number,parent:QModelIndex)=>boolean):void;
		DisconnectRemoveRows():void;
		RemoveRows(row:number,count:number,parent:QModelIndex_ITF):boolean;
		RemoveRowsDefault(row:number,count:number,parent:QModelIndex_ITF):boolean;
		ConnectRowCount(f:(parent:QModelIndex)=>number):void;
		DisconnectRowCount():void;
		RowCount(parent:QModelIndex_ITF):number;
		ConnectSetData(f:(index:QModelIndex,value:QVariant,role:number)=>boolean):void;
		DisconnectSetData():void;
		SetData(index:QModelIndex_ITF,value:QVariant_ITF,role:number):boolean;
		SetDataDefault(index:QModelIndex_ITF,value:QVariant_ITF,role:number):boolean;
		ConnectDestroyQAbstractItemModel(f:()=>void):void;
		DisconnectDestroyQAbstractItemModel():void;
		DestroyQAbstractItemModel():void;
		DestroyQAbstractItemModelDefault():void;
	}
	function NewQAbstractItemModelFromPointer(ptr:number):QAbstractItemModel;
	function NewQAbstractItemModel(parent:QObject_ITF):QAbstractItemModel;
	const QAbstractItemModel__NoLayoutChangeHint: number;
	const QAbstractItemModel__VerticalSortHint: number;
	const QAbstractItemModel__HorizontalSortHint: number;
	const QAbstractItemModel__NoOption: number;
	const QAbstractItemModel__IndexIsValid: number;
	const QAbstractItemModel__DoNotUseParent: number;
	const QAbstractItemModel__ParentIsInvalid: number;
	interface QAbstractListModel_ITF extends QAbstractItemModel_ITF {
		QAbstractListModel_PTR():QAbstractListModel;
	}

	class QAbstractListModel extends QAbstractItemModel {
		___pointer: number;
		QAbstractListModel_PTR():QAbstractListModel;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectIndex(f:(row:number,column:number,parent:QModelIndex)=>QModelIndex):void;
		DisconnectIndex():void;
		Index(row:number,column:number,parent:QModelIndex_ITF):QModelIndex;
		IndexDefault(row:number,column:number,parent:QModelIndex_ITF):QModelIndex;
		ConnectDestroyQAbstractListModel(f:()=>void):void;
		DisconnectDestroyQAbstractListModel():void;
		DestroyQAbstractListModel():void;
		DestroyQAbstractListModelDefault():void;
		ColumnCount(parent:QModelIndex_ITF):number;
		ColumnCountDefault(parent:QModelIndex_ITF):number;
		Data(index:QModelIndex_ITF,role:number):QVariant;
		DataDefault(index:QModelIndex_ITF,role:number):QVariant;
		Parent(index:QModelIndex_ITF):QModelIndex;
		ParentDefault(index:QModelIndex_ITF):QModelIndex;
		RowCount(parent:QModelIndex_ITF):number;
		RowCountDefault(parent:QModelIndex_ITF):number;
	}
	function NewQAbstractListModelFromPointer(ptr:number):QAbstractListModel;
	function NewQAbstractListModel(parent:QObject_ITF):QAbstractListModel;
	interface QAbstractTableModel_ITF extends QAbstractItemModel_ITF {
		QAbstractTableModel_PTR():QAbstractTableModel;
	}

	class QAbstractTableModel extends QAbstractItemModel {
		___pointer: number;
		QAbstractTableModel_PTR():QAbstractTableModel;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectIndex(f:(row:number,column:number,parent:QModelIndex)=>QModelIndex):void;
		DisconnectIndex():void;
		Index(row:number,column:number,parent:QModelIndex_ITF):QModelIndex;
		IndexDefault(row:number,column:number,parent:QModelIndex_ITF):QModelIndex;
		ConnectDestroyQAbstractTableModel(f:()=>void):void;
		DisconnectDestroyQAbstractTableModel():void;
		DestroyQAbstractTableModel():void;
		DestroyQAbstractTableModelDefault():void;
		ColumnCount(parent:QModelIndex_ITF):number;
		ColumnCountDefault(parent:QModelIndex_ITF):number;
		Data(index:QModelIndex_ITF,role:number):QVariant;
		DataDefault(index:QModelIndex_ITF,role:number):QVariant;
		Parent(index:QModelIndex_ITF):QModelIndex;
		ParentDefault(index:QModelIndex_ITF):QModelIndex;
		RowCount(parent:QModelIndex_ITF):number;
		RowCountDefault(parent:QModelIndex_ITF):number;
	}
	function NewQAbstractTableModelFromPointer(ptr:number):QAbstractTableModel;
	function NewQAbstractTableModel(parent:QObject_ITF):QAbstractTableModel;
	const QAbstractTransition__ExternalTransition: number;
	const QAbstractTransition__InternalTransition: number;
	interface QBitArray_ITF {
		QBitArray_PTR():QBitArray;
	}

	class QBitArray {
		___pointer: number;
		QBitArray_PTR():QBitArray;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQBitArray():void;
		At(i:number):boolean;
		Clear():void;
		Count():number;
		Count2(on:boolean):number;
		Fill(value:boolean,size:number):boolean;
		Fill2(value:boolean,begi:number,end:number):void;
		IsEmpty():boolean;
		Resize(size:number):void;
		Size():number;
	}
	function NewQBitArrayFromPointer(ptr:number):QBitArray;
	function NewQBitArray():QBitArray;
	function NewQBitArray2(size:number,value:boolean):QBitArray;
	function NewQBitArray3(other:QBitArray_ITF):QBitArray;
	function NewQBitArray4(other:QBitArray_ITF):QBitArray;
	interface QBuffer_ITF extends QIODevice_ITF {
		QBuffer_PTR():QBuffer;
	}

	class QBuffer extends QIODevice {
		___pointer: number;
		QBuffer_PTR():QBuffer;
		Pointer():number;
		SetPointer(p:number):void;
		Buffer():QByteArray;
		Buffer2():QByteArray;
		Data():QByteArray;
		SetData(data:QByteArray_ITF):void;
		SetData2(data:string,size:number):void;
		ConnectDestroyQBuffer(f:()=>void):void;
		DisconnectDestroyQBuffer():void;
		DestroyQBuffer():void;
		DestroyQBufferDefault():void;
		ReadData(data:string,maxSize:number):number;
		ReadDataDefault(data:string,maxSize:number):number;
		WriteData(data:string,maxSize:number):number;
		WriteDataDefault(data:string,maxSize:number):number;
	}
	function NewQBufferFromPointer(ptr:number):QBuffer;
	function NewQBuffer(parent:QObject_ITF):QBuffer;
	function NewQBuffer2(byteArray:QByteArray_ITF,parent:QObject_ITF):QBuffer;
	interface QByteArray_ITF {
		QByteArray_PTR():QByteArray;
	}

	class QByteArray {
		___pointer: number;
		QByteArray_PTR():QByteArray;
		Pointer():number;
		SetPointer(p:number):void;
		At(i:number):string;
		Back():string;
		Clear():void;
		ConstData():string;
		Contains(ba:QByteArray_ITF):boolean;
		Contains2(ch:string):boolean;
		Contains3(str:string):boolean;
		Count(ba:QByteArray_ITF):number;
		Count2(ch:string):number;
		Count3(str:string):number;
		Count4():number;
		Data():string;
		Data2():string;
		EndsWith(ba:QByteArray_ITF):boolean;
		EndsWith2(ch:string):boolean;
		EndsWith3(str:string):boolean;
		Fill(ch:string,size:number):QByteArray;
		IndexOf(ba:QByteArray_ITF,from:number):number;
		IndexOf2(ch:string,from:number):number;
		IndexOf3(str:string,from:number):number;
		IndexOf4(str:string,from:number):number;
		Insert(i:number,ba:QByteArray_ITF):QByteArray;
		Insert2(i:number,ch:string):QByteArray;
		Insert3(i:number,count:number,ch:string):QByteArray;
		Insert4(i:number,str:string):QByteArray;
		Insert5(i:number,str:string,l:number):QByteArray;
		Insert6(i:number,str:string):QByteArray;
		IsEmpty():boolean;
		Left(l:number):QByteArray;
		Length():number;
		Mid(pos:number,l:number):QByteArray;
		Remove(pos:number,l:number):QByteArray;
		Replace(pos:number,l:number,after:QByteArray_ITF):QByteArray;
		Replace2(pos:number,l:number,after:string):QByteArray;
		Replace3(pos:number,l:number,after:string,alen:number):QByteArray;
		Replace4(before:string,after:string):QByteArray;
		Replace5(before:string,after:QByteArray_ITF):QByteArray;
		Replace6(before:string,after:string):QByteArray;
		Replace7(before:string,bsize:number,after:string,asize:number):QByteArray;
		Replace8(before:QByteArray_ITF,after:QByteArray_ITF):QByteArray;
		Replace9(before:QByteArray_ITF,after:string):QByteArray;
		Replace10(before:string,after:QByteArray_ITF):QByteArray;
		Replace11(before:string,after:string):QByteArray;
		Replace12(before:string,after:string):QByteArray;
		Replace13(before:string,after:string):QByteArray;
		Replace14(before:string,after:QByteArray_ITF):QByteArray;
		Resize(size:number):void;
		Right(l:number):QByteArray;
		Size():number;
		Split(sep:string):QByteArray[];
		ToInt(ok:boolean,base:number):number;
		ToLower():QByteArray;
		ToULong(ok:boolean,base:number):number;
		ToULongLong(ok:boolean,base:number):number;
		DestroyQByteArray():void;
	}
	function NewQByteArrayFromPointer(ptr:number):QByteArray;
	function NewQByteArray():QByteArray;
	function NewQByteArray2(data:string,size:number):QByteArray;
	function NewQByteArray3(size:number,ch:string):QByteArray;
	function NewQByteArray4(other:QByteArray_ITF):QByteArray;
	const QByteArray__Base64Encoding: number;
	const QByteArray__Base64UrlEncoding: number;
	const QByteArray__KeepTrailingEquals: number;
	const QByteArray__OmitTrailingEquals: number;
	interface QByteRef_ITF {
		QByteRef_PTR():QByteRef;
	}

	class QByteRef {
		___pointer: number;
		QByteRef_PTR():QByteRef;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQByteRef():void;
	}
	function NewQByteRefFromPointer(ptr:number):QByteRef;
	const QCborError__UnknownError: number;
	const QCborError__AdvancePastEnd: number;
	const QCborError__InputOutputError: number;
	const QCborError__GarbageAtEnd: number;
	const QCborError__EndOfFile: number;
	const QCborError__UnexpectedBreak: number;
	const QCborError__UnknownType: number;
	const QCborError__IllegalType: number;
	const QCborError__IllegalNumber: number;
	const QCborError__IllegalSimpleType: number;
	const QCborError__InvalidUtf8String: number;
	const QCborError__DataTooLarge: number;
	const QCborError__NestingTooDeep: number;
	const QCborError__UnsupportedType: number;
	const QCborError__NoError: number;
	const QCborStreamReader__UnsignedInteger: number;
	const QCborStreamReader__NegativeInteger: number;
	const QCborStreamReader__ByteString: number;
	const QCborStreamReader__ByteArray: number;
	const QCborStreamReader__TextString: number;
	const QCborStreamReader__String: number;
	const QCborStreamReader__Array: number;
	const QCborStreamReader__Map: number;
	const QCborStreamReader__Tag: number;
	const QCborStreamReader__SimpleType: number;
	const QCborStreamReader__HalfFloat: number;
	const QCborStreamReader__Float16: number;
	const QCborStreamReader__Float: number;
	const QCborStreamReader__Double: number;
	const QCborStreamReader__Invalid: number;
	const QCborStreamReader__EndOfString: number;
	const QCborStreamReader__Ok: number;
	const QCborStreamReader__Error: number;
	const QCborValue__SortKeysInMaps: number;
	const QCborValue__UseFloat: number;
	const QCborValue__UseFloat16: number;
	const QCborValue__UseIntegers: number;
	const QCborValue__NoTransformation: number;
	const QCborValue__Compact: number;
	const QCborValue__LineWrapped: number;
	const QCborValue__ExtendedFormat: number;
	const QCborValue__Integer: number;
	const QCborValue__ByteArray: number;
	const QCborValue__String: number;
	const QCborValue__Array: number;
	const QCborValue__Map: number;
	const QCborValue__Tag: number;
	const QCborValue__SimpleType: number;
	const QCborValue__False: number;
	const QCborValue__True: number;
	const QCborValue__Null: number;
	const QCborValue__Undefined: number;
	const QCborValue__Double: number;
	const QCborValue__DateTime: number;
	const QCborValue__Url: number;
	const QCborValue__RegularExpression: number;
	const QCborValue__Uuid: number;
	const QCborValue__Invalid: number;
	interface QChar_ITF {
		QChar_PTR():QChar;
	}

	class QChar {
		___pointer: number;
		QChar_PTR():QChar;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQChar():void;
		Cell():string;
		Row():string;
		ToLower():QChar;
		ToLower2(ucs4:number):number;
	}
	function NewQCharFromPointer(ptr:number):QChar;
	function NewQChar():QChar;
	function NewQChar2(code:number):QChar;
	function NewQChar3(cell:string,row:string):QChar;
	function NewQChar4(code:number):QChar;
	function NewQChar5(code:number):QChar;
	function NewQChar6(code:number):QChar;
	function NewQChar7(ch:number):QChar;
	function NewQChar8(ch:QLatin1Char_ITF):QChar;
	function NewQChar11(ch:string):QChar;
	function NewQChar12(ch:string):QChar;
	function QChar_ToLower2(ucs4:number):number;
	const QChar__Null: number;
	const QChar__Tabulation: number;
	const QChar__LineFeed: number;
	const QChar__CarriageReturn: number;
	const QChar__Space: number;
	const QChar__Nbsp: number;
	const QChar__SoftHyphen: number;
	const QChar__ReplacementCharacter: number;
	const QChar__ObjectReplacementCharacter: number;
	const QChar__ByteOrderMark: number;
	const QChar__ByteOrderSwapped: number;
	const QChar__ParagraphSeparator: number;
	const QChar__LineSeparator: number;
	const QChar__LastValidCodePoint: number;
	const QChar__Mark_NonSpacing: number;
	const QChar__Mark_SpacingCombining: number;
	const QChar__Mark_Enclosing: number;
	const QChar__Number_DecimalDigit: number;
	const QChar__Number_Letter: number;
	const QChar__Number_Other: number;
	const QChar__Separator_Space: number;
	const QChar__Separator_Line: number;
	const QChar__Separator_Paragraph: number;
	const QChar__Other_Control: number;
	const QChar__Other_Format: number;
	const QChar__Other_Surrogate: number;
	const QChar__Other_PrivateUse: number;
	const QChar__Other_NotAssigned: number;
	const QChar__Letter_Uppercase: number;
	const QChar__Letter_Lowercase: number;
	const QChar__Letter_Titlecase: number;
	const QChar__Letter_Modifier: number;
	const QChar__Letter_Other: number;
	const QChar__Punctuation_Connector: number;
	const QChar__Punctuation_Dash: number;
	const QChar__Punctuation_Open: number;
	const QChar__Punctuation_Close: number;
	const QChar__Punctuation_InitialQuote: number;
	const QChar__Punctuation_FinalQuote: number;
	const QChar__Punctuation_Other: number;
	const QChar__Symbol_Math: number;
	const QChar__Symbol_Currency: number;
	const QChar__Symbol_Modifier: number;
	const QChar__Symbol_Other: number;
	const QChar__Script_Unknown: number;
	const QChar__Script_Inherited: number;
	const QChar__Script_Common: number;
	const QChar__Script_Latin: number;
	const QChar__Script_Greek: number;
	const QChar__Script_Cyrillic: number;
	const QChar__Script_Armenian: number;
	const QChar__Script_Hebrew: number;
	const QChar__Script_Arabic: number;
	const QChar__Script_Syriac: number;
	const QChar__Script_Thaana: number;
	const QChar__Script_Devanagari: number;
	const QChar__Script_Bengali: number;
	const QChar__Script_Gurmukhi: number;
	const QChar__Script_Gujarati: number;
	const QChar__Script_Oriya: number;
	const QChar__Script_Tamil: number;
	const QChar__Script_Telugu: number;
	const QChar__Script_Kannada: number;
	const QChar__Script_Malayalam: number;
	const QChar__Script_Sinhala: number;
	const QChar__Script_Thai: number;
	const QChar__Script_Lao: number;
	const QChar__Script_Tibetan: number;
	const QChar__Script_Myanmar: number;
	const QChar__Script_Georgian: number;
	const QChar__Script_Hangul: number;
	const QChar__Script_Ethiopic: number;
	const QChar__Script_Cherokee: number;
	const QChar__Script_CanadianAboriginal: number;
	const QChar__Script_Ogham: number;
	const QChar__Script_Runic: number;
	const QChar__Script_Khmer: number;
	const QChar__Script_Mongolian: number;
	const QChar__Script_Hiragana: number;
	const QChar__Script_Katakana: number;
	const QChar__Script_Bopomofo: number;
	const QChar__Script_Han: number;
	const QChar__Script_Yi: number;
	const QChar__Script_OldItalic: number;
	const QChar__Script_Gothic: number;
	const QChar__Script_Deseret: number;
	const QChar__Script_Tagalog: number;
	const QChar__Script_Hanunoo: number;
	const QChar__Script_Buhid: number;
	const QChar__Script_Tagbanwa: number;
	const QChar__Script_Coptic: number;
	const QChar__Script_Limbu: number;
	const QChar__Script_TaiLe: number;
	const QChar__Script_LinearB: number;
	const QChar__Script_Ugaritic: number;
	const QChar__Script_Shavian: number;
	const QChar__Script_Osmanya: number;
	const QChar__Script_Cypriot: number;
	const QChar__Script_Braille: number;
	const QChar__Script_Buginese: number;
	const QChar__Script_NewTaiLue: number;
	const QChar__Script_Glagolitic: number;
	const QChar__Script_Tifinagh: number;
	const QChar__Script_SylotiNagri: number;
	const QChar__Script_OldPersian: number;
	const QChar__Script_Kharoshthi: number;
	const QChar__Script_Balinese: number;
	const QChar__Script_Cuneiform: number;
	const QChar__Script_Phoenician: number;
	const QChar__Script_PhagsPa: number;
	const QChar__Script_Nko: number;
	const QChar__Script_Sundanese: number;
	const QChar__Script_Lepcha: number;
	const QChar__Script_OlChiki: number;
	const QChar__Script_Vai: number;
	const QChar__Script_Saurashtra: number;
	const QChar__Script_KayahLi: number;
	const QChar__Script_Rejang: number;
	const QChar__Script_Lycian: number;
	const QChar__Script_Carian: number;
	const QChar__Script_Lydian: number;
	const QChar__Script_Cham: number;
	const QChar__Script_TaiTham: number;
	const QChar__Script_TaiViet: number;
	const QChar__Script_Avestan: number;
	const QChar__Script_EgyptianHieroglyphs: number;
	const QChar__Script_Samaritan: number;
	const QChar__Script_Lisu: number;
	const QChar__Script_Bamum: number;
	const QChar__Script_Javanese: number;
	const QChar__Script_MeeteiMayek: number;
	const QChar__Script_ImperialAramaic: number;
	const QChar__Script_OldSouthArabian: number;
	const QChar__Script_InscriptionalParthian: number;
	const QChar__Script_InscriptionalPahlavi: number;
	const QChar__Script_OldTurkic: number;
	const QChar__Script_Kaithi: number;
	const QChar__Script_Batak: number;
	const QChar__Script_Brahmi: number;
	const QChar__Script_Mandaic: number;
	const QChar__Script_Chakma: number;
	const QChar__Script_MeroiticCursive: number;
	const QChar__Script_MeroiticHieroglyphs: number;
	const QChar__Script_Miao: number;
	const QChar__Script_Sharada: number;
	const QChar__Script_SoraSompeng: number;
	const QChar__Script_Takri: number;
	const QChar__Script_CaucasianAlbanian: number;
	const QChar__Script_BassaVah: number;
	const QChar__Script_Duployan: number;
	const QChar__Script_Elbasan: number;
	const QChar__Script_Grantha: number;
	const QChar__Script_PahawhHmong: number;
	const QChar__Script_Khojki: number;
	const QChar__Script_LinearA: number;
	const QChar__Script_Mahajani: number;
	const QChar__Script_Manichaean: number;
	const QChar__Script_MendeKikakui: number;
	const QChar__Script_Modi: number;
	const QChar__Script_Mro: number;
	const QChar__Script_OldNorthArabian: number;
	const QChar__Script_Nabataean: number;
	const QChar__Script_Palmyrene: number;
	const QChar__Script_PauCinHau: number;
	const QChar__Script_OldPermic: number;
	const QChar__Script_PsalterPahlavi: number;
	const QChar__Script_Siddham: number;
	const QChar__Script_Khudawadi: number;
	const QChar__Script_Tirhuta: number;
	const QChar__Script_WarangCiti: number;
	const QChar__Script_Ahom: number;
	const QChar__Script_AnatolianHieroglyphs: number;
	const QChar__Script_Hatran: number;
	const QChar__Script_Multani: number;
	const QChar__Script_OldHungarian: number;
	const QChar__Script_SignWriting: number;
	const QChar__Script_Adlam: number;
	const QChar__Script_Bhaiksuki: number;
	const QChar__Script_Marchen: number;
	const QChar__Script_Newa: number;
	const QChar__Script_Osage: number;
	const QChar__Script_Tangut: number;
	const QChar__Script_MasaramGondi: number;
	const QChar__Script_Nushu: number;
	const QChar__Script_Soyombo: number;
	const QChar__Script_ZanabazarSquare: number;
	const QChar__ScriptCount: number;
	const QChar__DirL: number;
	const QChar__DirR: number;
	const QChar__DirEN: number;
	const QChar__DirES: number;
	const QChar__DirET: number;
	const QChar__DirAN: number;
	const QChar__DirCS: number;
	const QChar__DirB: number;
	const QChar__DirS: number;
	const QChar__DirWS: number;
	const QChar__DirON: number;
	const QChar__DirLRE: number;
	const QChar__DirLRO: number;
	const QChar__DirAL: number;
	const QChar__DirRLE: number;
	const QChar__DirRLO: number;
	const QChar__DirPDF: number;
	const QChar__DirNSM: number;
	const QChar__DirBN: number;
	const QChar__DirLRI: number;
	const QChar__DirRLI: number;
	const QChar__DirFSI: number;
	const QChar__DirPDI: number;
	const QChar__NoDecomposition: number;
	const QChar__Canonical: number;
	const QChar__Font: number;
	const QChar__NoBreak: number;
	const QChar__Initial: number;
	const QChar__Medial: number;
	const QChar__Final: number;
	const QChar__Isolated: number;
	const QChar__Circle: number;
	const QChar__Super: number;
	const QChar__Sub: number;
	const QChar__Vertical: number;
	const QChar__Wide: number;
	const QChar__Narrow: number;
	const QChar__Small: number;
	const QChar__Square: number;
	const QChar__Compat: number;
	const QChar__Fraction: number;
	const QChar__Joining_None: number;
	const QChar__Joining_Causing: number;
	const QChar__Joining_Dual: number;
	const QChar__Joining_Right: number;
	const QChar__Joining_Left: number;
	const QChar__Joining_Transparent: number;
	const QChar__Unicode_Unassigned: number;
	const QChar__Unicode_1_1: number;
	const QChar__Unicode_2_0: number;
	const QChar__Unicode_2_1_2: number;
	const QChar__Unicode_3_0: number;
	const QChar__Unicode_3_1: number;
	const QChar__Unicode_3_2: number;
	const QChar__Unicode_4_0: number;
	const QChar__Unicode_4_1: number;
	const QChar__Unicode_5_0: number;
	const QChar__Unicode_5_1: number;
	const QChar__Unicode_5_2: number;
	const QChar__Unicode_6_0: number;
	const QChar__Unicode_6_1: number;
	const QChar__Unicode_6_2: number;
	const QChar__Unicode_6_3: number;
	const QChar__Unicode_7_0: number;
	const QChar__Unicode_8_0: number;
	const QChar__Unicode_9_0: number;
	const QChar__Unicode_10_0: number;
	interface QChildEvent_ITF extends QEvent_ITF {
		QChildEvent_PTR():QChildEvent;
	}

	class QChildEvent extends QEvent {
		___pointer: number;
		QChildEvent_PTR():QChildEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQChildEvent():void;
		Child():QObject;
	}
	function NewQChildEventFromPointer(ptr:number):QChildEvent;
	function NewQChildEvent(ty:number,child:QObject_ITF):QChildEvent;
	const QCommandLineOption__HiddenFromHelp: number;
	const QCommandLineOption__ShortOptionStyle: number;
	const QCommandLineParser__ParseAsCompactedShortOptions: number;
	const QCommandLineParser__ParseAsLongOptions: number;
	const QCommandLineParser__ParseAsOptions: number;
	const QCommandLineParser__ParseAsPositionalArguments: number;
	interface QCoreApplication_ITF extends QObject_ITF {
		QCoreApplication_PTR():QCoreApplication;
	}

	class QCoreApplication extends QObject {
		___pointer: number;
		QCoreApplication_PTR():QCoreApplication;
		Pointer():number;
		SetPointer(p:number):void;
		Exec():number;
		Exit(returnCode:number):void;
		Instance():QCoreApplication;
		ProcessEvents(flags:number):void;
		ProcessEvents2(flags:number,ms:number):void;
		ConnectQuit(f:()=>void):void;
		DisconnectQuit():void;
		Quit():void;
		QuitDefault():void;
		SetAttribute(attribute:number,on:boolean):void;
		ConnectDestroyQCoreApplication(f:()=>void):void;
		DisconnectDestroyQCoreApplication():void;
		DestroyQCoreApplication():void;
		DestroyQCoreApplicationDefault():void;
	}
	function NewQCoreApplicationFromPointer(ptr:number):QCoreApplication;
	function NewQCoreApplication(argc:number,argv:string[]):QCoreApplication;
	function QCoreApplication_Exec():number;
	function QCoreApplication_Exit(returnCode:number):void;
	function QCoreApplication_Instance():QCoreApplication;
	function QCoreApplication_ProcessEvents(flags:number):void;
	function QCoreApplication_ProcessEvents2(flags:number,ms:number):void;
	function QCoreApplication_SetAttribute(attribute:number,on:boolean):void;
	const QCryptographicHash__Md4: number;
	const QCryptographicHash__Md5: number;
	const QCryptographicHash__Sha1: number;
	const QCryptographicHash__Sha224: number;
	const QCryptographicHash__Sha256: number;
	const QCryptographicHash__Sha384: number;
	const QCryptographicHash__Sha512: number;
	const QCryptographicHash__Keccak_224: number;
	const QCryptographicHash__Keccak_256: number;
	const QCryptographicHash__Keccak_384: number;
	const QCryptographicHash__Keccak_512: number;
	const QCryptographicHash__RealSha3_224: number;
	const QCryptographicHash__RealSha3_256: number;
	const QCryptographicHash__RealSha3_384: number;
	const QCryptographicHash__RealSha3_512: number;
	const QCryptographicHash__Sha3_224: number;
	const QCryptographicHash__Sha3_256: number;
	const QCryptographicHash__Sha3_384: number;
	const QCryptographicHash__Sha3_512: number;
	interface QDataStream_ITF {
		QDataStream_PTR():QDataStream;
	}

	class QDataStream {
		___pointer: number;
		QDataStream_PTR():QDataStream;
		Pointer():number;
		SetPointer(p:number):void;
		Device():QIODevice;
		Version():number;
		DestroyQDataStream():void;
	}
	function NewQDataStreamFromPointer(ptr:number):QDataStream;
	function NewQDataStream():QDataStream;
	function NewQDataStream2(d:QIODevice_ITF):QDataStream;
	function NewQDataStream3(a:QByteArray_ITF,mode:number):QDataStream;
	function NewQDataStream4(a:QByteArray_ITF):QDataStream;
	const QDataStream__Qt_1_0: number;
	const QDataStream__Qt_2_0: number;
	const QDataStream__Qt_2_1: number;
	const QDataStream__Qt_3_0: number;
	const QDataStream__Qt_3_1: number;
	const QDataStream__Qt_3_3: number;
	const QDataStream__Qt_4_0: number;
	const QDataStream__Qt_4_1: number;
	const QDataStream__Qt_4_2: number;
	const QDataStream__Qt_4_3: number;
	const QDataStream__Qt_4_4: number;
	const QDataStream__Qt_4_5: number;
	const QDataStream__Qt_4_6: number;
	const QDataStream__Qt_4_7: number;
	const QDataStream__Qt_4_8: number;
	const QDataStream__Qt_4_9: number;
	const QDataStream__Qt_5_0: number;
	const QDataStream__Qt_5_1: number;
	const QDataStream__Qt_5_2: number;
	const QDataStream__Qt_5_3: number;
	const QDataStream__Qt_5_4: number;
	const QDataStream__Qt_5_5: number;
	const QDataStream__Qt_5_6: number;
	const QDataStream__Qt_5_7: number;
	const QDataStream__Qt_5_8: number;
	const QDataStream__Qt_5_9: number;
	const QDataStream__Qt_5_10: number;
	const QDataStream__Qt_5_11: number;
	const QDataStream__Qt_5_12: number;
	const QDataStream__Qt_5_13: number;
	const QDataStream__Qt_DefaultCompiledVersion: number;
	const QDataStream__BigEndian: number;
	const QDataStream__LittleEndian: number;
	const QDataStream__Ok: number;
	const QDataStream__ReadPastEnd: number;
	const QDataStream__ReadCorruptData: number;
	const QDataStream__WriteFailed: number;
	const QDataStream__SinglePrecision: number;
	const QDataStream__DoublePrecision: number;
	interface QDate_ITF {
		QDate_PTR():QDate;
	}

	class QDate {
		___pointer: number;
		QDate_PTR():QDate;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQDate():void;
		IsValid():boolean;
		IsValid2(year:number,month:number,day:number):boolean;
		Month():number;
		ToString(format:string):string;
		ToString2(format:number):string;
		ToString3(format:QStringView_ITF):string;
		Year():number;
	}
	function NewQDateFromPointer(ptr:number):QDate;
	function NewQDate2():QDate;
	function NewQDate3(y:number,m:number,d:number):QDate;
	function QDate_IsValid2(year:number,month:number,day:number):boolean;
	function NewQDateTime():QDateTime;
	function NewQDateTime2(date:QDate_ITF):QDateTime;
	function NewQDateTime3(date:QDate_ITF,ti:QTime_ITF,spec:number):QDateTime;
	function NewQDateTime4(date:QDate_ITF,ti:QTime_ITF,spec:number,offsetSeconds:number):QDateTime;
	function NewQDateTime5(date:QDate_ITF,ti:QTime_ITF,timeZone:QTimeZone_ITF):QDateTime;
	function NewQDateTime6(other:QDateTime_ITF):QDateTime;
	function NewQDateTime7(other:QDateTime_ITF):QDateTime;
	const QDate__DateFormat: number;
	const QDate__StandaloneFormat: number;
	interface QDateTime_ITF {
		QDateTime_PTR():QDateTime;
	}

	class QDateTime {
		___pointer: number;
		QDateTime_PTR():QDateTime;
		Pointer():number;
		SetPointer(p:number):void;
		Date():QDate;
		IsValid():boolean;
		Time():QTime;
		ToString(format:string):string;
		ToString2(format:number):string;
		ToString3(format:QStringView_ITF):string;
		DestroyQDateTime():void;
	}
	function NewQDateTimeFromPointer(ptr:number):QDateTime;
	function NewQDateTime():QDateTime;
	function NewQDateTime2(date:QDate_ITF):QDateTime;
	function NewQDateTime3(date:QDate_ITF,ti:QTime_ITF,spec:number):QDateTime;
	function NewQDateTime4(date:QDate_ITF,ti:QTime_ITF,spec:number,offsetSeconds:number):QDateTime;
	function NewQDateTime5(date:QDate_ITF,ti:QTime_ITF,timeZone:QTimeZone_ITF):QDateTime;
	function NewQDateTime6(other:QDateTime_ITF):QDateTime;
	function NewQDateTime7(other:QDateTime_ITF):QDateTime;
	const QDeadlineTimer__Forever: number;
	const QDebug__MinimumVerbosity: number;
	const QDebug__DefaultVerbosity: number;
	const QDebug__MaximumVerbosity: number;
	interface QDir_ITF {
		QDir_PTR():QDir;
	}

	class QDir {
		___pointer: number;
		QDir_PTR():QDir;
		Pointer():number;
		SetPointer(p:number):void;
		Count():number;
		Current():QDir;
		Exists(name:string):boolean;
		Exists2():boolean;
		Filter():number;
		Home():QDir;
		HomePath():string;
		IsEmpty(filters:number):boolean;
		Match(filter:string,fileName:string):boolean;
		Match2(filters:string[],fileName:string):boolean;
		Mkdir(dirName:string):boolean;
		Path():string;
		Remove(fileName:string):boolean;
		Root():QDir;
		SetCurrent(path:string):boolean;
		Temp():QDir;
		DestroyQDir():void;
	}
	function NewQDirFromPointer(ptr:number):QDir;
	function NewQDir(dir:QDir_ITF):QDir;
	function NewQDir2(path:string):QDir;
	function NewQDir3(path:string,nameFilter:string,sort:number,filters:number):QDir;
	function QDir_Current():QDir;
	function QDir_Home():QDir;
	function QDir_HomePath():string;
	function QDir_Match(filter:string,fileName:string):boolean;
	function QDir_Match2(filters:string[],fileName:string):boolean;
	function QDir_Root():QDir;
	function QDir_SetCurrent(path:string):boolean;
	function QDir_Temp():QDir;
	const QDir__Dirs: number;
	const QDir__Files: number;
	const QDir__Drives: number;
	const QDir__NoSymLinks: number;
	const QDir__AllEntries: number;
	const QDir__TypeMask: number;
	const QDir__Readable: number;
	const QDir__Writable: number;
	const QDir__Executable: number;
	const QDir__PermissionMask: number;
	const QDir__Modified: number;
	const QDir__Hidden: number;
	const QDir__System: number;
	const QDir__AccessMask: number;
	const QDir__AllDirs: number;
	const QDir__CaseSensitive: number;
	const QDir__NoDot: number;
	const QDir__NoDotDot: number;
	const QDir__NoDotAndDotDot: number;
	const QDir__NoFilter: number;
	const QDir__Name: number;
	const QDir__Time: number;
	const QDir__Size: number;
	const QDir__Unsorted: number;
	const QDir__SortByMask: number;
	const QDir__DirsFirst: number;
	const QDir__Reversed: number;
	const QDir__IgnoreCase: number;
	const QDir__DirsLast: number;
	const QDir__LocaleAware: number;
	const QDir__Type: number;
	const QDir__NoSort: number;
	const QDirIterator__NoIteratorFlags: number;
	const QDirIterator__FollowSymlinks: number;
	const QDirIterator__Subdirectories: number;
	interface QEasingCurve_ITF {
		QEasingCurve_PTR():QEasingCurve;
	}

	class QEasingCurve {
		___pointer: number;
		QEasingCurve_PTR():QEasingCurve;
		Pointer():number;
		SetPointer(p:number):void;
		Type():number;
		DestroyQEasingCurve():void;
	}
	function NewQEasingCurveFromPointer(ptr:number):QEasingCurve;
	function NewQEasingCurve(ty:number):QEasingCurve;
	function NewQEasingCurve2(other:QEasingCurve_ITF):QEasingCurve;
	function NewQEasingCurve3(other:QEasingCurve_ITF):QEasingCurve;
	const QEasingCurve__Linear: number;
	const QEasingCurve__InQuad: number;
	const QEasingCurve__OutQuad: number;
	const QEasingCurve__InOutQuad: number;
	const QEasingCurve__OutInQuad: number;
	const QEasingCurve__InCubic: number;
	const QEasingCurve__OutCubic: number;
	const QEasingCurve__InOutCubic: number;
	const QEasingCurve__OutInCubic: number;
	const QEasingCurve__InQuart: number;
	const QEasingCurve__OutQuart: number;
	const QEasingCurve__InOutQuart: number;
	const QEasingCurve__OutInQuart: number;
	const QEasingCurve__InQuint: number;
	const QEasingCurve__OutQuint: number;
	const QEasingCurve__InOutQuint: number;
	const QEasingCurve__OutInQuint: number;
	const QEasingCurve__InSine: number;
	const QEasingCurve__OutSine: number;
	const QEasingCurve__InOutSine: number;
	const QEasingCurve__OutInSine: number;
	const QEasingCurve__InExpo: number;
	const QEasingCurve__OutExpo: number;
	const QEasingCurve__InOutExpo: number;
	const QEasingCurve__OutInExpo: number;
	const QEasingCurve__InCirc: number;
	const QEasingCurve__OutCirc: number;
	const QEasingCurve__InOutCirc: number;
	const QEasingCurve__OutInCirc: number;
	const QEasingCurve__InElastic: number;
	const QEasingCurve__OutElastic: number;
	const QEasingCurve__InOutElastic: number;
	const QEasingCurve__OutInElastic: number;
	const QEasingCurve__InBack: number;
	const QEasingCurve__OutBack: number;
	const QEasingCurve__InOutBack: number;
	const QEasingCurve__OutInBack: number;
	const QEasingCurve__InBounce: number;
	const QEasingCurve__OutBounce: number;
	const QEasingCurve__InOutBounce: number;
	const QEasingCurve__OutInBounce: number;
	const QEasingCurve__InCurve: number;
	const QEasingCurve__OutCurve: number;
	const QEasingCurve__SineCurve: number;
	const QEasingCurve__CosineCurve: number;
	const QEasingCurve__BezierSpline: number;
	const QEasingCurve__TCBSpline: number;
	const QEasingCurve__Custom: number;
	const QEasingCurve__NCurveTypes: number;
	const QElapsedTimer__SystemTime: number;
	const QElapsedTimer__MonotonicClock: number;
	const QElapsedTimer__TickCounter: number;
	const QElapsedTimer__MachAbsoluteTime: number;
	const QElapsedTimer__PerformanceCounter: number;
	interface QEvent_ITF {
		QEvent_PTR():QEvent;
	}

	class QEvent {
		___pointer: number;
		QEvent_PTR():QEvent;
		Pointer():number;
		SetPointer(p:number):void;
		Accept():void;
		Type():number;
		ConnectDestroyQEvent(f:()=>void):void;
		DisconnectDestroyQEvent():void;
		DestroyQEvent():void;
		DestroyQEventDefault():void;
	}
	function NewQEventFromPointer(ptr:number):QEvent;
	function NewQEvent(ty:number):QEvent;
	function NewQEventLoop(parent:QObject_ITF):QEventLoop;
	const QEvent__None: number;
	const QEvent__Timer: number;
	const QEvent__MouseButtonPress: number;
	const QEvent__MouseButtonRelease: number;
	const QEvent__MouseButtonDblClick: number;
	const QEvent__MouseMove: number;
	const QEvent__KeyPress: number;
	const QEvent__KeyRelease: number;
	const QEvent__FocusIn: number;
	const QEvent__FocusOut: number;
	const QEvent__FocusAboutToChange: number;
	const QEvent__Enter: number;
	const QEvent__Leave: number;
	const QEvent__Paint: number;
	const QEvent__Move: number;
	const QEvent__Resize: number;
	const QEvent__Create: number;
	const QEvent__Destroy: number;
	const QEvent__Show: number;
	const QEvent__Hide: number;
	const QEvent__Close: number;
	const QEvent__Quit: number;
	const QEvent__ParentChange: number;
	const QEvent__ParentAboutToChange: number;
	const QEvent__ThreadChange: number;
	const QEvent__WindowActivate: number;
	const QEvent__WindowDeactivate: number;
	const QEvent__ShowToParent: number;
	const QEvent__HideToParent: number;
	const QEvent__Wheel: number;
	const QEvent__WindowTitleChange: number;
	const QEvent__WindowIconChange: number;
	const QEvent__ApplicationWindowIconChange: number;
	const QEvent__ApplicationFontChange: number;
	const QEvent__ApplicationLayoutDirectionChange: number;
	const QEvent__ApplicationPaletteChange: number;
	const QEvent__PaletteChange: number;
	const QEvent__Clipboard: number;
	const QEvent__Speech: number;
	const QEvent__MetaCall: number;
	const QEvent__SockAct: number;
	const QEvent__WinEventAct: number;
	const QEvent__DeferredDelete: number;
	const QEvent__DragEnter: number;
	const QEvent__DragMove: number;
	const QEvent__DragLeave: number;
	const QEvent__Drop: number;
	const QEvent__DragResponse: number;
	const QEvent__ChildAdded: number;
	const QEvent__ChildPolished: number;
	const QEvent__ChildRemoved: number;
	const QEvent__ShowWindowRequest: number;
	const QEvent__PolishRequest: number;
	const QEvent__Polish: number;
	const QEvent__LayoutRequest: number;
	const QEvent__UpdateRequest: number;
	const QEvent__UpdateLater: number;
	const QEvent__EmbeddingControl: number;
	const QEvent__ActivateControl: number;
	const QEvent__DeactivateControl: number;
	const QEvent__ContextMenu: number;
	const QEvent__InputMethod: number;
	const QEvent__TabletMove: number;
	const QEvent__LocaleChange: number;
	const QEvent__LanguageChange: number;
	const QEvent__LayoutDirectionChange: number;
	const QEvent__Style: number;
	const QEvent__TabletPress: number;
	const QEvent__TabletRelease: number;
	const QEvent__OkRequest: number;
	const QEvent__HelpRequest: number;
	const QEvent__IconDrag: number;
	const QEvent__FontChange: number;
	const QEvent__EnabledChange: number;
	const QEvent__ActivationChange: number;
	const QEvent__StyleChange: number;
	const QEvent__IconTextChange: number;
	const QEvent__ModifiedChange: number;
	const QEvent__MouseTrackingChange: number;
	const QEvent__WindowBlocked: number;
	const QEvent__WindowUnblocked: number;
	const QEvent__WindowStateChange: number;
	const QEvent__ReadOnlyChange: number;
	const QEvent__ToolTip: number;
	const QEvent__WhatsThis: number;
	const QEvent__StatusTip: number;
	const QEvent__ActionChanged: number;
	const QEvent__ActionAdded: number;
	const QEvent__ActionRemoved: number;
	const QEvent__FileOpen: number;
	const QEvent__Shortcut: number;
	const QEvent__ShortcutOverride: number;
	const QEvent__WhatsThisClicked: number;
	const QEvent__ToolBarChange: number;
	const QEvent__ApplicationActivate: number;
	const QEvent__ApplicationActivated: number;
	const QEvent__ApplicationDeactivate: number;
	const QEvent__ApplicationDeactivated: number;
	const QEvent__QueryWhatsThis: number;
	const QEvent__EnterWhatsThisMode: number;
	const QEvent__LeaveWhatsThisMode: number;
	const QEvent__ZOrderChange: number;
	const QEvent__HoverEnter: number;
	const QEvent__HoverLeave: number;
	const QEvent__HoverMove: number;
	const QEvent__EnterEditFocus: number;
	const QEvent__LeaveEditFocus: number;
	const QEvent__AcceptDropsChange: number;
	const QEvent__ZeroTimerEvent: number;
	const QEvent__GraphicsSceneMouseMove: number;
	const QEvent__GraphicsSceneMousePress: number;
	const QEvent__GraphicsSceneMouseRelease: number;
	const QEvent__GraphicsSceneMouseDoubleClick: number;
	const QEvent__GraphicsSceneContextMenu: number;
	const QEvent__GraphicsSceneHoverEnter: number;
	const QEvent__GraphicsSceneHoverMove: number;
	const QEvent__GraphicsSceneHoverLeave: number;
	const QEvent__GraphicsSceneHelp: number;
	const QEvent__GraphicsSceneDragEnter: number;
	const QEvent__GraphicsSceneDragMove: number;
	const QEvent__GraphicsSceneDragLeave: number;
	const QEvent__GraphicsSceneDrop: number;
	const QEvent__GraphicsSceneWheel: number;
	const QEvent__KeyboardLayoutChange: number;
	const QEvent__DynamicPropertyChange: number;
	const QEvent__TabletEnterProximity: number;
	const QEvent__TabletLeaveProximity: number;
	const QEvent__NonClientAreaMouseMove: number;
	const QEvent__NonClientAreaMouseButtonPress: number;
	const QEvent__NonClientAreaMouseButtonRelease: number;
	const QEvent__NonClientAreaMouseButtonDblClick: number;
	const QEvent__MacSizeChange: number;
	const QEvent__ContentsRectChange: number;
	const QEvent__MacGLWindowChange: number;
	const QEvent__FutureCallOut: number;
	const QEvent__GraphicsSceneResize: number;
	const QEvent__GraphicsSceneMove: number;
	const QEvent__CursorChange: number;
	const QEvent__ToolTipChange: number;
	const QEvent__NetworkReplyUpdated: number;
	const QEvent__GrabMouse: number;
	const QEvent__UngrabMouse: number;
	const QEvent__GrabKeyboard: number;
	const QEvent__UngrabKeyboard: number;
	const QEvent__MacGLClearDrawable: number;
	const QEvent__StateMachineSignal: number;
	const QEvent__StateMachineWrapped: number;
	const QEvent__TouchBegin: number;
	const QEvent__TouchUpdate: number;
	const QEvent__TouchEnd: number;
	const QEvent__NativeGesture: number;
	const QEvent__RequestSoftwareInputPanel: number;
	const QEvent__CloseSoftwareInputPanel: number;
	const QEvent__WinIdChange: number;
	const QEvent__Gesture: number;
	const QEvent__GestureOverride: number;
	const QEvent__ScrollPrepare: number;
	const QEvent__Scroll: number;
	const QEvent__Expose: number;
	const QEvent__InputMethodQuery: number;
	const QEvent__OrientationChange: number;
	const QEvent__TouchCancel: number;
	const QEvent__ThemeChange: number;
	const QEvent__SockClose: number;
	const QEvent__PlatformPanel: number;
	const QEvent__StyleAnimationUpdate: number;
	const QEvent__ApplicationStateChange: number;
	const QEvent__WindowChangeInternal: number;
	const QEvent__ScreenChangeInternal: number;
	const QEvent__PlatformSurface: number;
	const QEvent__Pointer: number;
	const QEvent__TabletTrackingChange: number;
	const QEvent__User: number;
	const QEvent__MaxUser: number;
	interface QEventLoop_ITF extends QObject_ITF {
		QEventLoop_PTR():QEventLoop;
	}

	class QEventLoop extends QObject {
		___pointer: number;
		QEventLoop_PTR():QEventLoop;
		Pointer():number;
		SetPointer(p:number):void;
		Exec(flags:number):number;
		Exit(returnCode:number):void;
		ProcessEvents(flags:number):boolean;
		ProcessEvents2(flags:number,maxTime:number):void;
		ConnectQuit(f:()=>void):void;
		DisconnectQuit():void;
		Quit():void;
		QuitDefault():void;
		ConnectDestroyQEventLoop(f:()=>void):void;
		DisconnectDestroyQEventLoop():void;
		DestroyQEventLoop():void;
		DestroyQEventLoopDefault():void;
	}
	function NewQEventLoopFromPointer(ptr:number):QEventLoop;
	function NewQEventLoop(parent:QObject_ITF):QEventLoop;
	const QEventLoop__AllEvents: number;
	const QEventLoop__ExcludeUserInputEvents: number;
	const QEventLoop__ExcludeSocketNotifiers: number;
	const QEventLoop__WaitForMoreEvents: number;
	const QEventLoop__X11ExcludeTimers: number;
	const QEventLoop__EventLoopExec: number;
	const QEventLoop__DialogExec: number;
	interface QFile_ITF extends QFileDevice_ITF {
		QFile_PTR():QFile;
	}

	class QFile extends QFileDevice {
		___pointer: number;
		QFile_PTR():QFile;
		Pointer():number;
		SetPointer(p:number):void;
		Copy(newName:string):boolean;
		Copy2(fileName:string,newName:string):boolean;
		Exists(fileName:string):boolean;
		Exists2():boolean;
		Open3(fd:number,mode:number,handleFlags:number):boolean;
		Remove():boolean;
		Remove2(fileName:string):boolean;
		Resize2(fileName:string,sz:number):boolean;
		ConnectDestroyQFile(f:()=>void):void;
		DisconnectDestroyQFile():void;
		DestroyQFile():void;
		DestroyQFileDefault():void;
	}
	function NewQFileFromPointer(ptr:number):QFile;
	function NewQFile():QFile;
	function NewQFile2(name:string):QFile;
	function NewQFile3(parent:QObject_ITF):QFile;
	function NewQFile4(name:string,parent:QObject_ITF):QFile;
	function QFile_Copy2(fileName:string,newName:string):boolean;
	function QFile_Exists(fileName:string):boolean;
	function QFile_Remove2(fileName:string):boolean;
	function QFile_Resize2(fileName:string,sz:number):boolean;
	function NewQFileInfo2():QFileInfo;
	function NewQFileInfo3(file:string):QFileInfo;
	function NewQFileInfo4(file:QFile_ITF):QFileInfo;
	function NewQFileInfo5(dir:QDir_ITF,file:string):QFileInfo;
	function NewQFileInfo6(fileinfo:QFileInfo_ITF):QFileInfo;
	function NewQFileSystemWatcher(parent:QObject_ITF):QFileSystemWatcher;
	function NewQFileSystemWatcher2(paths:string[],parent:QObject_ITF):QFileSystemWatcher;
	interface QFileDevice_ITF extends QIODevice_ITF {
		QFileDevice_PTR():QFileDevice;
	}

	class QFileDevice extends QIODevice {
		___pointer: number;
		QFileDevice_PTR():QFileDevice;
		Pointer():number;
		SetPointer(p:number):void;
		Error():number;
		ConnectFileName(f:()=>string):void;
		DisconnectFileName():void;
		FileName():string;
		FileNameDefault():string;
		Map(offset:number,size:number,flags:number):string;
		ConnectResize(f:(sz:number)=>boolean):void;
		DisconnectResize():void;
		Resize(sz:number):boolean;
		ResizeDefault(sz:number):boolean;
		ConnectDestroyQFileDevice(f:()=>void):void;
		DisconnectDestroyQFileDevice():void;
		DestroyQFileDevice():void;
		DestroyQFileDeviceDefault():void;
		ReadData(data:string,maxSize:number):number;
		ReadDataDefault(data:string,maxSize:number):number;
		WriteData(data:string,maxSize:number):number;
		WriteDataDefault(data:string,maxSize:number):number;
	}
	function NewQFileDeviceFromPointer(ptr:number):QFileDevice;
	const QFileDevice__NoError: number;
	const QFileDevice__ReadError: number;
	const QFileDevice__WriteError: number;
	const QFileDevice__FatalError: number;
	const QFileDevice__ResourceError: number;
	const QFileDevice__OpenError: number;
	const QFileDevice__AbortError: number;
	const QFileDevice__TimeOutError: number;
	const QFileDevice__UnspecifiedError: number;
	const QFileDevice__RemoveError: number;
	const QFileDevice__RenameError: number;
	const QFileDevice__PositionError: number;
	const QFileDevice__ResizeError: number;
	const QFileDevice__PermissionsError: number;
	const QFileDevice__CopyError: number;
	const QFileDevice__FileAccessTime: number;
	const QFileDevice__FileBirthTime: number;
	const QFileDevice__FileMetadataChangeTime: number;
	const QFileDevice__FileModificationTime: number;
	const QFileDevice__ReadOwner: number;
	const QFileDevice__WriteOwner: number;
	const QFileDevice__ExeOwner: number;
	const QFileDevice__ReadUser: number;
	const QFileDevice__WriteUser: number;
	const QFileDevice__ExeUser: number;
	const QFileDevice__ReadGroup: number;
	const QFileDevice__WriteGroup: number;
	const QFileDevice__ExeGroup: number;
	const QFileDevice__ReadOther: number;
	const QFileDevice__WriteOther: number;
	const QFileDevice__ExeOther: number;
	const QFileDevice__AutoCloseHandle: number;
	const QFileDevice__DontCloseHandle: number;
	const QFileDevice__NoOptions: number;
	const QFileDevice__MapPrivateOption: number;
	interface QFileInfo_ITF {
		QFileInfo_PTR():QFileInfo;
	}

	class QFileInfo {
		___pointer: number;
		QFileInfo_PTR():QFileInfo;
		Pointer():number;
		SetPointer(p:number):void;
		BundleName():string;
		Dir():QDir;
		Exists():boolean;
		Exists2(file:string):boolean;
		FileName():string;
		Group():string;
		IsHidden():boolean;
		Path():string;
		Size():number;
		Suffix():string;
		DestroyQFileInfo():void;
	}
	function NewQFileInfoFromPointer(ptr:number):QFileInfo;
	function NewQFileInfo2():QFileInfo;
	function NewQFileInfo3(file:string):QFileInfo;
	function NewQFileInfo4(file:QFile_ITF):QFileInfo;
	function NewQFileInfo5(dir:QDir_ITF,file:string):QFileInfo;
	function NewQFileInfo6(fileinfo:QFileInfo_ITF):QFileInfo;
	function QFileInfo_Exists2(file:string):boolean;
	interface QFileSystemWatcher_ITF extends QObject_ITF {
		QFileSystemWatcher_PTR():QFileSystemWatcher;
	}

	class QFileSystemWatcher extends QObject {
		___pointer: number;
		QFileSystemWatcher_PTR():QFileSystemWatcher;
		Pointer():number;
		SetPointer(p:number):void;
		AddPath(path:string):boolean;
		ConnectFileChanged(f:(path:string)=>void):void;
		DisconnectFileChanged():void;
		ConnectDestroyQFileSystemWatcher(f:()=>void):void;
		DisconnectDestroyQFileSystemWatcher():void;
		DestroyQFileSystemWatcher():void;
		DestroyQFileSystemWatcherDefault():void;
	}
	function NewQFileSystemWatcherFromPointer(ptr:number):QFileSystemWatcher;
	function NewQFileSystemWatcher(parent:QObject_ITF):QFileSystemWatcher;
	function NewQFileSystemWatcher2(paths:string[],parent:QObject_ITF):QFileSystemWatcher;
	const QHistoryState__ShallowHistory: number;
	const QHistoryState__DeepHistory: number;
	interface QIODevice_ITF extends QObject_ITF {
		QIODevice_PTR():QIODevice;
	}

	class QIODevice extends QObject {
		___pointer: number;
		QIODevice_PTR():QIODevice;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectClose(f:()=>void):void;
		DisconnectClose():void;
		Close():void;
		CloseDefault():void;
		ErrorString():string;
		ConnectOpen(f:(mode:number)=>boolean):void;
		DisconnectOpen():void;
		Open(mode:number):boolean;
		OpenDefault(mode:number):boolean;
		ConnectPos(f:()=>number):void;
		DisconnectPos():void;
		Pos():number;
		PosDefault():number;
		Read(data:string,maxSize:number):number;
		Read2(maxSize:number):QByteArray;
		ReadAll():QByteArray;
		ConnectReadData(f:(data:string,maxSize:number)=>number):void;
		DisconnectReadData():void;
		ReadData(data:string,maxSize:number):number;
		ConnectReset(f:()=>boolean):void;
		DisconnectReset():void;
		Reset():boolean;
		ResetDefault():boolean;
		ConnectSize(f:()=>number):void;
		DisconnectSize():void;
		Size():number;
		SizeDefault():number;
		Write(data:string,maxSize:number):number;
		Write2(data:string):number;
		Write3(byteArray:QByteArray_ITF):number;
		ConnectWriteData(f:(data:string,maxSize:number)=>number):void;
		DisconnectWriteData():void;
		WriteData(data:string,maxSize:number):number;
		ConnectDestroyQIODevice(f:()=>void):void;
		DisconnectDestroyQIODevice():void;
		DestroyQIODevice():void;
		DestroyQIODeviceDefault():void;
	}
	function NewQIODeviceFromPointer(ptr:number):QIODevice;
	function NewQIODevice():QIODevice;
	function NewQIODevice2(parent:QObject_ITF):QIODevice;
	const QIODevice__NotOpen: number;
	const QIODevice__ReadOnly: number;
	const QIODevice__WriteOnly: number;
	const QIODevice__ReadWrite: number;
	const QIODevice__Append: number;
	const QIODevice__Truncate: number;
	const QIODevice__Text: number;
	const QIODevice__Unbuffered: number;
	const QIODevice__NewOnly: number;
	const QIODevice__ExistingOnly: number;
	interface QItemSelection_ITF {
		QItemSelection_PTR():QItemSelection;
	}

	class QItemSelection {
		___pointer: number;
		QItemSelection_PTR():QItemSelection;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQItemSelection():void;
		Contains(index:QModelIndex_ITF):boolean;
		Select(topLeft:QModelIndex_ITF,bottomRight:QModelIndex_ITF):void;
		Split(ran:QItemSelectionRange_ITF,other:QItemSelectionRange_ITF,result:QItemSelection_ITF):void;
	}
	function NewQItemSelectionFromPointer(ptr:number):QItemSelection;
	function NewQItemSelection():QItemSelection;
	function NewQItemSelection2(topLeft:QModelIndex_ITF,bottomRight:QModelIndex_ITF):QItemSelection;
	function QItemSelection_Split(ran:QItemSelectionRange_ITF,other:QItemSelectionRange_ITF,result:QItemSelection_ITF):void;
	function NewQItemSelectionRange():QItemSelectionRange;
	function NewQItemSelectionRange2(other:QItemSelectionRange_ITF):QItemSelectionRange;
	function NewQItemSelectionRange4(topLeft:QModelIndex_ITF,bottomRight:QModelIndex_ITF):QItemSelectionRange;
	function NewQItemSelectionRange5(index:QModelIndex_ITF):QItemSelectionRange;
	const QItemSelectionModel__NoUpdate: number;
	const QItemSelectionModel__Clear: number;
	const QItemSelectionModel__Select: number;
	const QItemSelectionModel__Deselect: number;
	const QItemSelectionModel__Toggle: number;
	const QItemSelectionModel__Current: number;
	const QItemSelectionModel__Rows: number;
	const QItemSelectionModel__Columns: number;
	const QItemSelectionModel__SelectCurrent: number;
	const QItemSelectionModel__ToggleCurrent: number;
	const QItemSelectionModel__ClearAndSelect: number;
	interface QItemSelectionRange_ITF {
		QItemSelectionRange_PTR():QItemSelectionRange;
	}

	class QItemSelectionRange {
		___pointer: number;
		QItemSelectionRange_PTR():QItemSelectionRange;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQItemSelectionRange():void;
		Bottom():number;
		Contains(index:QModelIndex_ITF):boolean;
		Contains2(row:number,column:number,parentIndex:QModelIndex_ITF):boolean;
		Height():number;
		IsEmpty():boolean;
		IsValid():boolean;
		Left():number;
		Model():QAbstractItemModel;
		Parent():QModelIndex;
		Right():number;
		Top():number;
		Width():number;
	}
	function NewQItemSelectionRangeFromPointer(ptr:number):QItemSelectionRange;
	function NewQItemSelectionRange():QItemSelectionRange;
	function NewQItemSelectionRange2(other:QItemSelectionRange_ITF):QItemSelectionRange;
	function NewQItemSelectionRange4(topLeft:QModelIndex_ITF,bottomRight:QModelIndex_ITF):QItemSelectionRange;
	function NewQItemSelectionRange5(index:QModelIndex_ITF):QItemSelectionRange;
	interface QJsonArray_ITF {
		QJsonArray_PTR():QJsonArray;
	}

	class QJsonArray {
		___pointer: number;
		QJsonArray_PTR():QJsonArray;
		Pointer():number;
		SetPointer(p:number):void;
		At(i:number):QJsonValue;
		Contains(value:QJsonValue_ITF):boolean;
		Count():number;
		Empty():boolean;
		First():QJsonValue;
		Insert(i:number,value:QJsonValue_ITF):void;
		IsEmpty():boolean;
		Last():QJsonValue;
		Replace(i:number,value:QJsonValue_ITF):void;
		Size():number;
		TakeAt(i:number):QJsonValue;
		DestroyQJsonArray():void;
	}
	function NewQJsonArrayFromPointer(ptr:number):QJsonArray;
	function NewQJsonArray():QJsonArray;
	function NewQJsonArray3(other:QJsonArray_ITF):QJsonArray;
	function NewQJsonArray4(other:QJsonArray_ITF):QJsonArray;
	interface QJsonDocument_ITF {
		QJsonDocument_PTR():QJsonDocument;
	}

	class QJsonDocument {
		___pointer: number;
		QJsonDocument_PTR():QJsonDocument;
		Pointer():number;
		SetPointer(p:number):void;
		Array():QJsonArray;
		IsEmpty():boolean;
		Object():QJsonObject;
		SetObject(object:QJsonObject_ITF):void;
		ToVariant():QVariant;
		DestroyQJsonDocument():void;
	}
	function NewQJsonDocumentFromPointer(ptr:number):QJsonDocument;
	function NewQJsonDocument():QJsonDocument;
	function NewQJsonDocument2(object:QJsonObject_ITF):QJsonDocument;
	function NewQJsonDocument3(array:QJsonArray_ITF):QJsonDocument;
	function NewQJsonDocument4(other:QJsonDocument_ITF):QJsonDocument;
	function NewQJsonDocument5(other:QJsonDocument_ITF):QJsonDocument;
	const QJsonDocument__Validate: number;
	const QJsonDocument__BypassValidation: number;
	const QJsonDocument__Indented: number;
	const QJsonDocument__Compact: number;
	interface QJsonObject_ITF {
		QJsonObject_PTR():QJsonObject;
	}

	class QJsonObject {
		___pointer: number;
		QJsonObject_PTR():QJsonObject;
		Pointer():number;
		SetPointer(p:number):void;
		Contains(key:string):boolean;
		Contains2(key:QLatin1String_ITF):boolean;
		Count():number;
		Empty():boolean;
		IsEmpty():boolean;
		Length():number;
		Remove(key:string):void;
		Size():number;
		Take(key:string):QJsonValue;
		Value(key:string):QJsonValue;
		Value2(key:QLatin1String_ITF):QJsonValue;
		DestroyQJsonObject():void;
	}
	function NewQJsonObjectFromPointer(ptr:number):QJsonObject;
	function NewQJsonObject():QJsonObject;
	function NewQJsonObject3(other:QJsonObject_ITF):QJsonObject;
	function NewQJsonObject4(other:QJsonObject_ITF):QJsonObject;
	const QJsonParseError__NoError: number;
	const QJsonParseError__UnterminatedObject: number;
	const QJsonParseError__MissingNameSeparator: number;
	const QJsonParseError__UnterminatedArray: number;
	const QJsonParseError__MissingValueSeparator: number;
	const QJsonParseError__IllegalValue: number;
	const QJsonParseError__TerminationByNumber: number;
	const QJsonParseError__IllegalNumber: number;
	const QJsonParseError__IllegalEscapeSequence: number;
	const QJsonParseError__IllegalUTF8String: number;
	const QJsonParseError__UnterminatedString: number;
	const QJsonParseError__MissingObject: number;
	const QJsonParseError__DeepNesting: number;
	const QJsonParseError__DocumentTooLarge: number;
	const QJsonParseError__GarbageAtEnd: number;
	interface QJsonValue_ITF {
		QJsonValue_PTR():QJsonValue;
	}

	class QJsonValue {
		___pointer: number;
		QJsonValue_PTR():QJsonValue;
		Pointer():number;
		SetPointer(p:number):void;
		ToInt(defaultValue:number):number;
		ToString():string;
		ToString2(defaultValue:string):string;
		ToVariant():QVariant;
		Type():number;
		DestroyQJsonValue():void;
	}
	function NewQJsonValueFromPointer(ptr:number):QJsonValue;
	function NewQJsonValue(ty:number):QJsonValue;
	function NewQJsonValue2(b:boolean):QJsonValue;
	function NewQJsonValue3(n:number):QJsonValue;
	function NewQJsonValue4(n:number):QJsonValue;
	function NewQJsonValue5(n:number):QJsonValue;
	function NewQJsonValue6(s:string):QJsonValue;
	function NewQJsonValue7(s:QLatin1String_ITF):QJsonValue;
	function NewQJsonValue8(s:string):QJsonValue;
	function NewQJsonValue9(a:QJsonArray_ITF):QJsonValue;
	function NewQJsonValue10(o:QJsonObject_ITF):QJsonValue;
	function NewQJsonValue11(other:QJsonValue_ITF):QJsonValue;
	function NewQJsonValue12(other:QJsonValue_ITF):QJsonValue;
	const QJsonValue__Null: number;
	const QJsonValue__Bool: number;
	const QJsonValue__Double: number;
	const QJsonValue__String: number;
	const QJsonValue__Array: number;
	const QJsonValue__Object: number;
	const QJsonValue__Undefined: number;
	interface QLatin1Char_ITF {
		QLatin1Char_PTR():QLatin1Char;
	}

	class QLatin1Char {
		___pointer: number;
		QLatin1Char_PTR():QLatin1Char;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQLatin1Char():void;
	}
	function NewQLatin1CharFromPointer(ptr:number):QLatin1Char;
	function NewQLatin1Char(c:string):QLatin1Char;
	interface QLatin1String_ITF {
		QLatin1String_PTR():QLatin1String;
	}

	class QLatin1String {
		___pointer: number;
		QLatin1String_PTR():QLatin1String;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQLatin1String():void;
		Data():string;
		EndsWith(str:QStringView_ITF,cs:number):boolean;
		EndsWith2(l1:QLatin1String_ITF,cs:number):boolean;
		EndsWith3(ch:QChar_ITF):boolean;
		EndsWith4(ch:QChar_ITF,cs:number):boolean;
		IsEmpty():boolean;
		Left(length:number):QLatin1String;
		Mid(start:number):QLatin1String;
		Mid2(start:number,length:number):QLatin1String;
		Right(length:number):QLatin1String;
		Size():number;
	}
	function NewQLatin1StringFromPointer(ptr:number):QLatin1String;
	function NewQLatin1String():QLatin1String;
	function NewQLatin1String2(str:string):QLatin1String;
	function NewQLatin1String3(first:string,last:string):QLatin1String;
	function NewQLatin1String4(str:string,size:number):QLatin1String;
	function NewQLatin1String5(str:QByteArray_ITF):QLatin1String;
	const QLibrary__ResolveAllSymbolsHint: number;
	const QLibrary__ExportExternalSymbolsHint: number;
	const QLibrary__LoadArchiveMemberHint: number;
	const QLibrary__PreventUnloadHint: number;
	const QLibrary__DeepBindHint: number;
	const QLibraryInfo__PrefixPath: number;
	const QLibraryInfo__DocumentationPath: number;
	const QLibraryInfo__HeadersPath: number;
	const QLibraryInfo__LibrariesPath: number;
	const QLibraryInfo__LibraryExecutablesPath: number;
	const QLibraryInfo__BinariesPath: number;
	const QLibraryInfo__PluginsPath: number;
	const QLibraryInfo__ImportsPath: number;
	const QLibraryInfo__Qml2ImportsPath: number;
	const QLibraryInfo__ArchDataPath: number;
	const QLibraryInfo__DataPath: number;
	const QLibraryInfo__TranslationsPath: number;
	const QLibraryInfo__ExamplesPath: number;
	const QLibraryInfo__TestsPath: number;
	const QLibraryInfo__SettingsPath: number;
	interface QLine_ITF {
		QLine_PTR():QLine;
	}

	class QLine {
		___pointer: number;
		QLine_PTR():QLine;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQLine():void;
		Center():QPoint;
		Dy():number;
	}
	function NewQLineFromPointer(ptr:number):QLine;
	function NewQLine():QLine;
	function NewQLine2(p1:QPoint_ITF,p2:QPoint_ITF):QLine;
	function NewQLine3(x1:number,y1:number,x2:number,y2:number):QLine;
	function NewQLineF():QLineF;
	function NewQLineF2(p1:QPointF_ITF,p2:QPointF_ITF):QLineF;
	function NewQLineF3(x1:number,y1:number,x2:number,y2:number):QLineF;
	function NewQLineF4(line:QLine_ITF):QLineF;
	interface QLineF_ITF {
		QLineF_PTR():QLineF;
	}

	class QLineF {
		___pointer: number;
		QLineF_PTR():QLineF;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQLineF():void;
		Center():QPointF;
		Dy():number;
		Length():number;
	}
	function NewQLineFFromPointer(ptr:number):QLineF;
	function NewQLineF():QLineF;
	function NewQLineF2(p1:QPointF_ITF,p2:QPointF_ITF):QLineF;
	function NewQLineF3(x1:number,y1:number,x2:number,y2:number):QLineF;
	function NewQLineF4(line:QLine_ITF):QLineF;
	const QLineF__NoIntersection: number;
	const QLineF__BoundedIntersection: number;
	const QLineF__UnboundedIntersection: number;
	interface QLocale_ITF {
		QLocale_PTR():QLocale;
	}

	class QLocale {
		___pointer: number;
		QLocale_PTR():QLocale;
		Pointer():number;
		SetPointer(p:number):void;
		C():QLocale;
		Name():string;
		SetDefault(locale:QLocale_ITF):void;
		System():QLocale;
		ToInt(s:string,ok:boolean):number;
		ToInt2(s:QStringRef_ITF,ok:boolean):number;
		ToInt3(s:QStringView_ITF,ok:boolean):number;
		ToLower(str:string):string;
		ToString(i:number):string;
		ToString2(i:number):string;
		ToString3(i:number):string;
		ToString4(i:number):string;
		ToString5(i:number):string;
		ToString6(i:number):string;
		ToString7(i:number):string;
		ToString8(i:number):string;
		ToString9(i:number,ff:string,prec:number):string;
		ToString10(i:number,ff:string,prec:number):string;
		ToString11(date:QDate_ITF,format:string):string;
		ToString12(ti:QTime_ITF,format:string):string;
		ToString13(dateTime:QDateTime_ITF,format:string):string;
		ToString14(date:QDate_ITF,format:QStringView_ITF):string;
		ToString15(ti:QTime_ITF,format:QStringView_ITF):string;
		ToString16(dateTime:QDateTime_ITF,format:QStringView_ITF):string;
		ToString17(date:QDate_ITF,format:number):string;
		ToString18(ti:QTime_ITF,format:number):string;
		ToString19(dateTime:QDateTime_ITF,format:number):string;
		ToULong(s:string,ok:boolean):number;
		ToULong2(s:QStringRef_ITF,ok:boolean):number;
		ToULong3(s:QStringView_ITF,ok:boolean):number;
		ToULongLong(s:string,ok:boolean):number;
		ToULongLong2(s:QStringRef_ITF,ok:boolean):number;
		ToULongLong3(s:QStringView_ITF,ok:boolean):number;
		DestroyQLocale():void;
	}
	function NewQLocaleFromPointer(ptr:number):QLocale;
	function NewQLocale():QLocale;
	function NewQLocale2(name:string):QLocale;
	function NewQLocale3(language:number,country:number):QLocale;
	function NewQLocale4(language:number,scri:number,country:number):QLocale;
	function NewQLocale5(other:QLocale_ITF):QLocale;
	function QLocale_C():QLocale;
	function QLocale_SetDefault(locale:QLocale_ITF):void;
	function QLocale_System():QLocale;
	const QLocale__AnyLanguage: number;
	const QLocale__C: number;
	const QLocale__Abkhazian: number;
	const QLocale__Oromo: number;
	const QLocale__Afar: number;
	const QLocale__Afrikaans: number;
	const QLocale__Albanian: number;
	const QLocale__Amharic: number;
	const QLocale__Arabic: number;
	const QLocale__Armenian: number;
	const QLocale__Assamese: number;
	const QLocale__Aymara: number;
	const QLocale__Azerbaijani: number;
	const QLocale__Bashkir: number;
	const QLocale__Basque: number;
	const QLocale__Bengali: number;
	const QLocale__Dzongkha: number;
	const QLocale__Bihari: number;
	const QLocale__Bislama: number;
	const QLocale__Breton: number;
	const QLocale__Bulgarian: number;
	const QLocale__Burmese: number;
	const QLocale__Belarusian: number;
	const QLocale__Khmer: number;
	const QLocale__Catalan: number;
	const QLocale__Chinese: number;
	const QLocale__Corsican: number;
	const QLocale__Croatian: number;
	const QLocale__Czech: number;
	const QLocale__Danish: number;
	const QLocale__Dutch: number;
	const QLocale__English: number;
	const QLocale__Esperanto: number;
	const QLocale__Estonian: number;
	const QLocale__Faroese: number;
	const QLocale__Fijian: number;
	const QLocale__Finnish: number;
	const QLocale__French: number;
	const QLocale__WesternFrisian: number;
	const QLocale__Gaelic: number;
	const QLocale__Galician: number;
	const QLocale__Georgian: number;
	const QLocale__German: number;
	const QLocale__Greek: number;
	const QLocale__Greenlandic: number;
	const QLocale__Guarani: number;
	const QLocale__Gujarati: number;
	const QLocale__Hausa: number;
	const QLocale__Hebrew: number;
	const QLocale__Hindi: number;
	const QLocale__Hungarian: number;
	const QLocale__Icelandic: number;
	const QLocale__Indonesian: number;
	const QLocale__Interlingua: number;
	const QLocale__Interlingue: number;
	const QLocale__Inuktitut: number;
	const QLocale__Inupiak: number;
	const QLocale__Irish: number;
	const QLocale__Italian: number;
	const QLocale__Japanese: number;
	const QLocale__Javanese: number;
	const QLocale__Kannada: number;
	const QLocale__Kashmiri: number;
	const QLocale__Kazakh: number;
	const QLocale__Kinyarwanda: number;
	const QLocale__Kirghiz: number;
	const QLocale__Korean: number;
	const QLocale__Kurdish: number;
	const QLocale__Rundi: number;
	const QLocale__Lao: number;
	const QLocale__Latin: number;
	const QLocale__Latvian: number;
	const QLocale__Lingala: number;
	const QLocale__Lithuanian: number;
	const QLocale__Macedonian: number;
	const QLocale__Malagasy: number;
	const QLocale__Malay: number;
	const QLocale__Malayalam: number;
	const QLocale__Maltese: number;
	const QLocale__Maori: number;
	const QLocale__Marathi: number;
	const QLocale__Marshallese: number;
	const QLocale__Mongolian: number;
	const QLocale__NauruLanguage: number;
	const QLocale__Nepali: number;
	const QLocale__NorwegianBokmal: number;
	const QLocale__Occitan: number;
	const QLocale__Oriya: number;
	const QLocale__Pashto: number;
	const QLocale__Persian: number;
	const QLocale__Polish: number;
	const QLocale__Portuguese: number;
	const QLocale__Punjabi: number;
	const QLocale__Quechua: number;
	const QLocale__Romansh: number;
	const QLocale__Romanian: number;
	const QLocale__Russian: number;
	const QLocale__Samoan: number;
	const QLocale__Sango: number;
	const QLocale__Sanskrit: number;
	const QLocale__Serbian: number;
	const QLocale__Ossetic: number;
	const QLocale__SouthernSotho: number;
	const QLocale__Tswana: number;
	const QLocale__Shona: number;
	const QLocale__Sindhi: number;
	const QLocale__Sinhala: number;
	const QLocale__Swati: number;
	const QLocale__Slovak: number;
	const QLocale__Slovenian: number;
	const QLocale__Somali: number;
	const QLocale__Spanish: number;
	const QLocale__Sundanese: number;
	const QLocale__Swahili: number;
	const QLocale__Swedish: number;
	const QLocale__Sardinian: number;
	const QLocale__Tajik: number;
	const QLocale__Tamil: number;
	const QLocale__Tatar: number;
	const QLocale__Telugu: number;
	const QLocale__Thai: number;
	const QLocale__Tibetan: number;
	const QLocale__Tigrinya: number;
	const QLocale__Tongan: number;
	const QLocale__Tsonga: number;
	const QLocale__Turkish: number;
	const QLocale__Turkmen: number;
	const QLocale__Tahitian: number;
	const QLocale__Uighur: number;
	const QLocale__Ukrainian: number;
	const QLocale__Urdu: number;
	const QLocale__Uzbek: number;
	const QLocale__Vietnamese: number;
	const QLocale__Volapuk: number;
	const QLocale__Welsh: number;
	const QLocale__Wolof: number;
	const QLocale__Xhosa: number;
	const QLocale__Yiddish: number;
	const QLocale__Yoruba: number;
	const QLocale__Zhuang: number;
	const QLocale__Zulu: number;
	const QLocale__NorwegianNynorsk: number;
	const QLocale__Bosnian: number;
	const QLocale__Divehi: number;
	const QLocale__Manx: number;
	const QLocale__Cornish: number;
	const QLocale__Akan: number;
	const QLocale__Konkani: number;
	const QLocale__Ga: number;
	const QLocale__Igbo: number;
	const QLocale__Kamba: number;
	const QLocale__Syriac: number;
	const QLocale__Blin: number;
	const QLocale__Geez: number;
	const QLocale__Koro: number;
	const QLocale__Sidamo: number;
	const QLocale__Atsam: number;
	const QLocale__Tigre: number;
	const QLocale__Jju: number;
	const QLocale__Friulian: number;
	const QLocale__Venda: number;
	const QLocale__Ewe: number;
	const QLocale__Walamo: number;
	const QLocale__Hawaiian: number;
	const QLocale__Tyap: number;
	const QLocale__Nyanja: number;
	const QLocale__Filipino: number;
	const QLocale__SwissGerman: number;
	const QLocale__SichuanYi: number;
	const QLocale__Kpelle: number;
	const QLocale__LowGerman: number;
	const QLocale__SouthNdebele: number;
	const QLocale__NorthernSotho: number;
	const QLocale__NorthernSami: number;
	const QLocale__Taroko: number;
	const QLocale__Gusii: number;
	const QLocale__Taita: number;
	const QLocale__Fulah: number;
	const QLocale__Kikuyu: number;
	const QLocale__Samburu: number;
	const QLocale__Sena: number;
	const QLocale__NorthNdebele: number;
	const QLocale__Rombo: number;
	const QLocale__Tachelhit: number;
	const QLocale__Kabyle: number;
	const QLocale__Nyankole: number;
	const QLocale__Bena: number;
	const QLocale__Vunjo: number;
	const QLocale__Bambara: number;
	const QLocale__Embu: number;
	const QLocale__Cherokee: number;
	const QLocale__Morisyen: number;
	const QLocale__Makonde: number;
	const QLocale__Langi: number;
	const QLocale__Ganda: number;
	const QLocale__Bemba: number;
	const QLocale__Kabuverdianu: number;
	const QLocale__Meru: number;
	const QLocale__Kalenjin: number;
	const QLocale__Nama: number;
	const QLocale__Machame: number;
	const QLocale__Colognian: number;
	const QLocale__Masai: number;
	const QLocale__Soga: number;
	const QLocale__Luyia: number;
	const QLocale__Asu: number;
	const QLocale__Teso: number;
	const QLocale__Saho: number;
	const QLocale__KoyraChiini: number;
	const QLocale__Rwa: number;
	const QLocale__Luo: number;
	const QLocale__Chiga: number;
	const QLocale__CentralMoroccoTamazight: number;
	const QLocale__KoyraboroSenni: number;
	const QLocale__Shambala: number;
	const QLocale__Bodo: number;
	const QLocale__Avaric: number;
	const QLocale__Chamorro: number;
	const QLocale__Chechen: number;
	const QLocale__Church: number;
	const QLocale__Chuvash: number;
	const QLocale__Cree: number;
	const QLocale__Haitian: number;
	const QLocale__Herero: number;
	const QLocale__HiriMotu: number;
	const QLocale__Kanuri: number;
	const QLocale__Komi: number;
	const QLocale__Kongo: number;
	const QLocale__Kwanyama: number;
	const QLocale__Limburgish: number;
	const QLocale__LubaKatanga: number;
	const QLocale__Luxembourgish: number;
	const QLocale__Navaho: number;
	const QLocale__Ndonga: number;
	const QLocale__Ojibwa: number;
	const QLocale__Pali: number;
	const QLocale__Walloon: number;
	const QLocale__Aghem: number;
	const QLocale__Basaa: number;
	const QLocale__Zarma: number;
	const QLocale__Duala: number;
	const QLocale__JolaFonyi: number;
	const QLocale__Ewondo: number;
	const QLocale__Bafia: number;
	const QLocale__MakhuwaMeetto: number;
	const QLocale__Mundang: number;
	const QLocale__Kwasio: number;
	const QLocale__Nuer: number;
	const QLocale__Sakha: number;
	const QLocale__Sangu: number;
	const QLocale__CongoSwahili: number;
	const QLocale__Tasawaq: number;
	const QLocale__Vai: number;
	const QLocale__Walser: number;
	const QLocale__Yangben: number;
	const QLocale__Avestan: number;
	const QLocale__Asturian: number;
	const QLocale__Ngomba: number;
	const QLocale__Kako: number;
	const QLocale__Meta: number;
	const QLocale__Ngiemboon: number;
	const QLocale__Aragonese: number;
	const QLocale__Akkadian: number;
	const QLocale__AncientEgyptian: number;
	const QLocale__AncientGreek: number;
	const QLocale__Aramaic: number;
	const QLocale__Balinese: number;
	const QLocale__Bamun: number;
	const QLocale__BatakToba: number;
	const QLocale__Buginese: number;
	const QLocale__Buhid: number;
	const QLocale__Carian: number;
	const QLocale__Chakma: number;
	const QLocale__ClassicalMandaic: number;
	const QLocale__Coptic: number;
	const QLocale__Dogri: number;
	const QLocale__EasternCham: number;
	const QLocale__EasternKayah: number;
	const QLocale__Etruscan: number;
	const QLocale__Gothic: number;
	const QLocale__Hanunoo: number;
	const QLocale__Ingush: number;
	const QLocale__LargeFloweryMiao: number;
	const QLocale__Lepcha: number;
	const QLocale__Limbu: number;
	const QLocale__Lisu: number;
	const QLocale__Lu: number;
	const QLocale__Lycian: number;
	const QLocale__Lydian: number;
	const QLocale__Mandingo: number;
	const QLocale__Manipuri: number;
	const QLocale__Meroitic: number;
	const QLocale__NorthernThai: number;
	const QLocale__OldIrish: number;
	const QLocale__OldNorse: number;
	const QLocale__OldPersian: number;
	const QLocale__OldTurkish: number;
	const QLocale__Pahlavi: number;
	const QLocale__Parthian: number;
	const QLocale__Phoenician: number;
	const QLocale__PrakritLanguage: number;
	const QLocale__Rejang: number;
	const QLocale__Sabaean: number;
	const QLocale__Samaritan: number;
	const QLocale__Santali: number;
	const QLocale__Saurashtra: number;
	const QLocale__Sora: number;
	const QLocale__Sylheti: number;
	const QLocale__Tagbanwa: number;
	const QLocale__TaiDam: number;
	const QLocale__TaiNua: number;
	const QLocale__Ugaritic: number;
	const QLocale__Akoose: number;
	const QLocale__Lakota: number;
	const QLocale__StandardMoroccanTamazight: number;
	const QLocale__Mapuche: number;
	const QLocale__CentralKurdish: number;
	const QLocale__LowerSorbian: number;
	const QLocale__UpperSorbian: number;
	const QLocale__Kenyang: number;
	const QLocale__Mohawk: number;
	const QLocale__Nko: number;
	const QLocale__Prussian: number;
	const QLocale__Kiche: number;
	const QLocale__SouthernSami: number;
	const QLocale__LuleSami: number;
	const QLocale__InariSami: number;
	const QLocale__SkoltSami: number;
	const QLocale__Warlpiri: number;
	const QLocale__ManichaeanMiddlePersian: number;
	const QLocale__Mende: number;
	const QLocale__AncientNorthArabian: number;
	const QLocale__LinearA: number;
	const QLocale__HmongNjua: number;
	const QLocale__Ho: number;
	const QLocale__Lezghian: number;
	const QLocale__Bassa: number;
	const QLocale__Mono: number;
	const QLocale__TedimChin: number;
	const QLocale__Maithili: number;
	const QLocale__Ahom: number;
	const QLocale__AmericanSignLanguage: number;
	const QLocale__ArdhamagadhiPrakrit: number;
	const QLocale__Bhojpuri: number;
	const QLocale__HieroglyphicLuwian: number;
	const QLocale__LiteraryChinese: number;
	const QLocale__Mazanderani: number;
	const QLocale__Mru: number;
	const QLocale__Newari: number;
	const QLocale__NorthernLuri: number;
	const QLocale__Palauan: number;
	const QLocale__Papiamento: number;
	const QLocale__Saraiki: number;
	const QLocale__TokelauLanguage: number;
	const QLocale__TokPisin: number;
	const QLocale__TuvaluLanguage: number;
	const QLocale__UncodedLanguages: number;
	const QLocale__Cantonese: number;
	const QLocale__Osage: number;
	const QLocale__Tangut: number;
	const QLocale__Ido: number;
	const QLocale__Lojban: number;
	const QLocale__Sicilian: number;
	const QLocale__SouthernKurdish: number;
	const QLocale__WesternBalochi: number;
	const QLocale__Afan: number;
	const QLocale__Bhutani: number;
	const QLocale__Byelorussian: number;
	const QLocale__Cambodian: number;
	const QLocale__Chewa: number;
	const QLocale__Frisian: number;
	const QLocale__Kurundi: number;
	const QLocale__Moldavian: number;
	const QLocale__Norwegian: number;
	const QLocale__RhaetoRomance: number;
	const QLocale__SerboCroatian: number;
	const QLocale__Tagalog: number;
	const QLocale__Twi: number;
	const QLocale__Uigur: number;
	const QLocale__LastLanguage: number;
	const QLocale__AnyScript: number;
	const QLocale__ArabicScript: number;
	const QLocale__CyrillicScript: number;
	const QLocale__DeseretScript: number;
	const QLocale__GurmukhiScript: number;
	const QLocale__SimplifiedHanScript: number;
	const QLocale__TraditionalHanScript: number;
	const QLocale__LatinScript: number;
	const QLocale__MongolianScript: number;
	const QLocale__TifinaghScript: number;
	const QLocale__ArmenianScript: number;
	const QLocale__BengaliScript: number;
	const QLocale__CherokeeScript: number;
	const QLocale__DevanagariScript: number;
	const QLocale__EthiopicScript: number;
	const QLocale__GeorgianScript: number;
	const QLocale__GreekScript: number;
	const QLocale__GujaratiScript: number;
	const QLocale__HebrewScript: number;
	const QLocale__JapaneseScript: number;
	const QLocale__KhmerScript: number;
	const QLocale__KannadaScript: number;
	const QLocale__KoreanScript: number;
	const QLocale__LaoScript: number;
	const QLocale__MalayalamScript: number;
	const QLocale__MyanmarScript: number;
	const QLocale__OriyaScript: number;
	const QLocale__TamilScript: number;
	const QLocale__TeluguScript: number;
	const QLocale__ThaanaScript: number;
	const QLocale__ThaiScript: number;
	const QLocale__TibetanScript: number;
	const QLocale__SinhalaScript: number;
	const QLocale__SyriacScript: number;
	const QLocale__YiScript: number;
	const QLocale__VaiScript: number;
	const QLocale__AvestanScript: number;
	const QLocale__BalineseScript: number;
	const QLocale__BamumScript: number;
	const QLocale__BatakScript: number;
	const QLocale__BopomofoScript: number;
	const QLocale__BrahmiScript: number;
	const QLocale__BugineseScript: number;
	const QLocale__BuhidScript: number;
	const QLocale__CanadianAboriginalScript: number;
	const QLocale__CarianScript: number;
	const QLocale__ChakmaScript: number;
	const QLocale__ChamScript: number;
	const QLocale__CopticScript: number;
	const QLocale__CypriotScript: number;
	const QLocale__EgyptianHieroglyphsScript: number;
	const QLocale__FraserScript: number;
	const QLocale__GlagoliticScript: number;
	const QLocale__GothicScript: number;
	const QLocale__HanScript: number;
	const QLocale__HangulScript: number;
	const QLocale__HanunooScript: number;
	const QLocale__ImperialAramaicScript: number;
	const QLocale__InscriptionalPahlaviScript: number;
	const QLocale__InscriptionalParthianScript: number;
	const QLocale__JavaneseScript: number;
	const QLocale__KaithiScript: number;
	const QLocale__KatakanaScript: number;
	const QLocale__KayahLiScript: number;
	const QLocale__KharoshthiScript: number;
	const QLocale__LannaScript: number;
	const QLocale__LepchaScript: number;
	const QLocale__LimbuScript: number;
	const QLocale__LinearBScript: number;
	const QLocale__LycianScript: number;
	const QLocale__LydianScript: number;
	const QLocale__MandaeanScript: number;
	const QLocale__MeiteiMayekScript: number;
	const QLocale__MeroiticScript: number;
	const QLocale__MeroiticCursiveScript: number;
	const QLocale__NkoScript: number;
	const QLocale__NewTaiLueScript: number;
	const QLocale__OghamScript: number;
	const QLocale__OlChikiScript: number;
	const QLocale__OldItalicScript: number;
	const QLocale__OldPersianScript: number;
	const QLocale__OldSouthArabianScript: number;
	const QLocale__OrkhonScript: number;
	const QLocale__OsmanyaScript: number;
	const QLocale__PhagsPaScript: number;
	const QLocale__PhoenicianScript: number;
	const QLocale__PollardPhoneticScript: number;
	const QLocale__RejangScript: number;
	const QLocale__RunicScript: number;
	const QLocale__SamaritanScript: number;
	const QLocale__SaurashtraScript: number;
	const QLocale__SharadaScript: number;
	const QLocale__ShavianScript: number;
	const QLocale__SoraSompengScript: number;
	const QLocale__CuneiformScript: number;
	const QLocale__SundaneseScript: number;
	const QLocale__SylotiNagriScript: number;
	const QLocale__TagalogScript: number;
	const QLocale__TagbanwaScript: number;
	const QLocale__TaiLeScript: number;
	const QLocale__TaiVietScript: number;
	const QLocale__TakriScript: number;
	const QLocale__UgariticScript: number;
	const QLocale__BrailleScript: number;
	const QLocale__HiraganaScript: number;
	const QLocale__CaucasianAlbanianScript: number;
	const QLocale__BassaVahScript: number;
	const QLocale__DuployanScript: number;
	const QLocale__ElbasanScript: number;
	const QLocale__GranthaScript: number;
	const QLocale__PahawhHmongScript: number;
	const QLocale__KhojkiScript: number;
	const QLocale__LinearAScript: number;
	const QLocale__MahajaniScript: number;
	const QLocale__ManichaeanScript: number;
	const QLocale__MendeKikakuiScript: number;
	const QLocale__ModiScript: number;
	const QLocale__MroScript: number;
	const QLocale__OldNorthArabianScript: number;
	const QLocale__NabataeanScript: number;
	const QLocale__PalmyreneScript: number;
	const QLocale__PauCinHauScript: number;
	const QLocale__OldPermicScript: number;
	const QLocale__PsalterPahlaviScript: number;
	const QLocale__SiddhamScript: number;
	const QLocale__KhudawadiScript: number;
	const QLocale__TirhutaScript: number;
	const QLocale__VarangKshitiScript: number;
	const QLocale__AhomScript: number;
	const QLocale__AnatolianHieroglyphsScript: number;
	const QLocale__HatranScript: number;
	const QLocale__MultaniScript: number;
	const QLocale__OldHungarianScript: number;
	const QLocale__SignWritingScript: number;
	const QLocale__AdlamScript: number;
	const QLocale__BhaiksukiScript: number;
	const QLocale__MarchenScript: number;
	const QLocale__NewaScript: number;
	const QLocale__OsageScript: number;
	const QLocale__TangutScript: number;
	const QLocale__HanWithBopomofoScript: number;
	const QLocale__JamoScript: number;
	const QLocale__SimplifiedChineseScript: number;
	const QLocale__TraditionalChineseScript: number;
	const QLocale__LastScript: number;
	const QLocale__AnyCountry: number;
	const QLocale__Afghanistan: number;
	const QLocale__Albania: number;
	const QLocale__Algeria: number;
	const QLocale__AmericanSamoa: number;
	const QLocale__Andorra: number;
	const QLocale__Angola: number;
	const QLocale__Anguilla: number;
	const QLocale__Antarctica: number;
	const QLocale__AntiguaAndBarbuda: number;
	const QLocale__Argentina: number;
	const QLocale__Armenia: number;
	const QLocale__Aruba: number;
	const QLocale__Australia: number;
	const QLocale__Austria: number;
	const QLocale__Azerbaijan: number;
	const QLocale__Bahamas: number;
	const QLocale__Bahrain: number;
	const QLocale__Bangladesh: number;
	const QLocale__Barbados: number;
	const QLocale__Belarus: number;
	const QLocale__Belgium: number;
	const QLocale__Belize: number;
	const QLocale__Benin: number;
	const QLocale__Bermuda: number;
	const QLocale__Bhutan: number;
	const QLocale__Bolivia: number;
	const QLocale__BosniaAndHerzegowina: number;
	const QLocale__Botswana: number;
	const QLocale__BouvetIsland: number;
	const QLocale__Brazil: number;
	const QLocale__BritishIndianOceanTerritory: number;
	const QLocale__Brunei: number;
	const QLocale__Bulgaria: number;
	const QLocale__BurkinaFaso: number;
	const QLocale__Burundi: number;
	const QLocale__Cambodia: number;
	const QLocale__Cameroon: number;
	const QLocale__Canada: number;
	const QLocale__CapeVerde: number;
	const QLocale__CaymanIslands: number;
	const QLocale__CentralAfricanRepublic: number;
	const QLocale__Chad: number;
	const QLocale__Chile: number;
	const QLocale__China: number;
	const QLocale__ChristmasIsland: number;
	const QLocale__CocosIslands: number;
	const QLocale__Colombia: number;
	const QLocale__Comoros: number;
	const QLocale__CongoKinshasa: number;
	const QLocale__CongoBrazzaville: number;
	const QLocale__CookIslands: number;
	const QLocale__CostaRica: number;
	const QLocale__IvoryCoast: number;
	const QLocale__Croatia: number;
	const QLocale__Cuba: number;
	const QLocale__Cyprus: number;
	const QLocale__CzechRepublic: number;
	const QLocale__Denmark: number;
	const QLocale__Djibouti: number;
	const QLocale__Dominica: number;
	const QLocale__DominicanRepublic: number;
	const QLocale__EastTimor: number;
	const QLocale__Ecuador: number;
	const QLocale__Egypt: number;
	const QLocale__ElSalvador: number;
	const QLocale__EquatorialGuinea: number;
	const QLocale__Eritrea: number;
	const QLocale__Estonia: number;
	const QLocale__Ethiopia: number;
	const QLocale__FalklandIslands: number;
	const QLocale__FaroeIslands: number;
	const QLocale__Fiji: number;
	const QLocale__Finland: number;
	const QLocale__France: number;
	const QLocale__Guernsey: number;
	const QLocale__FrenchGuiana: number;
	const QLocale__FrenchPolynesia: number;
	const QLocale__FrenchSouthernTerritories: number;
	const QLocale__Gabon: number;
	const QLocale__Gambia: number;
	const QLocale__Georgia: number;
	const QLocale__Germany: number;
	const QLocale__Ghana: number;
	const QLocale__Gibraltar: number;
	const QLocale__Greece: number;
	const QLocale__Greenland: number;
	const QLocale__Grenada: number;
	const QLocale__Guadeloupe: number;
	const QLocale__Guam: number;
	const QLocale__Guatemala: number;
	const QLocale__Guinea: number;
	const QLocale__GuineaBissau: number;
	const QLocale__Guyana: number;
	const QLocale__Haiti: number;
	const QLocale__HeardAndMcDonaldIslands: number;
	const QLocale__Honduras: number;
	const QLocale__HongKong: number;
	const QLocale__Hungary: number;
	const QLocale__Iceland: number;
	const QLocale__India: number;
	const QLocale__Indonesia: number;
	const QLocale__Iran: number;
	const QLocale__Iraq: number;
	const QLocale__Ireland: number;
	const QLocale__Israel: number;
	const QLocale__Italy: number;
	const QLocale__Jamaica: number;
	const QLocale__Japan: number;
	const QLocale__Jordan: number;
	const QLocale__Kazakhstan: number;
	const QLocale__Kenya: number;
	const QLocale__Kiribati: number;
	const QLocale__NorthKorea: number;
	const QLocale__SouthKorea: number;
	const QLocale__Kuwait: number;
	const QLocale__Kyrgyzstan: number;
	const QLocale__Laos: number;
	const QLocale__Latvia: number;
	const QLocale__Lebanon: number;
	const QLocale__Lesotho: number;
	const QLocale__Liberia: number;
	const QLocale__Libya: number;
	const QLocale__Liechtenstein: number;
	const QLocale__Lithuania: number;
	const QLocale__Luxembourg: number;
	const QLocale__Macau: number;
	const QLocale__Macedonia: number;
	const QLocale__Madagascar: number;
	const QLocale__Malawi: number;
	const QLocale__Malaysia: number;
	const QLocale__Maldives: number;
	const QLocale__Mali: number;
	const QLocale__Malta: number;
	const QLocale__MarshallIslands: number;
	const QLocale__Martinique: number;
	const QLocale__Mauritania: number;
	const QLocale__Mauritius: number;
	const QLocale__Mayotte: number;
	const QLocale__Mexico: number;
	const QLocale__Micronesia: number;
	const QLocale__Moldova: number;
	const QLocale__Monaco: number;
	const QLocale__Mongolia: number;
	const QLocale__Montserrat: number;
	const QLocale__Morocco: number;
	const QLocale__Mozambique: number;
	const QLocale__Myanmar: number;
	const QLocale__Namibia: number;
	const QLocale__NauruCountry: number;
	const QLocale__Nepal: number;
	const QLocale__Netherlands: number;
	const QLocale__CuraSao: number;
	const QLocale__NewCaledonia: number;
	const QLocale__NewZealand: number;
	const QLocale__Nicaragua: number;
	const QLocale__Niger: number;
	const QLocale__Nigeria: number;
	const QLocale__Niue: number;
	const QLocale__NorfolkIsland: number;
	const QLocale__NorthernMarianaIslands: number;
	const QLocale__Norway: number;
	const QLocale__Oman: number;
	const QLocale__Pakistan: number;
	const QLocale__Palau: number;
	const QLocale__PalestinianTerritories: number;
	const QLocale__Panama: number;
	const QLocale__PapuaNewGuinea: number;
	const QLocale__Paraguay: number;
	const QLocale__Peru: number;
	const QLocale__Philippines: number;
	const QLocale__Pitcairn: number;
	const QLocale__Poland: number;
	const QLocale__Portugal: number;
	const QLocale__PuertoRico: number;
	const QLocale__Qatar: number;
	const QLocale__Reunion: number;
	const QLocale__Romania: number;
	const QLocale__Russia: number;
	const QLocale__Rwanda: number;
	const QLocale__SaintKittsAndNevis: number;
	const QLocale__SaintLucia: number;
	const QLocale__SaintVincentAndTheGrenadines: number;
	const QLocale__Samoa: number;
	const QLocale__SanMarino: number;
	const QLocale__SaoTomeAndPrincipe: number;
	const QLocale__SaudiArabia: number;
	const QLocale__Senegal: number;
	const QLocale__Seychelles: number;
	const QLocale__SierraLeone: number;
	const QLocale__Singapore: number;
	const QLocale__Slovakia: number;
	const QLocale__Slovenia: number;
	const QLocale__SolomonIslands: number;
	const QLocale__Somalia: number;
	const QLocale__SouthAfrica: number;
	const QLocale__SouthGeorgiaAndTheSouthSandwichIslands: number;
	const QLocale__Spain: number;
	const QLocale__SriLanka: number;
	const QLocale__SaintHelena: number;
	const QLocale__SaintPierreAndMiquelon: number;
	const QLocale__Sudan: number;
	const QLocale__Suriname: number;
	const QLocale__SvalbardAndJanMayenIslands: number;
	const QLocale__Swaziland: number;
	const QLocale__Sweden: number;
	const QLocale__Switzerland: number;
	const QLocale__Syria: number;
	const QLocale__Taiwan: number;
	const QLocale__Tajikistan: number;
	const QLocale__Tanzania: number;
	const QLocale__Thailand: number;
	const QLocale__Togo: number;
	const QLocale__TokelauCountry: number;
	const QLocale__Tonga: number;
	const QLocale__TrinidadAndTobago: number;
	const QLocale__Tunisia: number;
	const QLocale__Turkey: number;
	const QLocale__Turkmenistan: number;
	const QLocale__TurksAndCaicosIslands: number;
	const QLocale__TuvaluCountry: number;
	const QLocale__Uganda: number;
	const QLocale__Ukraine: number;
	const QLocale__UnitedArabEmirates: number;
	const QLocale__UnitedKingdom: number;
	const QLocale__UnitedStates: number;
	const QLocale__UnitedStatesMinorOutlyingIslands: number;
	const QLocale__Uruguay: number;
	const QLocale__Uzbekistan: number;
	const QLocale__Vanuatu: number;
	const QLocale__VaticanCityState: number;
	const QLocale__Venezuela: number;
	const QLocale__Vietnam: number;
	const QLocale__BritishVirginIslands: number;
	const QLocale__UnitedStatesVirginIslands: number;
	const QLocale__WallisAndFutunaIslands: number;
	const QLocale__WesternSahara: number;
	const QLocale__Yemen: number;
	const QLocale__CanaryIslands: number;
	const QLocale__Zambia: number;
	const QLocale__Zimbabwe: number;
	const QLocale__ClippertonIsland: number;
	const QLocale__Montenegro: number;
	const QLocale__Serbia: number;
	const QLocale__SaintBarthelemy: number;
	const QLocale__SaintMartin: number;
	const QLocale__LatinAmerica: number;
	const QLocale__AscensionIsland: number;
	const QLocale__AlandIslands: number;
	const QLocale__DiegoGarcia: number;
	const QLocale__CeutaAndMelilla: number;
	const QLocale__IsleOfMan: number;
	const QLocale__Jersey: number;
	const QLocale__TristanDaCunha: number;
	const QLocale__SouthSudan: number;
	const QLocale__Bonaire: number;
	const QLocale__SintMaarten: number;
	const QLocale__Kosovo: number;
	const QLocale__EuropeanUnion: number;
	const QLocale__OutlyingOceania: number;
	const QLocale__World: number;
	const QLocale__Europe: number;
	const QLocale__DemocraticRepublicOfCongo: number;
	const QLocale__DemocraticRepublicOfKorea: number;
	const QLocale__LatinAmericaAndTheCaribbean: number;
	const QLocale__PeoplesRepublicOfCongo: number;
	const QLocale__RepublicOfKorea: number;
	const QLocale__RussianFederation: number;
	const QLocale__SyrianArabRepublic: number;
	const QLocale__Tokelau: number;
	const QLocale__Tuvalu: number;
	const QLocale__LastCountry: number;
	const QLocale__MetricSystem: number;
	const QLocale__ImperialUSSystem: number;
	const QLocale__ImperialUKSystem: number;
	const QLocale__ImperialSystem: number;
	const QLocale__LongFormat: number;
	const QLocale__ShortFormat: number;
	const QLocale__NarrowFormat: number;
	const QLocale__DefaultNumberOptions: number;
	const QLocale__OmitGroupSeparator: number;
	const QLocale__RejectGroupSeparator: number;
	const QLocale__OmitLeadingZeroInExponent: number;
	const QLocale__RejectLeadingZeroInExponent: number;
	const QLocale__IncludeTrailingZeroesAfterDot: number;
	const QLocale__RejectTrailingZeroesAfterDot: number;
	const QLocale__FloatingPointShortest: number;
	const QLocale__CurrencyIsoCode: number;
	const QLocale__CurrencySymbol: number;
	const QLocale__CurrencyDisplayName: number;
	const QLocale__DataSizeBase1000: number;
	const QLocale__DataSizeSIQuantifiers: number;
	const QLocale__DataSizeIecFormat: number;
	const QLocale__DataSizeTraditionalFormat: number;
	const QLocale__DataSizeSIFormat: number;
	const QLocale__StandardQuotation: number;
	const QLocale__AlternateQuotation: number;
	const QLockFile__NoError: number;
	const QLockFile__LockFailedError: number;
	const QLockFile__PermissionError: number;
	const QLockFile__UnknownError: number;
	interface QMargins_ITF {
		QMargins_PTR():QMargins;
	}

	class QMargins {
		___pointer: number;
		QMargins_PTR():QMargins;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQMargins():void;
		Bottom():number;
		Left():number;
		Right():number;
		Top():number;
	}
	function NewQMarginsFromPointer(ptr:number):QMargins;
	function NewQMargins():QMargins;
	function NewQMargins2(left:number,top:number,right:number,bottom:number):QMargins;
	interface QMetaMethod_ITF {
		QMetaMethod_PTR():QMetaMethod;
	}

	class QMetaMethod {
		___pointer: number;
		QMetaMethod_PTR():QMetaMethod;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQMetaMethod():void;
		Access():number;
		IsValid():boolean;
		Name():QByteArray;
	}
	function NewQMetaMethodFromPointer(ptr:number):QMetaMethod;
	const QMetaMethod__Private: number;
	const QMetaMethod__Protected: number;
	const QMetaMethod__Public: number;
	const QMetaMethod__Method: number;
	const QMetaMethod__Signal: number;
	const QMetaMethod__Slot: number;
	const QMetaMethod__Constructor: number;
	interface QMetaObject_ITF {
		QMetaObject_PTR():QMetaObject;
	}

	class QMetaObject {
		___pointer: number;
		QMetaObject_PTR():QMetaObject;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQMetaObject():void;
		Constructor(index:number):QMetaMethod;
		Method(index:number):QMetaMethod;
	}
	function NewQMetaObjectFromPointer(ptr:number):QMetaObject;
	interface QMetaProperty_ITF {
		QMetaProperty_PTR():QMetaProperty;
	}

	class QMetaProperty {
		___pointer: number;
		QMetaProperty_PTR():QMetaProperty;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQMetaProperty():void;
		IsValid():boolean;
		Name():string;
		Read(object:QObject_ITF):QVariant;
		Reset(object:QObject_ITF):boolean;
		Type():number;
		Write(object:QObject_ITF,value:QVariant_ITF):boolean;
	}
	function NewQMetaPropertyFromPointer(ptr:number):QMetaProperty;
	const QMetaType__UnknownType: number;
	const QMetaType__Bool: number;
	const QMetaType__Int: number;
	const QMetaType__UInt: number;
	const QMetaType__LongLong: number;
	const QMetaType__ULongLong: number;
	const QMetaType__Double: number;
	const QMetaType__Long: number;
	const QMetaType__Short: number;
	const QMetaType__Char: number;
	const QMetaType__ULong: number;
	const QMetaType__UShort: number;
	const QMetaType__UChar: number;
	const QMetaType__Float: number;
	const QMetaType__VoidStar: number;
	const QMetaType__QChar: number;
	const QMetaType__QString: number;
	const QMetaType__QStringList: number;
	const QMetaType__QByteArray: number;
	const QMetaType__QBitArray: number;
	const QMetaType__QDate: number;
	const QMetaType__QTime: number;
	const QMetaType__QDateTime: number;
	const QMetaType__QUrl: number;
	const QMetaType__QLocale: number;
	const QMetaType__QRect: number;
	const QMetaType__QRectF: number;
	const QMetaType__QSize: number;
	const QMetaType__QSizeF: number;
	const QMetaType__QLine: number;
	const QMetaType__QLineF: number;
	const QMetaType__QPoint: number;
	const QMetaType__QPointF: number;
	const QMetaType__QRegExp: number;
	const QMetaType__QEasingCurve: number;
	const QMetaType__QUuid: number;
	const QMetaType__QVariant: number;
	const QMetaType__QModelIndex: number;
	const QMetaType__QPersistentModelIndex: number;
	const QMetaType__QRegularExpression: number;
	const QMetaType__QJsonValue: number;
	const QMetaType__QJsonObject: number;
	const QMetaType__QJsonArray: number;
	const QMetaType__QJsonDocument: number;
	const QMetaType__QByteArrayList: number;
	const QMetaType__QObjectStar: number;
	const QMetaType__SChar: number;
	const QMetaType__Void: number;
	const QMetaType__Nullptr: number;
	const QMetaType__QVariantMap: number;
	const QMetaType__QVariantList: number;
	const QMetaType__QVariantHash: number;
	const QMetaType__QCborSimpleType: number;
	const QMetaType__QCborValue: number;
	const QMetaType__QCborArray: number;
	const QMetaType__QCborMap: number;
	const QMetaType__QFont: number;
	const QMetaType__QPixmap: number;
	const QMetaType__QBrush: number;
	const QMetaType__QColor: number;
	const QMetaType__QPalette: number;
	const QMetaType__QIcon: number;
	const QMetaType__QImage: number;
	const QMetaType__QPolygon: number;
	const QMetaType__QRegion: number;
	const QMetaType__QBitmap: number;
	const QMetaType__QCursor: number;
	const QMetaType__QKeySequence: number;
	const QMetaType__QPen: number;
	const QMetaType__QTextLength: number;
	const QMetaType__QTextFormat: number;
	const QMetaType__QMatrix: number;
	const QMetaType__QTransform: number;
	const QMetaType__QMatrix4x4: number;
	const QMetaType__QVector2D: number;
	const QMetaType__QVector3D: number;
	const QMetaType__QVector4D: number;
	const QMetaType__QQuaternion: number;
	const QMetaType__QPolygonF: number;
	const QMetaType__QSizePolicy: number;
	const QMetaType__LastCoreType: number;
	const QMetaType__LastGuiType: number;
	const QMetaType__User: number;
	const QMetaType__NeedsConstruction: number;
	const QMetaType__NeedsDestruction: number;
	const QMetaType__MovableType: number;
	const QMetaType__PointerToQObject: number;
	const QMetaType__IsEnumeration: number;
	const QMetaType__SharedPointerToQObject: number;
	const QMetaType__WeakPointerToQObject: number;
	const QMetaType__TrackingPointerToQObject: number;
	const QMetaType__WasDeclaredAsMetaType: number;
	const QMetaType__IsGadget: number;
	const QMetaType__PointerToGadget: number;
	interface QMimeData_ITF extends QObject_ITF {
		QMimeData_PTR():QMimeData;
	}

	class QMimeData extends QObject {
		___pointer: number;
		QMimeData_PTR():QMimeData;
		Pointer():number;
		SetPointer(p:number):void;
		Clear():void;
		Data(mimeType:string):QByteArray;
		ConnectFormats(f:()=>string[]):void;
		DisconnectFormats():void;
		Formats():string[];
		FormatsDefault():string[];
		HasHtml():boolean;
		HasImage():boolean;
		HasText():boolean;
		HasUrls():boolean;
		Html():string;
		ImageData():QVariant;
		SetData(mimeType:string,data:QByteArray_ITF):void;
		SetText(text:string):void;
		Text():string;
		Urls():QUrl[];
		ConnectDestroyQMimeData(f:()=>void):void;
		DisconnectDestroyQMimeData():void;
		DestroyQMimeData():void;
		DestroyQMimeDataDefault():void;
	}
	function NewQMimeDataFromPointer(ptr:number):QMimeData;
	function NewQMimeData():QMimeData;
	const QMimeDatabase__MatchDefault: number;
	const QMimeDatabase__MatchExtension: number;
	const QMimeDatabase__MatchContent: number;
	interface QModelIndex_ITF {
		QModelIndex_PTR():QModelIndex;
	}

	class QModelIndex {
		___pointer: number;
		QModelIndex_PTR():QModelIndex;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQModelIndex():void;
		Column():number;
		Data(role:number):QVariant;
		Flags():number;
		InternalPointer():number;
		IsValid():boolean;
		Model():QAbstractItemModel;
		Parent():QModelIndex;
		Row():number;
	}
	function NewQModelIndexFromPointer(ptr:number):QModelIndex;
	function NewQModelIndex():QModelIndex;
	const QMutex__NonRecursive: number;
	const QMutex__Recursive: number;
	interface QObject_ITF {
		QObject_PTR():QObject;
	}

	class QObject {
		___pointer: number;
		QObject_PTR():QObject;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectSignal(f:any,a:any,t:number):void;
		ConnectChildEvent(f:(event:QChildEvent)=>void):void;
		DisconnectChildEvent():void;
		ChildEvent(event:QChildEvent_ITF):void;
		ChildEventDefault(event:QChildEvent_ITF):void;
		Children():QObject[];
		ConnectConnectNotify(f:(sign:QMetaMethod)=>void):void;
		DisconnectConnectNotify():void;
		ConnectNotify(sign:QMetaMethod_ITF):void;
		ConnectNotifyDefault(sign:QMetaMethod_ITF):void;
		ConnectCustomEvent(f:(event:QEvent)=>void):void;
		DisconnectCustomEvent():void;
		CustomEvent(event:QEvent_ITF):void;
		CustomEventDefault(event:QEvent_ITF):void;
		ConnectDeleteLater(f:()=>void):void;
		DisconnectDeleteLater():void;
		DeleteLater():void;
		DeleteLaterDefault():void;
		ConnectDestroyed(f:(obj:QObject)=>void):void;
		DisconnectDestroyed():void;
		Destroyed(obj:QObject_ITF):void;
		Disconnect(sender:QObject_ITF,sign:string,receiver:QObject_ITF,method:string):boolean;
		Disconnect2(sender:QObject_ITF,sign:QMetaMethod_ITF,receiver:QObject_ITF,method:QMetaMethod_ITF):boolean;
		Disconnect3(sign:string,receiver:QObject_ITF,method:string):boolean;
		Disconnect4(receiver:QObject_ITF,method:string):boolean;
		ConnectDisconnectNotify(f:(sign:QMetaMethod)=>void):void;
		DisconnectDisconnectNotify():void;
		DisconnectNotify(sign:QMetaMethod_ITF):void;
		DisconnectNotifyDefault(sign:QMetaMethod_ITF):void;
		ConnectEvent(f:(e:QEvent)=>boolean):void;
		DisconnectEvent():void;
		Event(e:QEvent_ITF):boolean;
		EventDefault(e:QEvent_ITF):boolean;
		ConnectEventFilter(f:(watched:QObject,event:QEvent)=>boolean):void;
		DisconnectEventFilter():void;
		EventFilter(watched:QObject_ITF,event:QEvent_ITF):boolean;
		EventFilterDefault(watched:QObject_ITF,event:QEvent_ITF):boolean;
		ObjectName():string;
		ConnectObjectNameChanged(f:(objectName:string)=>void):void;
		DisconnectObjectNameChanged():void;
		Parent():QObject;
		Property(name:string):QVariant;
		SetObjectName(name:string):void;
		SetParent(parent:QObject_ITF):void;
		SetProperty(name:string,value:QVariant_ITF):boolean;
		Thread():QThread;
		ConnectTimerEvent(f:(event:QTimerEvent)=>void):void;
		DisconnectTimerEvent():void;
		TimerEvent(event:QTimerEvent_ITF):void;
		TimerEventDefault(event:QTimerEvent_ITF):void;
		Tr(sourceText:string,disambiguation:string,n:number):string;
		ConnectDestroyQObject(f:()=>void):void;
		DisconnectDestroyQObject():void;
		DestroyQObject():void;
		DestroyQObjectDefault():void;
		ToVariant():QVariant;
	}
	function NewQObjectFromPointer(ptr:number):QObject;
	function NewQObject(parent:QObject_ITF):QObject;
	function QObject_Disconnect(sender:QObject_ITF,sign:string,receiver:QObject_ITF,method:string):boolean;
	function QObject_Disconnect2(sender:QObject_ITF,sign:QMetaMethod_ITF,receiver:QObject_ITF,method:QMetaMethod_ITF):boolean;
	function QObject_Tr(sourceText:string,disambiguation:string,n:number):string;
	const QOperatingSystemVersion__Unknown: number;
	const QOperatingSystemVersion__Windows: number;
	const QOperatingSystemVersion__MacOS: number;
	const QOperatingSystemVersion__IOS: number;
	const QOperatingSystemVersion__TvOS: number;
	const QOperatingSystemVersion__WatchOS: number;
	const QOperatingSystemVersion__Android: number;
	interface QPersistentModelIndex_ITF {
		QPersistentModelIndex_PTR():QPersistentModelIndex;
	}

	class QPersistentModelIndex {
		___pointer: number;
		QPersistentModelIndex_PTR():QPersistentModelIndex;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQPersistentModelIndex():void;
		Column():number;
		Data(role:number):QVariant;
		Flags():number;
		IsValid():boolean;
		Model():QAbstractItemModel;
		Parent():QModelIndex;
		Row():number;
	}
	function NewQPersistentModelIndexFromPointer(ptr:number):QPersistentModelIndex;
	function NewQPersistentModelIndex2(index:QModelIndex_ITF):QPersistentModelIndex;
	function NewQPersistentModelIndex3(other:QPersistentModelIndex_ITF):QPersistentModelIndex;
	function NewQPersistentModelIndex4(other:QPersistentModelIndex_ITF):QPersistentModelIndex;
	interface QPoint_ITF {
		QPoint_PTR():QPoint;
	}

	class QPoint {
		___pointer: number;
		QPoint_PTR():QPoint;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQPoint():void;
		SetX(x:number):void;
		SetY(y:number):void;
		X():number;
		Y():number;
	}
	function NewQPointFromPointer(ptr:number):QPoint;
	function NewQPoint():QPoint;
	function NewQPoint2(xpos:number,ypos:number):QPoint;
	function NewQPointF():QPointF;
	function NewQPointF2(point:QPoint_ITF):QPointF;
	function NewQPointF3(xpos:number,ypos:number):QPointF;
	interface QPointF_ITF {
		QPointF_PTR():QPointF;
	}

	class QPointF {
		___pointer: number;
		QPointF_PTR():QPointF;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQPointF():void;
		SetX(x:number):void;
		SetY(y:number):void;
		X():number;
		Y():number;
	}
	function NewQPointFFromPointer(ptr:number):QPointF;
	function NewQPointF():QPointF;
	function NewQPointF2(point:QPoint_ITF):QPointF;
	function NewQPointF3(xpos:number,ypos:number):QPointF;
	const QProcess__FailedToStart: number;
	const QProcess__Crashed: number;
	const QProcess__Timedout: number;
	const QProcess__ReadError: number;
	const QProcess__WriteError: number;
	const QProcess__UnknownError: number;
	const QProcess__NotRunning: number;
	const QProcess__Starting: number;
	const QProcess__Running: number;
	const QProcess__StandardOutput: number;
	const QProcess__StandardError: number;
	const QProcess__SeparateChannels: number;
	const QProcess__MergedChannels: number;
	const QProcess__ForwardedChannels: number;
	const QProcess__ForwardedOutputChannel: number;
	const QProcess__ForwardedErrorChannel: number;
	const QProcess__ManagedInputChannel: number;
	const QProcess__ForwardedInputChannel: number;
	const QProcess__NormalExit: number;
	const QProcess__CrashExit: number;
	const QReadWriteLock__NonRecursive: number;
	const QReadWriteLock__Recursive: number;
	interface QRect_ITF {
		QRect_PTR():QRect;
	}

	class QRect {
		___pointer: number;
		QRect_PTR():QRect;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQRect():void;
		Adjust(dx1:number,dy1:number,dx2:number,dy2:number):void;
		Bottom():number;
		Center():QPoint;
		Contains(point:QPoint_ITF,proper:boolean):boolean;
		Contains2(rectangle:QRect_ITF,proper:boolean):boolean;
		Contains3(x:number,y:number):boolean;
		Contains4(x:number,y:number,proper:boolean):boolean;
		Height():number;
		IsEmpty():boolean;
		IsValid():boolean;
		Left():number;
		Right():number;
		SetSize(size:QSize_ITF):void;
		SetX(x:number):void;
		SetY(y:number):void;
		Size():QSize;
		Top():number;
		Width():number;
		X():number;
		Y():number;
	}
	function NewQRectFromPointer(ptr:number):QRect;
	function NewQRect():QRect;
	function NewQRect2(topLeft:QPoint_ITF,bottomRight:QPoint_ITF):QRect;
	function NewQRect3(topLeft:QPoint_ITF,size:QSize_ITF):QRect;
	function NewQRect4(x:number,y:number,width:number,height:number):QRect;
	function NewQRectF():QRectF;
	function NewQRectF2(topLeft:QPointF_ITF,size:QSizeF_ITF):QRectF;
	function NewQRectF3(topLeft:QPointF_ITF,bottomRight:QPointF_ITF):QRectF;
	function NewQRectF4(x:number,y:number,width:number,height:number):QRectF;
	function NewQRectF5(rectangle:QRect_ITF):QRectF;
	interface QRectF_ITF {
		QRectF_PTR():QRectF;
	}

	class QRectF {
		___pointer: number;
		QRectF_PTR():QRectF;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQRectF():void;
		Adjust(dx1:number,dy1:number,dx2:number,dy2:number):void;
		Bottom():number;
		Center():QPointF;
		Contains(point:QPointF_ITF):boolean;
		Contains2(rectangle:QRectF_ITF):boolean;
		Contains3(x:number,y:number):boolean;
		Height():number;
		IsEmpty():boolean;
		IsValid():boolean;
		Left():number;
		Right():number;
		SetSize(size:QSizeF_ITF):void;
		SetX(x:number):void;
		SetY(y:number):void;
		Size():QSizeF;
		Top():number;
		Width():number;
		X():number;
		Y():number;
	}
	function NewQRectFFromPointer(ptr:number):QRectF;
	function NewQRectF():QRectF;
	function NewQRectF2(topLeft:QPointF_ITF,size:QSizeF_ITF):QRectF;
	function NewQRectF3(topLeft:QPointF_ITF,bottomRight:QPointF_ITF):QRectF;
	function NewQRectF4(x:number,y:number,width:number,height:number):QRectF;
	function NewQRectF5(rectangle:QRect_ITF):QRectF;
	interface QRegExp_ITF {
		QRegExp_PTR():QRegExp;
	}

	class QRegExp {
		___pointer: number;
		QRegExp_PTR():QRegExp;
		Pointer():number;
		SetPointer(p:number):void;
		Cap(nth:number):string;
		ErrorString():string;
		IndexIn(str:string,offset:number,caretMode:number):number;
		IsEmpty():boolean;
		IsValid():boolean;
		MatchedLength():number;
		Pattern():string;
		Pos(nth:number):number;
		DestroyQRegExp():void;
	}
	function NewQRegExpFromPointer(ptr:number):QRegExp;
	function NewQRegExp():QRegExp;
	function NewQRegExp2(pattern:string,cs:number,syntax:number):QRegExp;
	function NewQRegExp3(rx:QRegExp_ITF):QRegExp;
	const QRegExp__RegExp: number;
	const QRegExp__Wildcard: number;
	const QRegExp__FixedString: number;
	const QRegExp__RegExp2: number;
	const QRegExp__WildcardUnix: number;
	const QRegExp__W3CXmlSchema11: number;
	const QRegExp__CaretAtZero: number;
	const QRegExp__CaretAtOffset: number;
	const QRegExp__CaretWontMatch: number;
	interface QRegularExpression_ITF {
		QRegularExpression_PTR():QRegularExpression;
	}

	class QRegularExpression {
		___pointer: number;
		QRegularExpression_PTR():QRegularExpression;
		Pointer():number;
		SetPointer(p:number):void;
		ErrorString():string;
		IsValid():boolean;
		Match(subject:string,offset:number,matchType:number,matchOptions:number):QRegularExpressionMatch;
		Match2(subjectRef:QStringRef_ITF,offset:number,matchType:number,matchOptions:number):QRegularExpressionMatch;
		Pattern():string;
		DestroyQRegularExpression():void;
	}
	function NewQRegularExpressionFromPointer(ptr:number):QRegularExpression;
	function NewQRegularExpression():QRegularExpression;
	function NewQRegularExpression2(pattern:string,options:number):QRegularExpression;
	function NewQRegularExpression3(re:QRegularExpression_ITF):QRegularExpression;
	function NewQRegularExpressionMatch():QRegularExpressionMatch;
	function NewQRegularExpressionMatch2(match:QRegularExpressionMatch_ITF):QRegularExpressionMatch;
	const QRegularExpression__NoPatternOption: number;
	const QRegularExpression__CaseInsensitiveOption: number;
	const QRegularExpression__DotMatchesEverythingOption: number;
	const QRegularExpression__MultilineOption: number;
	const QRegularExpression__ExtendedPatternSyntaxOption: number;
	const QRegularExpression__InvertedGreedinessOption: number;
	const QRegularExpression__DontCaptureOption: number;
	const QRegularExpression__UseUnicodePropertiesOption: number;
	const QRegularExpression__OptimizeOnFirstUsageOption: number;
	const QRegularExpression__DontAutomaticallyOptimizeOption: number;
	const QRegularExpression__NormalMatch: number;
	const QRegularExpression__PartialPreferCompleteMatch: number;
	const QRegularExpression__PartialPreferFirstMatch: number;
	const QRegularExpression__NoMatch: number;
	const QRegularExpression__NoMatchOption: number;
	const QRegularExpression__AnchoredMatchOption: number;
	const QRegularExpression__DontCheckSubjectStringMatchOption: number;
	interface QRegularExpressionMatch_ITF {
		QRegularExpressionMatch_PTR():QRegularExpressionMatch;
	}

	class QRegularExpressionMatch {
		___pointer: number;
		QRegularExpressionMatch_PTR():QRegularExpressionMatch;
		Pointer():number;
		SetPointer(p:number):void;
		IsValid():boolean;
		DestroyQRegularExpressionMatch():void;
	}
	function NewQRegularExpressionMatchFromPointer(ptr:number):QRegularExpressionMatch;
	function NewQRegularExpressionMatch():QRegularExpressionMatch;
	function NewQRegularExpressionMatch2(match:QRegularExpressionMatch_ITF):QRegularExpressionMatch;
	const QResource__NoCompression: number;
	const QResource__ZlibCompression: number;
	const QResource__ZstdCompression: number;
	const QSettings__NoError: number;
	const QSettings__AccessError: number;
	const QSettings__FormatError: number;
	const QSettings__NativeFormat: number;
	const QSettings__IniFormat: number;
	const QSettings__Registry32Format: number;
	const QSettings__Registry64Format: number;
	const QSettings__InvalidFormat: number;
	const QSettings__CustomFormat1: number;
	const QSettings__CustomFormat2: number;
	const QSettings__CustomFormat3: number;
	const QSettings__CustomFormat4: number;
	const QSettings__CustomFormat5: number;
	const QSettings__CustomFormat6: number;
	const QSettings__CustomFormat7: number;
	const QSettings__CustomFormat8: number;
	const QSettings__CustomFormat9: number;
	const QSettings__CustomFormat10: number;
	const QSettings__CustomFormat11: number;
	const QSettings__CustomFormat12: number;
	const QSettings__CustomFormat13: number;
	const QSettings__CustomFormat14: number;
	const QSettings__CustomFormat15: number;
	const QSettings__CustomFormat16: number;
	const QSettings__UserScope: number;
	const QSettings__SystemScope: number;
	const QSharedMemory__ReadOnly: number;
	const QSharedMemory__ReadWrite: number;
	const QSharedMemory__NoError: number;
	const QSharedMemory__PermissionDenied: number;
	const QSharedMemory__InvalidSize: number;
	const QSharedMemory__KeyError: number;
	const QSharedMemory__AlreadyExists: number;
	const QSharedMemory__NotFound: number;
	const QSharedMemory__LockError: number;
	const QSharedMemory__OutOfResources: number;
	const QSharedMemory__UnknownError: number;
	interface QSize_ITF {
		QSize_PTR():QSize;
	}

	class QSize {
		___pointer: number;
		QSize_PTR():QSize;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQSize():void;
		Height():number;
		IsEmpty():boolean;
		IsValid():boolean;
		Scale(width:number,height:number,mode:number):void;
		Scale2(size:QSize_ITF,mode:number):void;
		Scaled(width:number,height:number,mode:number):QSize;
		Scaled2(s:QSize_ITF,mode:number):QSize;
		Width():number;
	}
	function NewQSizeFromPointer(ptr:number):QSize;
	function NewQSize():QSize;
	function NewQSize2(width:number,height:number):QSize;
	function NewQSizeF():QSizeF;
	function NewQSizeF2(size:QSize_ITF):QSizeF;
	function NewQSizeF3(width:number,height:number):QSizeF;
	interface QSizeF_ITF {
		QSizeF_PTR():QSizeF;
	}

	class QSizeF {
		___pointer: number;
		QSizeF_PTR():QSizeF;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQSizeF():void;
		Height():number;
		IsEmpty():boolean;
		IsValid():boolean;
		Scale(width:number,height:number,mode:number):void;
		Scale2(size:QSizeF_ITF,mode:number):void;
		Scaled(width:number,height:number,mode:number):QSizeF;
		Scaled2(s:QSizeF_ITF,mode:number):QSizeF;
		Width():number;
	}
	function NewQSizeFFromPointer(ptr:number):QSizeF;
	function NewQSizeF():QSizeF;
	function NewQSizeF2(size:QSize_ITF):QSizeF;
	function NewQSizeF3(width:number,height:number):QSizeF;
	const QSocketNotifier__Read: number;
	const QSocketNotifier__Write: number;
	const QSocketNotifier__Exception: number;
	const QStandardPaths__DesktopLocation: number;
	const QStandardPaths__DocumentsLocation: number;
	const QStandardPaths__FontsLocation: number;
	const QStandardPaths__ApplicationsLocation: number;
	const QStandardPaths__MusicLocation: number;
	const QStandardPaths__MoviesLocation: number;
	const QStandardPaths__PicturesLocation: number;
	const QStandardPaths__TempLocation: number;
	const QStandardPaths__HomeLocation: number;
	const QStandardPaths__DataLocation: number;
	const QStandardPaths__CacheLocation: number;
	const QStandardPaths__GenericDataLocation: number;
	const QStandardPaths__RuntimeLocation: number;
	const QStandardPaths__ConfigLocation: number;
	const QStandardPaths__DownloadLocation: number;
	const QStandardPaths__GenericCacheLocation: number;
	const QStandardPaths__GenericConfigLocation: number;
	const QStandardPaths__AppDataLocation: number;
	const QStandardPaths__AppConfigLocation: number;
	const QStandardPaths__AppLocalDataLocation: number;
	const QStandardPaths__LocateFile: number;
	const QStandardPaths__LocateDirectory: number;
	const QState__ExclusiveStates: number;
	const QState__ParallelStates: number;
	const QState__DontRestoreProperties: number;
	const QState__RestoreProperties: number;
	const QStateMachine__NormalPriority: number;
	const QStateMachine__HighPriority: number;
	const QStateMachine__NoError: number;
	const QStateMachine__NoInitialStateError: number;
	const QStateMachine__NoDefaultStateInHistoryStateError: number;
	const QStateMachine__NoCommonAncestorForTransitionError: number;
	const QString__SectionDefault: number;
	const QString__SectionSkipEmpty: number;
	const QString__SectionIncludeLeadingSep: number;
	const QString__SectionIncludeTrailingSep: number;
	const QString__SectionCaseInsensitiveSeps: number;
	const QString__KeepEmptyParts: number;
	const QString__SkipEmptyParts: number;
	const QString__NormalizationForm_D: number;
	const QString__NormalizationForm_C: number;
	const QString__NormalizationForm_KD: number;
	const QString__NormalizationForm_KC: number;
	interface QStringRef_ITF {
		QStringRef_PTR():QStringRef;
	}

	class QStringRef {
		___pointer: number;
		QStringRef_PTR():QStringRef;
		Pointer():number;
		SetPointer(p:number):void;
		At(position:number):QChar;
		Back():QChar;
		Clear():void;
		ConstData():QChar;
		Contains(str:string,cs:number):boolean;
		Contains2(ch:QChar_ITF,cs:number):boolean;
		Contains3(str:QLatin1String_ITF,cs:number):boolean;
		Contains4(str:QStringRef_ITF,cs:number):boolean;
		Count():number;
		Count2(str:string,cs:number):number;
		Count3(ch:QChar_ITF,cs:number):number;
		Count4(str:QStringRef_ITF,cs:number):number;
		Data():QChar;
		EndsWith(str:string,cs:number):boolean;
		EndsWith2(str:QStringView_ITF,cs:number):boolean;
		EndsWith3(str:QLatin1String_ITF,cs:number):boolean;
		EndsWith4(ch:QChar_ITF,cs:number):boolean;
		EndsWith5(str:QStringRef_ITF,cs:number):boolean;
		IndexOf(str:string,from:number,cs:number):number;
		IndexOf2(ch:QChar_ITF,from:number,cs:number):number;
		IndexOf3(str:QLatin1String_ITF,from:number,cs:number):number;
		IndexOf4(str:QStringRef_ITF,from:number,cs:number):number;
		IsEmpty():boolean;
		Left(n:number):QStringRef;
		Length():number;
		Mid(position:number,n:number):QStringRef;
		Position():number;
		Right(n:number):QStringRef;
		Size():number;
		Split(sep:string,behavior:number,cs:number):QStringRef[];
		Split2(sep:QChar_ITF,behavior:number,cs:number):QStringRef[];
		String():string;
		ToInt(ok:boolean,base:number):number;
		ToString():string;
		ToULong(ok:boolean,base:number):number;
		ToULongLong(ok:boolean,base:number):number;
		DestroyQStringRef():void;
	}
	function NewQStringRefFromPointer(ptr:number):QStringRef;
	function NewQStringRef():QStringRef;
	function NewQStringRef2(stri:string,position:number,length:number):QStringRef;
	function NewQStringRef3(stri:string):QStringRef;
	function NewQStringRef4(other:QStringRef_ITF):QStringRef;
	interface QStringView_ITF {
		QStringView_PTR():QStringView;
	}

	class QStringView {
		___pointer: number;
		QStringView_PTR():QStringView;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQStringView():void;
		Back():QChar;
		Empty():boolean;
		EndsWith(str:QStringView_ITF,cs:number):boolean;
		EndsWith2(l1:QLatin1String_ITF,cs:number):boolean;
		EndsWith3(ch:QChar_ITF):boolean;
		EndsWith4(ch:QChar_ITF,cs:number):boolean;
		First():QChar;
		IsEmpty():boolean;
		Last():QChar;
		Length():number;
		ToString():string;
	}
	function NewQStringViewFromPointer(ptr:number):QStringView;
	function NewQStringView():QStringView;
	function NewQStringView7(str:string):QStringView;
	function NewQStringView8(str:QStringRef_ITF):QStringView;
	const QSysInfo__WordSize: number;
	const QSysInfo__BigEndian: number;
	const QSysInfo__LittleEndian: number;
	const QSystemSemaphore__Open: number;
	const QSystemSemaphore__Create: number;
	const QSystemSemaphore__NoError: number;
	const QSystemSemaphore__PermissionDenied: number;
	const QSystemSemaphore__KeyError: number;
	const QSystemSemaphore__AlreadyExists: number;
	const QSystemSemaphore__NotFound: number;
	const QSystemSemaphore__OutOfResources: number;
	const QSystemSemaphore__UnknownError: number;
	const QTextBoundaryFinder__Grapheme: number;
	const QTextBoundaryFinder__Word: number;
	const QTextBoundaryFinder__Sentence: number;
	const QTextBoundaryFinder__Line: number;
	const QTextBoundaryFinder__NotAtBoundary: number;
	const QTextBoundaryFinder__BreakOpportunity: number;
	const QTextBoundaryFinder__StartOfItem: number;
	const QTextBoundaryFinder__EndOfItem: number;
	const QTextBoundaryFinder__MandatoryBreak: number;
	const QTextBoundaryFinder__SoftHyphen: number;
	const QTextCodec__DefaultConversion: number;
	const QTextCodec__ConvertInvalidToNull: number;
	const QTextCodec__IgnoreHeader: number;
	const QTextCodec__FreeFunction: number;
	const QTextStream__SmartNotation: number;
	const QTextStream__FixedNotation: number;
	const QTextStream__ScientificNotation: number;
	const QTextStream__AlignLeft: number;
	const QTextStream__AlignRight: number;
	const QTextStream__AlignCenter: number;
	const QTextStream__AlignAccountingStyle: number;
	const QTextStream__Ok: number;
	const QTextStream__ReadPastEnd: number;
	const QTextStream__ReadCorruptData: number;
	const QTextStream__WriteFailed: number;
	const QTextStream__ShowBase: number;
	const QTextStream__ForcePoint: number;
	const QTextStream__ForceSign: number;
	const QTextStream__UppercaseBase: number;
	const QTextStream__UppercaseDigits: number;
	interface QThread_ITF extends QObject_ITF {
		QThread_PTR():QThread;
	}

	class QThread extends QObject {
		___pointer: number;
		QThread_PTR():QThread;
		Pointer():number;
		SetPointer(p:number):void;
		Exec():number;
		Exit(returnCode:number):void;
		ConnectQuit(f:()=>void):void;
		DisconnectQuit():void;
		Quit():void;
		QuitDefault():void;
		ConnectRun(f:()=>void):void;
		DisconnectRun():void;
		Run():void;
		RunDefault():void;
		Sleep(secs:number):void;
		ConnectStart(f:()=>void):void;
		DisconnectStart():void;
		Start():void;
		StartDefault():void;
		Wait(ti:number):boolean;
		ConnectDestroyQThread(f:()=>void):void;
		DisconnectDestroyQThread():void;
		DestroyQThread():void;
		DestroyQThreadDefault():void;
	}
	function NewQThreadFromPointer(ptr:number):QThread;
	function NewQThread(parent:QObject_ITF):QThread;
	function QThread_Sleep(secs:number):void;
	const QThread__IdlePriority: number;
	const QThread__LowestPriority: number;
	const QThread__LowPriority: number;
	const QThread__NormalPriority: number;
	const QThread__HighPriority: number;
	const QThread__HighestPriority: number;
	const QThread__TimeCriticalPriority: number;
	const QThread__InheritPriority: number;
	interface QTime_ITF {
		QTime_PTR():QTime;
	}

	class QTime {
		___pointer: number;
		QTime_PTR():QTime;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQTime():void;
		Elapsed():number;
		IsValid():boolean;
		IsValid2(h:number,m:number,s:number,ms:number):boolean;
		Restart():number;
		Start():void;
		ToString(format:string):string;
		ToString2(format:number):string;
		ToString3(format:QStringView_ITF):string;
	}
	function NewQTimeFromPointer(ptr:number):QTime;
	function NewQTime2():QTime;
	function NewQTime3(h:number,m:number,s:number,ms:number):QTime;
	function QTime_IsValid2(h:number,m:number,s:number,ms:number):boolean;
	function NewQTimeZone():QTimeZone;
	function NewQTimeZone2(ianaId:QByteArray_ITF):QTimeZone;
	function NewQTimeZone3(offsetSeconds:number):QTimeZone;
	function NewQTimeZone4(ianaId:QByteArray_ITF,offsetSeconds:number,name:string,abbreviation:string,country:number,comment:string):QTimeZone;
	function NewQTimeZone5(other:QTimeZone_ITF):QTimeZone;
	function NewQTimer(parent:QObject_ITF):QTimer;
	function NewQTimerEvent(timerId:number):QTimerEvent;
	const QTimeLine__NotRunning: number;
	const QTimeLine__Paused: number;
	const QTimeLine__Running: number;
	const QTimeLine__Forward: number;
	const QTimeLine__Backward: number;
	const QTimeLine__EaseInCurve: number;
	const QTimeLine__EaseOutCurve: number;
	const QTimeLine__EaseInOutCurve: number;
	const QTimeLine__LinearCurve: number;
	const QTimeLine__SineCurve: number;
	const QTimeLine__CosineCurve: number;
	interface QTimeZone_ITF {
		QTimeZone_PTR():QTimeZone;
	}

	class QTimeZone {
		___pointer: number;
		QTimeZone_PTR():QTimeZone;
		Pointer():number;
		SetPointer(p:number):void;
		Comment():string;
		Id():QByteArray;
		IsValid():boolean;
		DestroyQTimeZone():void;
	}
	function NewQTimeZoneFromPointer(ptr:number):QTimeZone;
	function NewQTimeZone():QTimeZone;
	function NewQTimeZone2(ianaId:QByteArray_ITF):QTimeZone;
	function NewQTimeZone3(offsetSeconds:number):QTimeZone;
	function NewQTimeZone4(ianaId:QByteArray_ITF,offsetSeconds:number,name:string,abbreviation:string,country:number,comment:string):QTimeZone;
	function NewQTimeZone5(other:QTimeZone_ITF):QTimeZone;
	const QTimeZone__StandardTime: number;
	const QTimeZone__DaylightTime: number;
	const QTimeZone__GenericTime: number;
	const QTimeZone__DefaultName: number;
	const QTimeZone__LongName: number;
	const QTimeZone__ShortName: number;
	const QTimeZone__OffsetName: number;
	interface QTimer_ITF extends QObject_ITF {
		QTimer_PTR():QTimer;
	}

	class QTimer extends QObject {
		___pointer: number;
		QTimer_PTR():QTimer;
		Pointer():number;
		SetPointer(p:number):void;
		Interval():number;
		SetSingleShot(singleShot:boolean):void;
		SingleShot(msec:number,receiver:QObject_ITF,member:string):void;
		SingleShot2(msec:number,timerType:number,receiver:QObject_ITF,member:string):void;
		ConnectStart(f:(msec:number)=>void):void;
		DisconnectStart():void;
		Start(msec:number):void;
		StartDefault(msec:number):void;
		ConnectStart2(f:()=>void):void;
		DisconnectStart2():void;
		Start2():void;
		Start2Default():void;
		ConnectStop(f:()=>void):void;
		DisconnectStop():void;
		Stop():void;
		StopDefault():void;
		ConnectTimeout(f:()=>void):void;
		DisconnectTimeout():void;
		ConnectDestroyQTimer(f:()=>void):void;
		DisconnectDestroyQTimer():void;
		DestroyQTimer():void;
		DestroyQTimerDefault():void;
	}
	function NewQTimerFromPointer(ptr:number):QTimer;
	function NewQTimer(parent:QObject_ITF):QTimer;
	function QTimer_SingleShot(msec:number,receiver:QObject_ITF,member:string):void;
	function QTimer_SingleShot2(msec:number,timerType:number,receiver:QObject_ITF,member:string):void;
	function NewQTimerEvent(timerId:number):QTimerEvent;
	interface QTimerEvent_ITF extends QEvent_ITF {
		QTimerEvent_PTR():QTimerEvent;
	}

	class QTimerEvent extends QEvent {
		___pointer: number;
		QTimerEvent_PTR():QTimerEvent;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQTimerEvent():void;
	}
	function NewQTimerEventFromPointer(ptr:number):QTimerEvent;
	function NewQTimerEvent(timerId:number):QTimerEvent;
	interface QUrl_ITF {
		QUrl_PTR():QUrl;
	}

	class QUrl {
		___pointer: number;
		QUrl_PTR():QUrl;
		Pointer():number;
		SetPointer(p:number):void;
		Clear():void;
		ErrorString():string;
		FileName(options:number):string;
		FromLocalFile(localFile:string):QUrl;
		IsEmpty():boolean;
		IsValid():boolean;
		Password(options:number):string;
		Path(options:number):string;
		ToString(options:number):string;
		Url(options:number):string;
		DestroyQUrl():void;
	}
	function NewQUrlFromPointer(ptr:number):QUrl;
	function NewQUrl():QUrl;
	function NewQUrl2(other:QUrl_ITF):QUrl;
	function NewQUrl3(url:string,parsingMode:number):QUrl;
	function NewQUrl4(other:QUrl_ITF):QUrl;
	function QUrl_FromLocalFile(localFile:string):QUrl;
	const QUrl__TolerantMode: number;
	const QUrl__StrictMode: number;
	const QUrl__DecodedMode: number;
	const QUrl__None: number;
	const QUrl__RemoveScheme: number;
	const QUrl__RemovePassword: number;
	const QUrl__RemoveUserInfo: number;
	const QUrl__RemovePort: number;
	const QUrl__RemoveAuthority: number;
	const QUrl__RemovePath: number;
	const QUrl__RemoveQuery: number;
	const QUrl__RemoveFragment: number;
	const QUrl__PreferLocalFile: number;
	const QUrl__StripTrailingSlash: number;
	const QUrl__RemoveFilename: number;
	const QUrl__NormalizePathSegments: number;
	const QUrl__PrettyDecoded: number;
	const QUrl__EncodeSpaces: number;
	const QUrl__EncodeUnicode: number;
	const QUrl__EncodeDelimiters: number;
	const QUrl__EncodeReserved: number;
	const QUrl__DecodeReserved: number;
	const QUrl__FullyEncoded: number;
	const QUrl__FullyDecoded: number;
	const QUrl__DefaultResolution: number;
	const QUrl__AssumeLocalFile: number;
	interface QUuid_ITF {
		QUuid_PTR():QUuid;
	}

	class QUuid {
		___pointer: number;
		QUuid_PTR():QUuid;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQUuid():void;
		ToString():string;
		ToString2(mode:number):string;
		Variant():number;
		Version():number;
	}
	function NewQUuidFromPointer(ptr:number):QUuid;
	function NewQUuid2():QUuid;
	function NewQUuid3(l:number,w1:number,w2:number,b1:string,b2:string,b3:string,b4:string,b5:string,b6:string,b7:string,b8:string):QUuid;
	function NewQUuid4(text:string):QUuid;
	function NewQUuid(text:QByteArray_ITF):QUuid;
	const QUuid__VarUnknown: number;
	const QUuid__NCS: number;
	const QUuid__DCE: number;
	const QUuid__Microsoft: number;
	const QUuid__Reserved: number;
	const QUuid__VerUnknown: number;
	const QUuid__Time: number;
	const QUuid__EmbeddedPOSIX: number;
	const QUuid__Md5: number;
	const QUuid__Name: number;
	const QUuid__Random: number;
	const QUuid__Sha1: number;
	const QUuid__WithBraces: number;
	const QUuid__WithoutBraces: number;
	const QUuid__Id128: number;
	interface QVariant_ITF {
		QVariant_PTR():QVariant;
	}

	class QVariant {
		___pointer: number;
		QVariant_PTR():QVariant;
		Pointer():number;
		SetPointer(p:number):void;
		ToInterface():any;
		ToGoType(dst:any):void;
		CanConvert(targetTypeId:number):boolean;
		Clear():void;
		IsValid():boolean;
		ToBool():boolean;
		ToDouble(ok:boolean):number;
		ToHash():Map<string,QVariant>;
		ToInt(ok:boolean):number;
		ToList():QVariant[];
		ToLongLong(ok:boolean):number;
		ToMap():Map<string,QVariant>;
		ToString():string;
		ToStringList():string[];
		ToUInt(ok:boolean):number;
		ToULongLong(ok:boolean):number;
		Type():number;
		DestroyQVariant():void;
		ToImage():number;
	}
	function NewQVariantFromPointer(ptr:number):QVariant;
	function NewQVariant1(i:any):QVariant;
	function NewQVariant():QVariant;
	function NewQVariant2(ty:number):QVariant;
	function NewQVariant3(typeId:number,copy:number):QVariant;
	function NewQVariant4(s:QDataStream_ITF):QVariant;
	function NewQVariant5(val:number):QVariant;
	function NewQVariant6(val:number):QVariant;
	function NewQVariant7(val:number):QVariant;
	function NewQVariant8(val:number):QVariant;
	function NewQVariant9(val:boolean):QVariant;
	function NewQVariant10(val:number):QVariant;
	function NewQVariant11(val:number):QVariant;
	function NewQVariant12(val:string):QVariant;
	function NewQVariant13(val:QByteArray_ITF):QVariant;
	function NewQVariant14(val:QBitArray_ITF):QVariant;
	function NewQVariant15(val:string):QVariant;
	function NewQVariant16(val:QLatin1String_ITF):QVariant;
	function NewQVariant17(val:string[]):QVariant;
	function NewQVariant18(c:QChar_ITF):QVariant;
	function NewQVariant19(val:QDate_ITF):QVariant;
	function NewQVariant20(val:QTime_ITF):QVariant;
	function NewQVariant21(val:QDateTime_ITF):QVariant;
	function NewQVariant22(val:QVariant[]):QVariant;
	function NewQVariant23(val:Map<string,QVariant>):QVariant;
	function NewQVariant24(val:Map<string,QVariant>):QVariant;
	function NewQVariant25(val:QSize_ITF):QVariant;
	function NewQVariant26(val:QSizeF_ITF):QVariant;
	function NewQVariant27(val:QPoint_ITF):QVariant;
	function NewQVariant28(val:QPointF_ITF):QVariant;
	function NewQVariant29(val:QLine_ITF):QVariant;
	function NewQVariant30(val:QLineF_ITF):QVariant;
	function NewQVariant31(val:QRect_ITF):QVariant;
	function NewQVariant32(val:QRectF_ITF):QVariant;
	function NewQVariant33(l:QLocale_ITF):QVariant;
	function NewQVariant34(regExp:QRegExp_ITF):QVariant;
	function NewQVariant35(re:QRegularExpression_ITF):QVariant;
	function NewQVariant36(val:QUrl_ITF):QVariant;
	function NewQVariant37(val:QEasingCurve_ITF):QVariant;
	function NewQVariant38(val:QUuid_ITF):QVariant;
	function NewQVariant39(val:QJsonValue_ITF):QVariant;
	function NewQVariant40(val:QJsonObject_ITF):QVariant;
	function NewQVariant41(val:QJsonArray_ITF):QVariant;
	function NewQVariant42(val:QJsonDocument_ITF):QVariant;
	function NewQVariant43(val:QModelIndex_ITF):QVariant;
	function NewQVariant44(val:QPersistentModelIndex_ITF):QVariant;
	function NewQVariant45(other:QVariant_ITF):QVariant;
	const QVariant__Invalid: number;
	const QVariant__Bool: number;
	const QVariant__Int: number;
	const QVariant__UInt: number;
	const QVariant__LongLong: number;
	const QVariant__ULongLong: number;
	const QVariant__Double: number;
	const QVariant__Char: number;
	const QVariant__Map: number;
	const QVariant__List: number;
	const QVariant__String: number;
	const QVariant__StringList: number;
	const QVariant__ByteArray: number;
	const QVariant__BitArray: number;
	const QVariant__Date: number;
	const QVariant__Time: number;
	const QVariant__DateTime: number;
	const QVariant__Url: number;
	const QVariant__Locale: number;
	const QVariant__Rect: number;
	const QVariant__RectF: number;
	const QVariant__Size: number;
	const QVariant__SizeF: number;
	const QVariant__Line: number;
	const QVariant__LineF: number;
	const QVariant__Point: number;
	const QVariant__PointF: number;
	const QVariant__RegExp: number;
	const QVariant__RegularExpression: number;
	const QVariant__Hash: number;
	const QVariant__EasingCurve: number;
	const QVariant__Uuid: number;
	const QVariant__ModelIndex: number;
	const QVariant__PersistentModelIndex: number;
	const QVariant__Font: number;
	const QVariant__Pixmap: number;
	const QVariant__Brush: number;
	const QVariant__Color: number;
	const QVariant__Palette: number;
	const QVariant__Image: number;
	const QVariant__Polygon: number;
	const QVariant__Region: number;
	const QVariant__Bitmap: number;
	const QVariant__Cursor: number;
	const QVariant__KeySequence: number;
	const QVariant__Pen: number;
	const QVariant__TextLength: number;
	const QVariant__TextFormat: number;
	const QVariant__Matrix: number;
	const QVariant__Transform: number;
	const QVariant__Matrix4x4: number;
	const QVariant__Vector2D: number;
	const QVariant__Vector3D: number;
	const QVariant__Vector4D: number;
	const QVariant__Quaternion: number;
	const QVariant__PolygonF: number;
	const QVariant__Icon: number;
	const QVariant__SizePolicy: number;
	const QVariant__UserType: number;
	const QVariant__LastType: number;
	const QXmlStreamReader__NoToken: number;
	const QXmlStreamReader__Invalid: number;
	const QXmlStreamReader__StartDocument: number;
	const QXmlStreamReader__EndDocument: number;
	const QXmlStreamReader__StartElement: number;
	const QXmlStreamReader__EndElement: number;
	const QXmlStreamReader__Characters: number;
	const QXmlStreamReader__Comment: number;
	const QXmlStreamReader__DTD: number;
	const QXmlStreamReader__EntityReference: number;
	const QXmlStreamReader__ProcessingInstruction: number;
	const QXmlStreamReader__ErrorOnUnexpectedElement: number;
	const QXmlStreamReader__IncludeChildElements: number;
	const QXmlStreamReader__SkipChildElements: number;
	const QXmlStreamReader__NoError: number;
	const QXmlStreamReader__UnexpectedElementError: number;
	const QXmlStreamReader__CustomError: number;
	const QXmlStreamReader__NotWellFormedError: number;
	const QXmlStreamReader__PrematureEndOfDocumentError: number;
	interface Qt_ITF {
		Qt_PTR():Qt;
	}

	class Qt {
		___pointer: number;
		Qt_PTR():Qt;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQt():void;
	}
	function NewQtFromPointer(ptr:number):Qt;
	const Qt__color0: number;
	const Qt__color1: number;
	const Qt__black: number;
	const Qt__white: number;
	const Qt__darkGray: number;
	const Qt__gray: number;
	const Qt__lightGray: number;
	const Qt__red: number;
	const Qt__green: number;
	const Qt__blue: number;
	const Qt__cyan: number;
	const Qt__magenta: number;
	const Qt__yellow: number;
	const Qt__darkRed: number;
	const Qt__darkGreen: number;
	const Qt__darkBlue: number;
	const Qt__darkCyan: number;
	const Qt__darkMagenta: number;
	const Qt__darkYellow: number;
	const Qt__transparent: number;
	const Qt__NoModifier: number;
	const Qt__ShiftModifier: number;
	const Qt__ControlModifier: number;
	const Qt__AltModifier: number;
	const Qt__MetaModifier: number;
	const Qt__KeypadModifier: number;
	const Qt__GroupSwitchModifier: number;
	const Qt__KeyboardModifierMask: number;
	const Qt__META: number;
	const Qt__SHIFT: number;
	const Qt__CTRL: number;
	const Qt__ALT: number;
	const Qt__MODIFIER_MASK: number;
	const Qt__UNICODE_ACCEL: number;
	const Qt__NoButton: number;
	const Qt__LeftButton: number;
	const Qt__RightButton: number;
	const Qt__MidButton: number;
	const Qt__MiddleButton: number;
	const Qt__BackButton: number;
	const Qt__XButton1: number;
	const Qt__ExtraButton1: number;
	const Qt__ForwardButton: number;
	const Qt__XButton2: number;
	const Qt__ExtraButton2: number;
	const Qt__TaskButton: number;
	const Qt__ExtraButton3: number;
	const Qt__ExtraButton4: number;
	const Qt__ExtraButton5: number;
	const Qt__ExtraButton6: number;
	const Qt__ExtraButton7: number;
	const Qt__ExtraButton8: number;
	const Qt__ExtraButton9: number;
	const Qt__ExtraButton10: number;
	const Qt__ExtraButton11: number;
	const Qt__ExtraButton12: number;
	const Qt__ExtraButton13: number;
	const Qt__ExtraButton14: number;
	const Qt__ExtraButton15: number;
	const Qt__ExtraButton16: number;
	const Qt__ExtraButton17: number;
	const Qt__ExtraButton18: number;
	const Qt__ExtraButton19: number;
	const Qt__ExtraButton20: number;
	const Qt__ExtraButton21: number;
	const Qt__ExtraButton22: number;
	const Qt__ExtraButton23: number;
	const Qt__ExtraButton24: number;
	const Qt__AllButtons: number;
	const Qt__MaxMouseButton: number;
	const Qt__MouseButtonMask: number;
	const Qt__Horizontal: number;
	const Qt__Vertical: number;
	const Qt__NoFocus: number;
	const Qt__TabFocus: number;
	const Qt__ClickFocus: number;
	const Qt__StrongFocus: number;
	const Qt__WheelFocus: number;
	const Qt__NoTabFocus: number;
	const Qt__TabFocusTextControls: number;
	const Qt__TabFocusListControls: number;
	const Qt__TabFocusAllControls: number;
	const Qt__AscendingOrder: number;
	const Qt__DescendingOrder: number;
	const Qt__StretchTile: number;
	const Qt__RepeatTile: number;
	const Qt__RoundTile: number;
	const Qt__AlignLeft: number;
	const Qt__AlignLeading: number;
	const Qt__AlignRight: number;
	const Qt__AlignTrailing: number;
	const Qt__AlignHCenter: number;
	const Qt__AlignJustify: number;
	const Qt__AlignAbsolute: number;
	const Qt__AlignHorizontal_Mask: number;
	const Qt__AlignTop: number;
	const Qt__AlignBottom: number;
	const Qt__AlignVCenter: number;
	const Qt__AlignBaseline: number;
	const Qt__AlignVertical_Mask: number;
	const Qt__AlignCenter: number;
	const Qt__TextSingleLine: number;
	const Qt__TextDontClip: number;
	const Qt__TextExpandTabs: number;
	const Qt__TextShowMnemonic: number;
	const Qt__TextWordWrap: number;
	const Qt__TextWrapAnywhere: number;
	const Qt__TextDontPrint: number;
	const Qt__TextIncludeTrailingSpaces: number;
	const Qt__TextHideMnemonic: number;
	const Qt__TextJustificationForced: number;
	const Qt__TextForceLeftToRight: number;
	const Qt__TextForceRightToLeft: number;
	const Qt__TextLongestVariant: number;
	const Qt__TextBypassShaping: number;
	const Qt__ElideLeft: number;
	const Qt__ElideRight: number;
	const Qt__ElideMiddle: number;
	const Qt__ElideNone: number;
	const Qt__WhiteSpaceNormal: number;
	const Qt__WhiteSpacePre: number;
	const Qt__WhiteSpaceNoWrap: number;
	const Qt__WhiteSpaceModeUndefined: number;
	const Qt__ExactHit: number;
	const Qt__FuzzyHit: number;
	const Qt__Widget: number;
	const Qt__Window: number;
	const Qt__Dialog: number;
	const Qt__Sheet: number;
	const Qt__Drawer: number;
	const Qt__Popup: number;
	const Qt__Tool: number;
	const Qt__ToolTip: number;
	const Qt__SplashScreen: number;
	const Qt__Desktop: number;
	const Qt__SubWindow: number;
	const Qt__ForeignWindow: number;
	const Qt__CoverWindow: number;
	const Qt__WindowType_Mask: number;
	const Qt__MSWindowsFixedSizeDialogHint: number;
	const Qt__MSWindowsOwnDC: number;
	const Qt__BypassWindowManagerHint: number;
	const Qt__X11BypassWindowManagerHint: number;
	const Qt__FramelessWindowHint: number;
	const Qt__WindowTitleHint: number;
	const Qt__WindowSystemMenuHint: number;
	const Qt__WindowMinimizeButtonHint: number;
	const Qt__WindowMaximizeButtonHint: number;
	const Qt__WindowMinMaxButtonsHint: number;
	const Qt__WindowContextHelpButtonHint: number;
	const Qt__WindowShadeButtonHint: number;
	const Qt__WindowStaysOnTopHint: number;
	const Qt__WindowTransparentForInput: number;
	const Qt__WindowOverridesSystemGestures: number;
	const Qt__WindowDoesNotAcceptFocus: number;
	const Qt__MaximizeUsingFullscreenGeometryHint: number;
	const Qt__CustomizeWindowHint: number;
	const Qt__WindowStaysOnBottomHint: number;
	const Qt__WindowCloseButtonHint: number;
	const Qt__MacWindowToolBarButtonHint: number;
	const Qt__BypassGraphicsProxyWidget: number;
	const Qt__NoDropShadowWindowHint: number;
	const Qt__WindowFullscreenButtonHint: number;
	const Qt__WindowNoState: number;
	const Qt__WindowMinimized: number;
	const Qt__WindowMaximized: number;
	const Qt__WindowFullScreen: number;
	const Qt__WindowActive: number;
	const Qt__ApplicationSuspended: number;
	const Qt__ApplicationHidden: number;
	const Qt__ApplicationInactive: number;
	const Qt__ApplicationActive: number;
	const Qt__PrimaryOrientation: number;
	const Qt__PortraitOrientation: number;
	const Qt__LandscapeOrientation: number;
	const Qt__InvertedPortraitOrientation: number;
	const Qt__InvertedLandscapeOrientation: number;
	const Qt__WA_Disabled: number;
	const Qt__WA_UnderMouse: number;
	const Qt__WA_MouseTracking: number;
	const Qt__WA_ContentsPropagated: number;
	const Qt__WA_OpaquePaintEvent: number;
	const Qt__WA_NoBackground: number;
	const Qt__WA_StaticContents: number;
	const Qt__WA_LaidOut: number;
	const Qt__WA_PaintOnScreen: number;
	const Qt__WA_NoSystemBackground: number;
	const Qt__WA_UpdatesDisabled: number;
	const Qt__WA_Mapped: number;
	const Qt__WA_MacNoClickThrough: number;
	const Qt__WA_InputMethodEnabled: number;
	const Qt__WA_WState_Visible: number;
	const Qt__WA_WState_Hidden: number;
	const Qt__WA_ForceDisabled: number;
	const Qt__WA_KeyCompression: number;
	const Qt__WA_PendingMoveEvent: number;
	const Qt__WA_PendingResizeEvent: number;
	const Qt__WA_SetPalette: number;
	const Qt__WA_SetFont: number;
	const Qt__WA_SetCursor: number;
	const Qt__WA_NoChildEventsFromChildren: number;
	const Qt__WA_WindowModified: number;
	const Qt__WA_Resized: number;
	const Qt__WA_Moved: number;
	const Qt__WA_PendingUpdate: number;
	const Qt__WA_InvalidSize: number;
	const Qt__WA_MacBrushedMetal: number;
	const Qt__WA_MacMetalStyle: number;
	const Qt__WA_CustomWhatsThis: number;
	const Qt__WA_LayoutOnEntireRect: number;
	const Qt__WA_OutsideWSRange: number;
	const Qt__WA_GrabbedShortcut: number;
	const Qt__WA_TransparentForMouseEvents: number;
	const Qt__WA_PaintUnclipped: number;
	const Qt__WA_SetWindowIcon: number;
	const Qt__WA_NoMouseReplay: number;
	const Qt__WA_DeleteOnClose: number;
	const Qt__WA_RightToLeft: number;
	const Qt__WA_SetLayoutDirection: number;
	const Qt__WA_NoChildEventsForParent: number;
	const Qt__WA_ForceUpdatesDisabled: number;
	const Qt__WA_WState_Created: number;
	const Qt__WA_WState_CompressKeys: number;
	const Qt__WA_WState_InPaintEvent: number;
	const Qt__WA_WState_Reparented: number;
	const Qt__WA_WState_ConfigPending: number;
	const Qt__WA_WState_Polished: number;
	const Qt__WA_WState_DND: number;
	const Qt__WA_WState_OwnSizePolicy: number;
	const Qt__WA_WState_ExplicitShowHide: number;
	const Qt__WA_ShowModal: number;
	const Qt__WA_MouseNoMask: number;
	const Qt__WA_GroupLeader: number;
	const Qt__WA_NoMousePropagation: number;
	const Qt__WA_Hover: number;
	const Qt__WA_InputMethodTransparent: number;
	const Qt__WA_QuitOnClose: number;
	const Qt__WA_KeyboardFocusChange: number;
	const Qt__WA_AcceptDrops: number;
	const Qt__WA_DropSiteRegistered: number;
	const Qt__WA_ForceAcceptDrops: number;
	const Qt__WA_WindowPropagation: number;
	const Qt__WA_NoX11EventCompression: number;
	const Qt__WA_TintedBackground: number;
	const Qt__WA_X11OpenGLOverlay: number;
	const Qt__WA_AlwaysShowToolTips: number;
	const Qt__WA_MacOpaqueSizeGrip: number;
	const Qt__WA_SetStyle: number;
	const Qt__WA_SetLocale: number;
	const Qt__WA_MacShowFocusRect: number;
	const Qt__WA_MacNormalSize: number;
	const Qt__WA_MacSmallSize: number;
	const Qt__WA_MacMiniSize: number;
	const Qt__WA_LayoutUsesWidgetRect: number;
	const Qt__WA_StyledBackground: number;
	const Qt__WA_MSWindowsUseDirect3D: number;
	const Qt__WA_CanHostQMdiSubWindowTitleBar: number;
	const Qt__WA_MacAlwaysShowToolWindow: number;
	const Qt__WA_StyleSheet: number;
	const Qt__WA_ShowWithoutActivating: number;
	const Qt__WA_X11BypassTransientForHint: number;
	const Qt__WA_NativeWindow: number;
	const Qt__WA_DontCreateNativeAncestors: number;
	const Qt__WA_MacVariableSize: number;
	const Qt__WA_DontShowOnScreen: number;
	const Qt__WA_X11NetWmWindowTypeDesktop: number;
	const Qt__WA_X11NetWmWindowTypeDock: number;
	const Qt__WA_X11NetWmWindowTypeToolBar: number;
	const Qt__WA_X11NetWmWindowTypeMenu: number;
	const Qt__WA_X11NetWmWindowTypeUtility: number;
	const Qt__WA_X11NetWmWindowTypeSplash: number;
	const Qt__WA_X11NetWmWindowTypeDialog: number;
	const Qt__WA_X11NetWmWindowTypeDropDownMenu: number;
	const Qt__WA_X11NetWmWindowTypePopupMenu: number;
	const Qt__WA_X11NetWmWindowTypeToolTip: number;
	const Qt__WA_X11NetWmWindowTypeNotification: number;
	const Qt__WA_X11NetWmWindowTypeCombo: number;
	const Qt__WA_X11NetWmWindowTypeDND: number;
	const Qt__WA_MacFrameworkScaled: number;
	const Qt__WA_SetWindowModality: number;
	const Qt__WA_WState_WindowOpacitySet: number;
	const Qt__WA_TranslucentBackground: number;
	const Qt__WA_AcceptTouchEvents: number;
	const Qt__WA_WState_AcceptedTouchBeginEvent: number;
	const Qt__WA_TouchPadAcceptSingleTouchEvents: number;
	const Qt__WA_X11DoNotAcceptFocus: number;
	const Qt__WA_MacNoShadow: number;
	const Qt__WA_AlwaysStackOnTop: number;
	const Qt__WA_TabletTracking: number;
	const Qt__WA_ContentsMarginsRespectsSafeArea: number;
	const Qt__WA_StyleSheetTarget: number;
	const Qt__WA_AttributeCount: number;
	const Qt__AA_ImmediateWidgetCreation: number;
	const Qt__AA_MSWindowsUseDirect3DByDefault: number;
	const Qt__AA_DontShowIconsInMenus: number;
	const Qt__AA_NativeWindows: number;
	const Qt__AA_DontCreateNativeWidgetSiblings: number;
	const Qt__AA_PluginApplication: number;
	const Qt__AA_MacPluginApplication: number;
	const Qt__AA_DontUseNativeMenuBar: number;
	const Qt__AA_MacDontSwapCtrlAndMeta: number;
	const Qt__AA_Use96Dpi: number;
	const Qt__AA_X11InitThreads: number;
	const Qt__AA_SynthesizeTouchForUnhandledMouseEvents: number;
	const Qt__AA_SynthesizeMouseForUnhandledTouchEvents: number;
	const Qt__AA_UseHighDpiPixmaps: number;
	const Qt__AA_ForceRasterWidgets: number;
	const Qt__AA_UseDesktopOpenGL: number;
	const Qt__AA_UseOpenGLES: number;
	const Qt__AA_UseSoftwareOpenGL: number;
	const Qt__AA_ShareOpenGLContexts: number;
	const Qt__AA_SetPalette: number;
	const Qt__AA_EnableHighDpiScaling: number;
	const Qt__AA_DisableHighDpiScaling: number;
	const Qt__AA_UseStyleSheetPropagationInWidgetStyles: number;
	const Qt__AA_DontUseNativeDialogs: number;
	const Qt__AA_SynthesizeMouseForUnhandledTabletEvents: number;
	const Qt__AA_CompressHighFrequencyEvents: number;
	const Qt__AA_DontCheckOpenGLContextThreadAffinity: number;
	const Qt__AA_DisableShaderDiskCache: number;
	const Qt__AA_DontShowShortcutsInContextMenus: number;
	const Qt__AA_CompressTabletEvents: number;
	const Qt__AA_DisableWindowContextHelpButton: number;
	const Qt__AA_AttributeCount: number;
	const Qt__ColorMode_Mask: number;
	const Qt__AutoColor: number;
	const Qt__ColorOnly: number;
	const Qt__MonoOnly: number;
	const Qt__AlphaDither_Mask: number;
	const Qt__ThresholdAlphaDither: number;
	const Qt__OrderedAlphaDither: number;
	const Qt__DiffuseAlphaDither: number;
	const Qt__NoAlpha: number;
	const Qt__Dither_Mask: number;
	const Qt__DiffuseDither: number;
	const Qt__OrderedDither: number;
	const Qt__ThresholdDither: number;
	const Qt__DitherMode_Mask: number;
	const Qt__AutoDither: number;
	const Qt__PreferDither: number;
	const Qt__AvoidDither: number;
	const Qt__NoOpaqueDetection: number;
	const Qt__NoFormatConversion: number;
	const Qt__TransparentMode: number;
	const Qt__OpaqueMode: number;
	const Qt__Key_Escape: number;
	const Qt__Key_Tab: number;
	const Qt__Key_Backtab: number;
	const Qt__Key_Backspace: number;
	const Qt__Key_Return: number;
	const Qt__Key_Enter: number;
	const Qt__Key_Insert: number;
	const Qt__Key_Delete: number;
	const Qt__Key_Pause: number;
	const Qt__Key_Print: number;
	const Qt__Key_SysReq: number;
	const Qt__Key_Clear: number;
	const Qt__Key_Home: number;
	const Qt__Key_End: number;
	const Qt__Key_Left: number;
	const Qt__Key_Up: number;
	const Qt__Key_Right: number;
	const Qt__Key_Down: number;
	const Qt__Key_PageUp: number;
	const Qt__Key_PageDown: number;
	const Qt__Key_Shift: number;
	const Qt__Key_Control: number;
	const Qt__Key_Meta: number;
	const Qt__Key_Alt: number;
	const Qt__Key_CapsLock: number;
	const Qt__Key_NumLock: number;
	const Qt__Key_ScrollLock: number;
	const Qt__Key_F1: number;
	const Qt__Key_F2: number;
	const Qt__Key_F3: number;
	const Qt__Key_F4: number;
	const Qt__Key_F5: number;
	const Qt__Key_F6: number;
	const Qt__Key_F7: number;
	const Qt__Key_F8: number;
	const Qt__Key_F9: number;
	const Qt__Key_F10: number;
	const Qt__Key_F11: number;
	const Qt__Key_F12: number;
	const Qt__Key_F13: number;
	const Qt__Key_F14: number;
	const Qt__Key_F15: number;
	const Qt__Key_F16: number;
	const Qt__Key_F17: number;
	const Qt__Key_F18: number;
	const Qt__Key_F19: number;
	const Qt__Key_F20: number;
	const Qt__Key_F21: number;
	const Qt__Key_F22: number;
	const Qt__Key_F23: number;
	const Qt__Key_F24: number;
	const Qt__Key_F25: number;
	const Qt__Key_F26: number;
	const Qt__Key_F27: number;
	const Qt__Key_F28: number;
	const Qt__Key_F29: number;
	const Qt__Key_F30: number;
	const Qt__Key_F31: number;
	const Qt__Key_F32: number;
	const Qt__Key_F33: number;
	const Qt__Key_F34: number;
	const Qt__Key_F35: number;
	const Qt__Key_Super_L: number;
	const Qt__Key_Super_R: number;
	const Qt__Key_Menu: number;
	const Qt__Key_Hyper_L: number;
	const Qt__Key_Hyper_R: number;
	const Qt__Key_Help: number;
	const Qt__Key_Direction_L: number;
	const Qt__Key_Direction_R: number;
	const Qt__Key_Space: number;
	const Qt__Key_Any: number;
	const Qt__Key_Exclam: number;
	const Qt__Key_QuoteDbl: number;
	const Qt__Key_NumberSign: number;
	const Qt__Key_Dollar: number;
	const Qt__Key_Percent: number;
	const Qt__Key_Ampersand: number;
	const Qt__Key_Apostrophe: number;
	const Qt__Key_ParenLeft: number;
	const Qt__Key_ParenRight: number;
	const Qt__Key_Asterisk: number;
	const Qt__Key_Plus: number;
	const Qt__Key_Comma: number;
	const Qt__Key_Minus: number;
	const Qt__Key_Period: number;
	const Qt__Key_Slash: number;
	const Qt__Key_0: number;
	const Qt__Key_1: number;
	const Qt__Key_2: number;
	const Qt__Key_3: number;
	const Qt__Key_4: number;
	const Qt__Key_5: number;
	const Qt__Key_6: number;
	const Qt__Key_7: number;
	const Qt__Key_8: number;
	const Qt__Key_9: number;
	const Qt__Key_Colon: number;
	const Qt__Key_Semicolon: number;
	const Qt__Key_Less: number;
	const Qt__Key_Equal: number;
	const Qt__Key_Greater: number;
	const Qt__Key_Question: number;
	const Qt__Key_At: number;
	const Qt__Key_A: number;
	const Qt__Key_B: number;
	const Qt__Key_C: number;
	const Qt__Key_D: number;
	const Qt__Key_E: number;
	const Qt__Key_F: number;
	const Qt__Key_G: number;
	const Qt__Key_H: number;
	const Qt__Key_I: number;
	const Qt__Key_J: number;
	const Qt__Key_K: number;
	const Qt__Key_L: number;
	const Qt__Key_M: number;
	const Qt__Key_N: number;
	const Qt__Key_O: number;
	const Qt__Key_P: number;
	const Qt__Key_Q: number;
	const Qt__Key_R: number;
	const Qt__Key_S: number;
	const Qt__Key_T: number;
	const Qt__Key_U: number;
	const Qt__Key_V: number;
	const Qt__Key_W: number;
	const Qt__Key_X: number;
	const Qt__Key_Y: number;
	const Qt__Key_Z: number;
	const Qt__Key_BracketLeft: number;
	const Qt__Key_Backslash: number;
	const Qt__Key_BracketRight: number;
	const Qt__Key_AsciiCircum: number;
	const Qt__Key_Underscore: number;
	const Qt__Key_QuoteLeft: number;
	const Qt__Key_BraceLeft: number;
	const Qt__Key_Bar: number;
	const Qt__Key_BraceRight: number;
	const Qt__Key_AsciiTilde: number;
	const Qt__Key_nobreakspace: number;
	const Qt__Key_exclamdown: number;
	const Qt__Key_cent: number;
	const Qt__Key_sterling: number;
	const Qt__Key_currency: number;
	const Qt__Key_yen: number;
	const Qt__Key_brokenbar: number;
	const Qt__Key_section: number;
	const Qt__Key_diaeresis: number;
	const Qt__Key_copyright: number;
	const Qt__Key_ordfeminine: number;
	const Qt__Key_guillemotleft: number;
	const Qt__Key_notsign: number;
	const Qt__Key_hyphen: number;
	const Qt__Key_registered: number;
	const Qt__Key_macron: number;
	const Qt__Key_degree: number;
	const Qt__Key_plusminus: number;
	const Qt__Key_twosuperior: number;
	const Qt__Key_threesuperior: number;
	const Qt__Key_acute: number;
	const Qt__Key_mu: number;
	const Qt__Key_paragraph: number;
	const Qt__Key_periodcentered: number;
	const Qt__Key_cedilla: number;
	const Qt__Key_onesuperior: number;
	const Qt__Key_masculine: number;
	const Qt__Key_guillemotright: number;
	const Qt__Key_onequarter: number;
	const Qt__Key_onehalf: number;
	const Qt__Key_threequarters: number;
	const Qt__Key_questiondown: number;
	const Qt__Key_Agrave: number;
	const Qt__Key_Aacute: number;
	const Qt__Key_Acircumflex: number;
	const Qt__Key_Atilde: number;
	const Qt__Key_Adiaeresis: number;
	const Qt__Key_Aring: number;
	const Qt__Key_AE: number;
	const Qt__Key_Ccedilla: number;
	const Qt__Key_Egrave: number;
	const Qt__Key_Eacute: number;
	const Qt__Key_Ecircumflex: number;
	const Qt__Key_Ediaeresis: number;
	const Qt__Key_Igrave: number;
	const Qt__Key_Iacute: number;
	const Qt__Key_Icircumflex: number;
	const Qt__Key_Idiaeresis: number;
	const Qt__Key_ETH: number;
	const Qt__Key_Ntilde: number;
	const Qt__Key_Ograve: number;
	const Qt__Key_Oacute: number;
	const Qt__Key_Ocircumflex: number;
	const Qt__Key_Otilde: number;
	const Qt__Key_Odiaeresis: number;
	const Qt__Key_multiply: number;
	const Qt__Key_Ooblique: number;
	const Qt__Key_Ugrave: number;
	const Qt__Key_Uacute: number;
	const Qt__Key_Ucircumflex: number;
	const Qt__Key_Udiaeresis: number;
	const Qt__Key_Yacute: number;
	const Qt__Key_THORN: number;
	const Qt__Key_ssharp: number;
	const Qt__Key_division: number;
	const Qt__Key_ydiaeresis: number;
	const Qt__Key_AltGr: number;
	const Qt__Key_Multi_key: number;
	const Qt__Key_Codeinput: number;
	const Qt__Key_SingleCandidate: number;
	const Qt__Key_MultipleCandidate: number;
	const Qt__Key_PreviousCandidate: number;
	const Qt__Key_Mode_switch: number;
	const Qt__Key_Kanji: number;
	const Qt__Key_Muhenkan: number;
	const Qt__Key_Henkan: number;
	const Qt__Key_Romaji: number;
	const Qt__Key_Hiragana: number;
	const Qt__Key_Katakana: number;
	const Qt__Key_Hiragana_Katakana: number;
	const Qt__Key_Zenkaku: number;
	const Qt__Key_Hankaku: number;
	const Qt__Key_Zenkaku_Hankaku: number;
	const Qt__Key_Touroku: number;
	const Qt__Key_Massyo: number;
	const Qt__Key_Kana_Lock: number;
	const Qt__Key_Kana_Shift: number;
	const Qt__Key_Eisu_Shift: number;
	const Qt__Key_Eisu_toggle: number;
	const Qt__Key_Hangul: number;
	const Qt__Key_Hangul_Start: number;
	const Qt__Key_Hangul_End: number;
	const Qt__Key_Hangul_Hanja: number;
	const Qt__Key_Hangul_Jamo: number;
	const Qt__Key_Hangul_Romaja: number;
	const Qt__Key_Hangul_Jeonja: number;
	const Qt__Key_Hangul_Banja: number;
	const Qt__Key_Hangul_PreHanja: number;
	const Qt__Key_Hangul_PostHanja: number;
	const Qt__Key_Hangul_Special: number;
	const Qt__Key_Dead_Grave: number;
	const Qt__Key_Dead_Acute: number;
	const Qt__Key_Dead_Circumflex: number;
	const Qt__Key_Dead_Tilde: number;
	const Qt__Key_Dead_Macron: number;
	const Qt__Key_Dead_Breve: number;
	const Qt__Key_Dead_Abovedot: number;
	const Qt__Key_Dead_Diaeresis: number;
	const Qt__Key_Dead_Abovering: number;
	const Qt__Key_Dead_Doubleacute: number;
	const Qt__Key_Dead_Caron: number;
	const Qt__Key_Dead_Cedilla: number;
	const Qt__Key_Dead_Ogonek: number;
	const Qt__Key_Dead_Iota: number;
	const Qt__Key_Dead_Voiced_Sound: number;
	const Qt__Key_Dead_Semivoiced_Sound: number;
	const Qt__Key_Dead_Belowdot: number;
	const Qt__Key_Dead_Hook: number;
	const Qt__Key_Dead_Horn: number;
	const Qt__Key_Dead_Stroke: number;
	const Qt__Key_Dead_Abovecomma: number;
	const Qt__Key_Dead_Abovereversedcomma: number;
	const Qt__Key_Dead_Doublegrave: number;
	const Qt__Key_Dead_Belowring: number;
	const Qt__Key_Dead_Belowmacron: number;
	const Qt__Key_Dead_Belowcircumflex: number;
	const Qt__Key_Dead_Belowtilde: number;
	const Qt__Key_Dead_Belowbreve: number;
	const Qt__Key_Dead_Belowdiaeresis: number;
	const Qt__Key_Dead_Invertedbreve: number;
	const Qt__Key_Dead_Belowcomma: number;
	const Qt__Key_Dead_Currency: number;
	const Qt__Key_Dead_a: number;
	const Qt__Key_Dead_A: number;
	const Qt__Key_Dead_e: number;
	const Qt__Key_Dead_E: number;
	const Qt__Key_Dead_i: number;
	const Qt__Key_Dead_I: number;
	const Qt__Key_Dead_o: number;
	const Qt__Key_Dead_O: number;
	const Qt__Key_Dead_u: number;
	const Qt__Key_Dead_U: number;
	const Qt__Key_Dead_Small_Schwa: number;
	const Qt__Key_Dead_Capital_Schwa: number;
	const Qt__Key_Dead_Greek: number;
	const Qt__Key_Dead_Lowline: number;
	const Qt__Key_Dead_Aboveverticalline: number;
	const Qt__Key_Dead_Belowverticalline: number;
	const Qt__Key_Dead_Longsolidusoverlay: number;
	const Qt__Key_Back: number;
	const Qt__Key_Forward: number;
	const Qt__Key_Stop: number;
	const Qt__Key_Refresh: number;
	const Qt__Key_VolumeDown: number;
	const Qt__Key_VolumeMute: number;
	const Qt__Key_VolumeUp: number;
	const Qt__Key_BassBoost: number;
	const Qt__Key_BassUp: number;
	const Qt__Key_BassDown: number;
	const Qt__Key_TrebleUp: number;
	const Qt__Key_TrebleDown: number;
	const Qt__Key_MediaPlay: number;
	const Qt__Key_MediaStop: number;
	const Qt__Key_MediaPrevious: number;
	const Qt__Key_MediaNext: number;
	const Qt__Key_MediaRecord: number;
	const Qt__Key_MediaPause: number;
	const Qt__Key_MediaTogglePlayPause: number;
	const Qt__Key_HomePage: number;
	const Qt__Key_Favorites: number;
	const Qt__Key_Search: number;
	const Qt__Key_Standby: number;
	const Qt__Key_OpenUrl: number;
	const Qt__Key_LaunchMail: number;
	const Qt__Key_LaunchMedia: number;
	const Qt__Key_Launch0: number;
	const Qt__Key_Launch1: number;
	const Qt__Key_Launch2: number;
	const Qt__Key_Launch3: number;
	const Qt__Key_Launch4: number;
	const Qt__Key_Launch5: number;
	const Qt__Key_Launch6: number;
	const Qt__Key_Launch7: number;
	const Qt__Key_Launch8: number;
	const Qt__Key_Launch9: number;
	const Qt__Key_LaunchA: number;
	const Qt__Key_LaunchB: number;
	const Qt__Key_LaunchC: number;
	const Qt__Key_LaunchD: number;
	const Qt__Key_LaunchE: number;
	const Qt__Key_LaunchF: number;
	const Qt__Key_MonBrightnessUp: number;
	const Qt__Key_MonBrightnessDown: number;
	const Qt__Key_KeyboardLightOnOff: number;
	const Qt__Key_KeyboardBrightnessUp: number;
	const Qt__Key_KeyboardBrightnessDown: number;
	const Qt__Key_PowerOff: number;
	const Qt__Key_WakeUp: number;
	const Qt__Key_Eject: number;
	const Qt__Key_ScreenSaver: number;
	const Qt__Key_WWW: number;
	const Qt__Key_Memo: number;
	const Qt__Key_LightBulb: number;
	const Qt__Key_Shop: number;
	const Qt__Key_History: number;
	const Qt__Key_AddFavorite: number;
	const Qt__Key_HotLinks: number;
	const Qt__Key_BrightnessAdjust: number;
	const Qt__Key_Finance: number;
	const Qt__Key_Community: number;
	const Qt__Key_AudioRewind: number;
	const Qt__Key_BackForward: number;
	const Qt__Key_ApplicationLeft: number;
	const Qt__Key_ApplicationRight: number;
	const Qt__Key_Book: number;
	const Qt__Key_CD: number;
	const Qt__Key_Calculator: number;
	const Qt__Key_ToDoList: number;
	const Qt__Key_ClearGrab: number;
	const Qt__Key_Close: number;
	const Qt__Key_Copy: number;
	const Qt__Key_Cut: number;
	const Qt__Key_Display: number;
	const Qt__Key_DOS: number;
	const Qt__Key_Documents: number;
	const Qt__Key_Excel: number;
	const Qt__Key_Explorer: number;
	const Qt__Key_Game: number;
	const Qt__Key_Go: number;
	const Qt__Key_iTouch: number;
	const Qt__Key_LogOff: number;
	const Qt__Key_Market: number;
	const Qt__Key_Meeting: number;
	const Qt__Key_MenuKB: number;
	const Qt__Key_MenuPB: number;
	const Qt__Key_MySites: number;
	const Qt__Key_News: number;
	const Qt__Key_OfficeHome: number;
	const Qt__Key_Option: number;
	const Qt__Key_Paste: number;
	const Qt__Key_Phone: number;
	const Qt__Key_Calendar: number;
	const Qt__Key_Reply: number;
	const Qt__Key_Reload: number;
	const Qt__Key_RotateWindows: number;
	const Qt__Key_RotationPB: number;
	const Qt__Key_RotationKB: number;
	const Qt__Key_Save: number;
	const Qt__Key_Send: number;
	const Qt__Key_Spell: number;
	const Qt__Key_SplitScreen: number;
	const Qt__Key_Support: number;
	const Qt__Key_TaskPane: number;
	const Qt__Key_Terminal: number;
	const Qt__Key_Tools: number;
	const Qt__Key_Travel: number;
	const Qt__Key_Video: number;
	const Qt__Key_Word: number;
	const Qt__Key_Xfer: number;
	const Qt__Key_ZoomIn: number;
	const Qt__Key_ZoomOut: number;
	const Qt__Key_Away: number;
	const Qt__Key_Messenger: number;
	const Qt__Key_WebCam: number;
	const Qt__Key_MailForward: number;
	const Qt__Key_Pictures: number;
	const Qt__Key_Music: number;
	const Qt__Key_Battery: number;
	const Qt__Key_Bluetooth: number;
	const Qt__Key_WLAN: number;
	const Qt__Key_UWB: number;
	const Qt__Key_AudioForward: number;
	const Qt__Key_AudioRepeat: number;
	const Qt__Key_AudioRandomPlay: number;
	const Qt__Key_Subtitle: number;
	const Qt__Key_AudioCycleTrack: number;
	const Qt__Key_Time: number;
	const Qt__Key_Hibernate: number;
	const Qt__Key_View: number;
	const Qt__Key_TopMenu: number;
	const Qt__Key_PowerDown: number;
	const Qt__Key_Suspend: number;
	const Qt__Key_ContrastAdjust: number;
	const Qt__Key_LaunchG: number;
	const Qt__Key_LaunchH: number;
	const Qt__Key_TouchpadToggle: number;
	const Qt__Key_TouchpadOn: number;
	const Qt__Key_TouchpadOff: number;
	const Qt__Key_MicMute: number;
	const Qt__Key_Red: number;
	const Qt__Key_Green: number;
	const Qt__Key_Yellow: number;
	const Qt__Key_Blue: number;
	const Qt__Key_ChannelUp: number;
	const Qt__Key_ChannelDown: number;
	const Qt__Key_Guide: number;
	const Qt__Key_Info: number;
	const Qt__Key_Settings: number;
	const Qt__Key_MicVolumeUp: number;
	const Qt__Key_MicVolumeDown: number;
	const Qt__Key_New: number;
	const Qt__Key_Open: number;
	const Qt__Key_Find: number;
	const Qt__Key_Undo: number;
	const Qt__Key_Redo: number;
	const Qt__Key_MediaLast: number;
	const Qt__Key_Select: number;
	const Qt__Key_Yes: number;
	const Qt__Key_No: number;
	const Qt__Key_Cancel: number;
	const Qt__Key_Printer: number;
	const Qt__Key_Execute: number;
	const Qt__Key_Sleep: number;
	const Qt__Key_Play: number;
	const Qt__Key_Zoom: number;
	const Qt__Key_Exit: number;
	const Qt__Key_Context1: number;
	const Qt__Key_Context2: number;
	const Qt__Key_Context3: number;
	const Qt__Key_Context4: number;
	const Qt__Key_Call: number;
	const Qt__Key_Hangup: number;
	const Qt__Key_Flip: number;
	const Qt__Key_ToggleCallHangup: number;
	const Qt__Key_VoiceDial: number;
	const Qt__Key_LastNumberRedial: number;
	const Qt__Key_Camera: number;
	const Qt__Key_CameraFocus: number;
	const Qt__Key_unknown: number;
	const Qt__NoArrow: number;
	const Qt__UpArrow: number;
	const Qt__DownArrow: number;
	const Qt__LeftArrow: number;
	const Qt__RightArrow: number;
	const Qt__NoPen: number;
	const Qt__SolidLine: number;
	const Qt__DashLine: number;
	const Qt__DotLine: number;
	const Qt__DashDotLine: number;
	const Qt__DashDotDotLine: number;
	const Qt__CustomDashLine: number;
	const Qt__MPenStyle: number;
	const Qt__FlatCap: number;
	const Qt__SquareCap: number;
	const Qt__RoundCap: number;
	const Qt__MPenCapStyle: number;
	const Qt__MiterJoin: number;
	const Qt__BevelJoin: number;
	const Qt__RoundJoin: number;
	const Qt__SvgMiterJoin: number;
	const Qt__MPenJoinStyle: number;
	const Qt__NoBrush: number;
	const Qt__SolidPattern: number;
	const Qt__Dense1Pattern: number;
	const Qt__Dense2Pattern: number;
	const Qt__Dense3Pattern: number;
	const Qt__Dense4Pattern: number;
	const Qt__Dense5Pattern: number;
	const Qt__Dense6Pattern: number;
	const Qt__Dense7Pattern: number;
	const Qt__HorPattern: number;
	const Qt__VerPattern: number;
	const Qt__CrossPattern: number;
	const Qt__BDiagPattern: number;
	const Qt__FDiagPattern: number;
	const Qt__DiagCrossPattern: number;
	const Qt__LinearGradientPattern: number;
	const Qt__RadialGradientPattern: number;
	const Qt__ConicalGradientPattern: number;
	const Qt__TexturePattern: number;
	const Qt__AbsoluteSize: number;
	const Qt__RelativeSize: number;
	const Qt__UI_General: number;
	const Qt__UI_AnimateMenu: number;
	const Qt__UI_FadeMenu: number;
	const Qt__UI_AnimateCombo: number;
	const Qt__UI_AnimateTooltip: number;
	const Qt__UI_FadeTooltip: number;
	const Qt__UI_AnimateToolBox: number;
	const Qt__ArrowCursor: number;
	const Qt__UpArrowCursor: number;
	const Qt__CrossCursor: number;
	const Qt__WaitCursor: number;
	const Qt__IBeamCursor: number;
	const Qt__SizeVerCursor: number;
	const Qt__SizeHorCursor: number;
	const Qt__SizeBDiagCursor: number;
	const Qt__SizeFDiagCursor: number;
	const Qt__SizeAllCursor: number;
	const Qt__BlankCursor: number;
	const Qt__SplitVCursor: number;
	const Qt__SplitHCursor: number;
	const Qt__PointingHandCursor: number;
	const Qt__ForbiddenCursor: number;
	const Qt__WhatsThisCursor: number;
	const Qt__BusyCursor: number;
	const Qt__OpenHandCursor: number;
	const Qt__ClosedHandCursor: number;
	const Qt__DragCopyCursor: number;
	const Qt__DragMoveCursor: number;
	const Qt__DragLinkCursor: number;
	const Qt__LastCursor: number;
	const Qt__BitmapCursor: number;
	const Qt__CustomCursor: number;
	const Qt__PlainText: number;
	const Qt__RichText: number;
	const Qt__AutoText: number;
	const Qt__IgnoreAspectRatio: number;
	const Qt__KeepAspectRatio: number;
	const Qt__KeepAspectRatioByExpanding: number;
	const Qt__LeftDockWidgetArea: number;
	const Qt__RightDockWidgetArea: number;
	const Qt__TopDockWidgetArea: number;
	const Qt__BottomDockWidgetArea: number;
	const Qt__DockWidgetArea_Mask: number;
	const Qt__AllDockWidgetAreas: number;
	const Qt__NoDockWidgetArea: number;
	const Qt__LeftToolBarArea: number;
	const Qt__RightToolBarArea: number;
	const Qt__TopToolBarArea: number;
	const Qt__BottomToolBarArea: number;
	const Qt__ToolBarArea_Mask: number;
	const Qt__AllToolBarAreas: number;
	const Qt__NoToolBarArea: number;
	const Qt__TextDate: number;
	const Qt__ISODate: number;
	const Qt__SystemLocaleDate: number;
	const Qt__LocalDate: number;
	const Qt__LocaleDate: number;
	const Qt__SystemLocaleShortDate: number;
	const Qt__SystemLocaleLongDate: number;
	const Qt__DefaultLocaleShortDate: number;
	const Qt__DefaultLocaleLongDate: number;
	const Qt__RFC2822Date: number;
	const Qt__ISODateWithMs: number;
	const Qt__LocalTime: number;
	const Qt__UTC: number;
	const Qt__OffsetFromUTC: number;
	const Qt__TimeZone: number;
	const Qt__Monday: number;
	const Qt__Tuesday: number;
	const Qt__Wednesday: number;
	const Qt__Thursday: number;
	const Qt__Friday: number;
	const Qt__Saturday: number;
	const Qt__Sunday: number;
	const Qt__ScrollBarAsNeeded: number;
	const Qt__ScrollBarAlwaysOff: number;
	const Qt__ScrollBarAlwaysOn: number;
	const Qt__CaseInsensitive: number;
	const Qt__CaseSensitive: number;
	const Qt__TopLeftCorner: number;
	const Qt__TopRightCorner: number;
	const Qt__BottomLeftCorner: number;
	const Qt__BottomRightCorner: number;
	const Qt__TopEdge: number;
	const Qt__LeftEdge: number;
	const Qt__RightEdge: number;
	const Qt__BottomEdge: number;
	const Qt__WidgetShortcut: number;
	const Qt__WindowShortcut: number;
	const Qt__ApplicationShortcut: number;
	const Qt__WidgetWithChildrenShortcut: number;
	const Qt__AutoConnection: number;
	const Qt__DirectConnection: number;
	const Qt__QueuedConnection: number;
	const Qt__BlockingQueuedConnection: number;
	const Qt__UniqueConnection: number;
	const Qt__OddEvenFill: number;
	const Qt__WindingFill: number;
	const Qt__MaskInColor: number;
	const Qt__MaskOutColor: number;
	const Qt__NoClip: number;
	const Qt__ReplaceClip: number;
	const Qt__IntersectClip: number;
	const Qt__ContainsItemShape: number;
	const Qt__IntersectsItemShape: number;
	const Qt__ContainsItemBoundingRect: number;
	const Qt__IntersectsItemBoundingRect: number;
	const Qt__ReplaceSelection: number;
	const Qt__AddToSelection: number;
	const Qt__FastTransformation: number;
	const Qt__SmoothTransformation: number;
	const Qt__XAxis: number;
	const Qt__YAxis: number;
	const Qt__ZAxis: number;
	const Qt__MouseFocusReason: number;
	const Qt__TabFocusReason: number;
	const Qt__BacktabFocusReason: number;
	const Qt__ActiveWindowFocusReason: number;
	const Qt__PopupFocusReason: number;
	const Qt__ShortcutFocusReason: number;
	const Qt__MenuBarFocusReason: number;
	const Qt__OtherFocusReason: number;
	const Qt__NoFocusReason: number;
	const Qt__NoContextMenu: number;
	const Qt__DefaultContextMenu: number;
	const Qt__ActionsContextMenu: number;
	const Qt__CustomContextMenu: number;
	const Qt__PreventContextMenu: number;
	const Qt__ImEnabled: number;
	const Qt__ImCursorRectangle: number;
	const Qt__ImMicroFocus: number;
	const Qt__ImFont: number;
	const Qt__ImCursorPosition: number;
	const Qt__ImSurroundingText: number;
	const Qt__ImCurrentSelection: number;
	const Qt__ImMaximumTextLength: number;
	const Qt__ImAnchorPosition: number;
	const Qt__ImHints: number;
	const Qt__ImPreferredLanguage: number;
	const Qt__ImAbsolutePosition: number;
	const Qt__ImTextBeforeCursor: number;
	const Qt__ImTextAfterCursor: number;
	const Qt__ImEnterKeyType: number;
	const Qt__ImAnchorRectangle: number;
	const Qt__ImInputItemClipRectangle: number;
	const Qt__ImPlatformData: number;
	const Qt__ImQueryAll: number;
	const Qt__ImhNone: number;
	const Qt__ImhHiddenText: number;
	const Qt__ImhSensitiveData: number;
	const Qt__ImhNoAutoUppercase: number;
	const Qt__ImhPreferNumbers: number;
	const Qt__ImhPreferUppercase: number;
	const Qt__ImhPreferLowercase: number;
	const Qt__ImhNoPredictiveText: number;
	const Qt__ImhDate: number;
	const Qt__ImhTime: number;
	const Qt__ImhPreferLatin: number;
	const Qt__ImhMultiLine: number;
	const Qt__ImhNoEditMenu: number;
	const Qt__ImhNoTextHandles: number;
	const Qt__ImhDigitsOnly: number;
	const Qt__ImhFormattedNumbersOnly: number;
	const Qt__ImhUppercaseOnly: number;
	const Qt__ImhLowercaseOnly: number;
	const Qt__ImhDialableCharactersOnly: number;
	const Qt__ImhEmailCharactersOnly: number;
	const Qt__ImhUrlCharactersOnly: number;
	const Qt__ImhLatinOnly: number;
	const Qt__ImhExclusiveInputMask: number;
	const Qt__EnterKeyDefault: number;
	const Qt__EnterKeyReturn: number;
	const Qt__EnterKeyDone: number;
	const Qt__EnterKeyGo: number;
	const Qt__EnterKeySend: number;
	const Qt__EnterKeySearch: number;
	const Qt__EnterKeyNext: number;
	const Qt__EnterKeyPrevious: number;
	const Qt__ToolButtonIconOnly: number;
	const Qt__ToolButtonTextOnly: number;
	const Qt__ToolButtonTextBesideIcon: number;
	const Qt__ToolButtonTextUnderIcon: number;
	const Qt__ToolButtonFollowStyle: number;
	const Qt__LeftToRight: number;
	const Qt__RightToLeft: number;
	const Qt__LayoutDirectionAuto: number;
	const Qt__AnchorLeft: number;
	const Qt__AnchorHorizontalCenter: number;
	const Qt__AnchorRight: number;
	const Qt__AnchorTop: number;
	const Qt__AnchorVerticalCenter: number;
	const Qt__AnchorBottom: number;
	const Qt__FindDirectChildrenOnly: number;
	const Qt__FindChildrenRecursively: number;
	const Qt__CopyAction: number;
	const Qt__MoveAction: number;
	const Qt__LinkAction: number;
	const Qt__ActionMask: number;
	const Qt__TargetMoveAction: number;
	const Qt__IgnoreAction: number;
	const Qt__Unchecked: number;
	const Qt__PartiallyChecked: number;
	const Qt__Checked: number;
	const Qt__DisplayRole: number;
	const Qt__DecorationRole: number;
	const Qt__EditRole: number;
	const Qt__ToolTipRole: number;
	const Qt__StatusTipRole: number;
	const Qt__WhatsThisRole: number;
	const Qt__FontRole: number;
	const Qt__TextAlignmentRole: number;
	const Qt__BackgroundRole: number;
	const Qt__ForegroundRole: number;
	const Qt__BackgroundColorRole: number;
	const Qt__TextColorRole: number;
	const Qt__CheckStateRole: number;
	const Qt__AccessibleTextRole: number;
	const Qt__AccessibleDescriptionRole: number;
	const Qt__SizeHintRole: number;
	const Qt__InitialSortOrderRole: number;
	const Qt__DisplayPropertyRole: number;
	const Qt__DecorationPropertyRole: number;
	const Qt__ToolTipPropertyRole: number;
	const Qt__StatusTipPropertyRole: number;
	const Qt__WhatsThisPropertyRole: number;
	const Qt__UserRole: number;
	const Qt__NoItemFlags: number;
	const Qt__ItemIsSelectable: number;
	const Qt__ItemIsEditable: number;
	const Qt__ItemIsDragEnabled: number;
	const Qt__ItemIsDropEnabled: number;
	const Qt__ItemIsUserCheckable: number;
	const Qt__ItemIsEnabled: number;
	const Qt__ItemIsAutoTristate: number;
	const Qt__ItemIsTristate: number;
	const Qt__ItemNeverHasChildren: number;
	const Qt__ItemIsUserTristate: number;
	const Qt__MatchExactly: number;
	const Qt__MatchContains: number;
	const Qt__MatchStartsWith: number;
	const Qt__MatchEndsWith: number;
	const Qt__MatchRegExp: number;
	const Qt__MatchWildcard: number;
	const Qt__MatchFixedString: number;
	const Qt__MatchCaseSensitive: number;
	const Qt__MatchWrap: number;
	const Qt__MatchRecursive: number;
	const Qt__NonModal: number;
	const Qt__WindowModal: number;
	const Qt__ApplicationModal: number;
	const Qt__NoTextInteraction: number;
	const Qt__TextSelectableByMouse: number;
	const Qt__TextSelectableByKeyboard: number;
	const Qt__LinksAccessibleByMouse: number;
	const Qt__LinksAccessibleByKeyboard: number;
	const Qt__TextEditable: number;
	const Qt__TextEditorInteraction: number;
	const Qt__TextBrowserInteraction: number;
	const Qt__HighEventPriority: number;
	const Qt__NormalEventPriority: number;
	const Qt__LowEventPriority: number;
	const Qt__MinimumSize: number;
	const Qt__PreferredSize: number;
	const Qt__MaximumSize: number;
	const Qt__MinimumDescent: number;
	const Qt__NSizeHints: number;
	const Qt__NoSection: number;
	const Qt__LeftSection: number;
	const Qt__TopLeftSection: number;
	const Qt__TopSection: number;
	const Qt__TopRightSection: number;
	const Qt__RightSection: number;
	const Qt__BottomRightSection: number;
	const Qt__BottomSection: number;
	const Qt__BottomLeftSection: number;
	const Qt__TitleBarArea: number;
	const Qt__DeviceCoordinates: number;
	const Qt__LogicalCoordinates: number;
	const Qt__TouchPointPressed: number;
	const Qt__TouchPointMoved: number;
	const Qt__TouchPointStationary: number;
	const Qt__TouchPointReleased: number;
	const Qt__NoGesture: number;
	const Qt__GestureStarted: number;
	const Qt__GestureUpdated: number;
	const Qt__GestureFinished: number;
	const Qt__GestureCanceled: number;
	const Qt__TapGesture: number;
	const Qt__TapAndHoldGesture: number;
	const Qt__PanGesture: number;
	const Qt__PinchGesture: number;
	const Qt__SwipeGesture: number;
	const Qt__CustomGesture: number;
	const Qt__LastGestureType: number;
	const Qt__DontStartGestureOnChildren: number;
	const Qt__ReceivePartialGestures: number;
	const Qt__IgnoredGesturesPropagateToParent: number;
	const Qt__BeginNativeGesture: number;
	const Qt__EndNativeGesture: number;
	const Qt__PanNativeGesture: number;
	const Qt__ZoomNativeGesture: number;
	const Qt__SmartZoomNativeGesture: number;
	const Qt__RotateNativeGesture: number;
	const Qt__SwipeNativeGesture: number;
	const Qt__NavigationModeNone: number;
	const Qt__NavigationModeKeypadTabOrder: number;
	const Qt__NavigationModeKeypadDirectional: number;
	const Qt__NavigationModeCursorAuto: number;
	const Qt__NavigationModeCursorForceVisible: number;
	const Qt__LogicalMoveStyle: number;
	const Qt__VisualMoveStyle: number;
	const Qt__PreciseTimer: number;
	const Qt__CoarseTimer: number;
	const Qt__VeryCoarseTimer: number;
	const Qt__NoScrollPhase: number;
	const Qt__ScrollBegin: number;
	const Qt__ScrollUpdate: number;
	const Qt__ScrollEnd: number;
	const Qt__ScrollMomentum: number;
	const Qt__MouseEventNotSynthesized: number;
	const Qt__MouseEventSynthesizedBySystem: number;
	const Qt__MouseEventSynthesizedByQt: number;
	const Qt__MouseEventSynthesizedByApplication: number;
	const Qt__MouseEventCreatedDoubleClick: number;
	const Qt__MouseEventFlagMask: number;
	const Qt__ChecksumIso3309: number;
	const Qt__ChecksumItuV41: number;
}
/// <reference path="core.d.ts" />
/// <reference path="gui.d.ts" />
declare namespace datavisualization {
	interface Q3DBars_ITF {
		Q3DBars_PTR():Q3DBars;
	}

	class Q3DBars {
		___pointer: number;
		Q3DBars_PTR():Q3DBars;
		Pointer():number;
		SetPointer(p:number):void;
		AddAxis(axis:QAbstract3DAxis_ITF):void;
		AddSeries(series:QBar3DSeries_ITF):void;
		Axes():QAbstract3DAxis[];
		BarSpacing():core.QSizeF;
		ConnectBarSpacingChanged(f:(spacing:core.QSizeF)=>void):void;
		DisconnectBarSpacingChanged():void;
		BarSpacingChanged(spacing:core.QSizeF_ITF):void;
		ConnectBarSpacingRelativeChanged(f:(relative:boolean)=>void):void;
		DisconnectBarSpacingRelativeChanged():void;
		BarSpacingRelativeChanged(relative:boolean):void;
		BarThickness():number;
		ConnectBarThicknessChanged(f:(thicknessRatio:number)=>void):void;
		DisconnectBarThicknessChanged():void;
		BarThicknessChanged(thicknessRatio:number):void;
		ColumnAxis():QCategory3DAxis;
		ConnectColumnAxisChanged(f:(axis:QCategory3DAxis)=>void):void;
		DisconnectColumnAxisChanged():void;
		ColumnAxisChanged(axis:QCategory3DAxis_ITF):void;
		FloorLevel():number;
		ConnectFloorLevelChanged(f:(level:number)=>void):void;
		DisconnectFloorLevelChanged():void;
		FloorLevelChanged(level:number):void;
		InsertSeries(index:number,series:QBar3DSeries_ITF):void;
		IsBarSpacingRelative():boolean;
		IsMultiSeriesUniform():boolean;
		ConnectMultiSeriesUniformChanged(f:(uniform:boolean)=>void):void;
		DisconnectMultiSeriesUniformChanged():void;
		MultiSeriesUniformChanged(uniform:boolean):void;
		PrimarySeries():QBar3DSeries;
		ConnectPrimarySeriesChanged(f:(series:QBar3DSeries)=>void):void;
		DisconnectPrimarySeriesChanged():void;
		PrimarySeriesChanged(series:QBar3DSeries_ITF):void;
		ReleaseAxis(axis:QAbstract3DAxis_ITF):void;
		RemoveSeries(series:QBar3DSeries_ITF):void;
		RowAxis():QCategory3DAxis;
		ConnectRowAxisChanged(f:(axis:QCategory3DAxis)=>void):void;
		DisconnectRowAxisChanged():void;
		RowAxisChanged(axis:QCategory3DAxis_ITF):void;
		SelectedSeries():QBar3DSeries;
		ConnectSelectedSeriesChanged(f:(series:QBar3DSeries)=>void):void;
		DisconnectSelectedSeriesChanged():void;
		SelectedSeriesChanged(series:QBar3DSeries_ITF):void;
		SeriesList():QBar3DSeries[];
		SetBarSpacing(spacing:core.QSizeF_ITF):void;
		SetBarSpacingRelative(relative:boolean):void;
		SetBarThickness(thicknessRatio:number):void;
		SetColumnAxis(axis:QCategory3DAxis_ITF):void;
		SetFloorLevel(level:number):void;
		SetMultiSeriesUniform(uniform:boolean):void;
		SetPrimarySeries(series:QBar3DSeries_ITF):void;
		SetRowAxis(axis:QCategory3DAxis_ITF):void;
		SetValueAxis(axis:QValue3DAxis_ITF):void;
		ValueAxis():QValue3DAxis;
		ConnectValueAxisChanged(f:(axis:QValue3DAxis)=>void):void;
		DisconnectValueAxisChanged():void;
		ValueAxisChanged(axis:QValue3DAxis_ITF):void;
		ConnectDestroyQ3DBars(f:()=>void):void;
		DisconnectDestroyQ3DBars():void;
		DestroyQ3DBars():void;
		DestroyQ3DBarsDefault():void;
	}
	function NewQ3DBarsFromPointer(ptr:number):Q3DBars;
	function NewQ3DBars(format:gui.QSurfaceFormat_ITF,parent:gui.QWindow_ITF):Q3DBars;
	interface Q3DCamera_ITF {
		Q3DCamera_PTR():Q3DCamera;
	}

	class Q3DCamera {
		___pointer: number;
		Q3DCamera_PTR():Q3DCamera;
		Pointer():number;
		SetPointer(p:number):void;
		CameraPreset():number;
		ConnectCameraPresetChanged(f:(preset:number)=>void):void;
		DisconnectCameraPresetChanged():void;
		CameraPresetChanged(preset:number):void;
		ConnectCopyValuesFrom(f:(source:Q3DObject)=>void):void;
		DisconnectCopyValuesFrom():void;
		CopyValuesFrom(source:Q3DObject_ITF):void;
		CopyValuesFromDefault(source:Q3DObject_ITF):void;
		MaxZoomLevel():number;
		ConnectMaxZoomLevelChanged(f:(zoomLevel:number)=>void):void;
		DisconnectMaxZoomLevelChanged():void;
		MaxZoomLevelChanged(zoomLevel:number):void;
		MinZoomLevel():number;
		ConnectMinZoomLevelChanged(f:(zoomLevel:number)=>void):void;
		DisconnectMinZoomLevelChanged():void;
		MinZoomLevelChanged(zoomLevel:number):void;
		SetCameraPosition(horizontal:number,vertical:number,zoom:number):void;
		SetCameraPreset(preset:number):void;
		SetMaxZoomLevel(zoomLevel:number):void;
		SetMinZoomLevel(zoomLevel:number):void;
		SetTarget(target:gui.QVector3D_ITF):void;
		SetWrapXRotation(isEnabled:boolean):void;
		SetWrapYRotation(isEnabled:boolean):void;
		SetXRotation(rotation:number):void;
		SetYRotation(rotation:number):void;
		SetZoomLevel(zoomLevel:number):void;
		Target():gui.QVector3D;
		ConnectTargetChanged(f:(target:gui.QVector3D)=>void):void;
		DisconnectTargetChanged():void;
		TargetChanged(target:gui.QVector3D_ITF):void;
		WrapXRotation():boolean;
		ConnectWrapXRotationChanged(f:(isEnabled:boolean)=>void):void;
		DisconnectWrapXRotationChanged():void;
		WrapXRotationChanged(isEnabled:boolean):void;
		WrapYRotation():boolean;
		ConnectWrapYRotationChanged(f:(isEnabled:boolean)=>void):void;
		DisconnectWrapYRotationChanged():void;
		WrapYRotationChanged(isEnabled:boolean):void;
		XRotation():number;
		ConnectXRotationChanged(f:(rotation:number)=>void):void;
		DisconnectXRotationChanged():void;
		XRotationChanged(rotation:number):void;
		YRotation():number;
		ConnectYRotationChanged(f:(rotation:number)=>void):void;
		DisconnectYRotationChanged():void;
		YRotationChanged(rotation:number):void;
		ZoomLevel():number;
		ConnectZoomLevelChanged(f:(zoomLevel:number)=>void):void;
		DisconnectZoomLevelChanged():void;
		ZoomLevelChanged(zoomLevel:number):void;
		ConnectDestroyQ3DCamera(f:()=>void):void;
		DisconnectDestroyQ3DCamera():void;
		DestroyQ3DCamera():void;
		DestroyQ3DCameraDefault():void;
	}
	function NewQ3DCameraFromPointer(ptr:number):Q3DCamera;
	function NewQ3DCamera(parent:core.QObject_ITF):Q3DCamera;
	const Q3DCamera__CameraPresetNone: number;
	const Q3DCamera__CameraPresetFrontLow: number;
	const Q3DCamera__CameraPresetFront: number;
	const Q3DCamera__CameraPresetFrontHigh: number;
	const Q3DCamera__CameraPresetLeftLow: number;
	const Q3DCamera__CameraPresetLeft: number;
	const Q3DCamera__CameraPresetLeftHigh: number;
	const Q3DCamera__CameraPresetRightLow: number;
	const Q3DCamera__CameraPresetRight: number;
	const Q3DCamera__CameraPresetRightHigh: number;
	const Q3DCamera__CameraPresetBehindLow: number;
	const Q3DCamera__CameraPresetBehind: number;
	const Q3DCamera__CameraPresetBehindHigh: number;
	const Q3DCamera__CameraPresetIsometricLeft: number;
	const Q3DCamera__CameraPresetIsometricLeftHigh: number;
	const Q3DCamera__CameraPresetIsometricRight: number;
	const Q3DCamera__CameraPresetIsometricRightHigh: number;
	const Q3DCamera__CameraPresetDirectlyAbove: number;
	const Q3DCamera__CameraPresetDirectlyAboveCW45: number;
	const Q3DCamera__CameraPresetDirectlyAboveCCW45: number;
	const Q3DCamera__CameraPresetFrontBelow: number;
	const Q3DCamera__CameraPresetLeftBelow: number;
	const Q3DCamera__CameraPresetRightBelow: number;
	const Q3DCamera__CameraPresetBehindBelow: number;
	const Q3DCamera__CameraPresetDirectlyBelow: number;
	interface Q3DInputHandler_ITF {
		Q3DInputHandler_PTR():Q3DInputHandler;
	}

	class Q3DInputHandler {
		___pointer: number;
		Q3DInputHandler_PTR():Q3DInputHandler;
		Pointer():number;
		SetPointer(p:number):void;
		IsRotationEnabled():boolean;
		IsSelectionEnabled():boolean;
		IsZoomAtTargetEnabled():boolean;
		IsZoomEnabled():boolean;
		ConnectMouseMoveEvent(f:(event:gui.QMouseEvent,mousePos:core.QPoint)=>void):void;
		DisconnectMouseMoveEvent():void;
		MouseMoveEvent(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		MouseMoveEventDefault(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		ConnectMousePressEvent(f:(event:gui.QMouseEvent,mousePos:core.QPoint)=>void):void;
		DisconnectMousePressEvent():void;
		MousePressEvent(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		MousePressEventDefault(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		ConnectMouseReleaseEvent(f:(event:gui.QMouseEvent,mousePos:core.QPoint)=>void):void;
		DisconnectMouseReleaseEvent():void;
		MouseReleaseEvent(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		MouseReleaseEventDefault(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		ConnectRotationEnabledChanged(f:(enable:boolean)=>void):void;
		DisconnectRotationEnabledChanged():void;
		RotationEnabledChanged(enable:boolean):void;
		ConnectSelectionEnabledChanged(f:(enable:boolean)=>void):void;
		DisconnectSelectionEnabledChanged():void;
		SelectionEnabledChanged(enable:boolean):void;
		SetRotationEnabled(enable:boolean):void;
		SetSelectionEnabled(enable:boolean):void;
		SetZoomAtTargetEnabled(enable:boolean):void;
		SetZoomEnabled(enable:boolean):void;
		ConnectWheelEvent(f:(event:gui.QWheelEvent)=>void):void;
		DisconnectWheelEvent():void;
		WheelEvent(event:gui.QWheelEvent_ITF):void;
		WheelEventDefault(event:gui.QWheelEvent_ITF):void;
		ConnectZoomAtTargetEnabledChanged(f:(enable:boolean)=>void):void;
		DisconnectZoomAtTargetEnabledChanged():void;
		ZoomAtTargetEnabledChanged(enable:boolean):void;
		ConnectZoomEnabledChanged(f:(enable:boolean)=>void):void;
		DisconnectZoomEnabledChanged():void;
		ZoomEnabledChanged(enable:boolean):void;
		ConnectDestroyQ3DInputHandler(f:()=>void):void;
		DisconnectDestroyQ3DInputHandler():void;
		DestroyQ3DInputHandler():void;
		DestroyQ3DInputHandlerDefault():void;
	}
	function NewQ3DInputHandlerFromPointer(ptr:number):Q3DInputHandler;
	function NewQ3DInputHandler(parent:core.QObject_ITF):Q3DInputHandler;
	interface Q3DLight_ITF {
		Q3DLight_PTR():Q3DLight;
	}

	class Q3DLight {
		___pointer: number;
		Q3DLight_PTR():Q3DLight;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectAutoPositionChanged(f:(autoPosition:boolean)=>void):void;
		DisconnectAutoPositionChanged():void;
		AutoPositionChanged(autoPosition:boolean):void;
		IsAutoPosition():boolean;
		SetAutoPosition(enabled:boolean):void;
		ConnectDestroyQ3DLight(f:()=>void):void;
		DisconnectDestroyQ3DLight():void;
		DestroyQ3DLight():void;
		DestroyQ3DLightDefault():void;
	}
	function NewQ3DLightFromPointer(ptr:number):Q3DLight;
	function NewQ3DLight(parent:core.QObject_ITF):Q3DLight;
	interface Q3DObject_ITF {
		Q3DObject_PTR():Q3DObject;
	}

	class Q3DObject {
		___pointer: number;
		Q3DObject_PTR():Q3DObject;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectCopyValuesFrom(f:(source:Q3DObject)=>void):void;
		DisconnectCopyValuesFrom():void;
		CopyValuesFrom(source:Q3DObject_ITF):void;
		CopyValuesFromDefault(source:Q3DObject_ITF):void;
		IsDirty():boolean;
		ParentScene():Q3DScene;
		Position():gui.QVector3D;
		ConnectPositionChanged(f:(position:gui.QVector3D)=>void):void;
		DisconnectPositionChanged():void;
		PositionChanged(position:gui.QVector3D_ITF):void;
		SetDirty(dirty:boolean):void;
		SetPosition(position:gui.QVector3D_ITF):void;
		ConnectDestroyQ3DObject(f:()=>void):void;
		DisconnectDestroyQ3DObject():void;
		DestroyQ3DObject():void;
		DestroyQ3DObjectDefault():void;
	}
	function NewQ3DObjectFromPointer(ptr:number):Q3DObject;
	function NewQ3DObject(parent:core.QObject_ITF):Q3DObject;
	interface Q3DScatter_ITF {
		Q3DScatter_PTR():Q3DScatter;
	}

	class Q3DScatter {
		___pointer: number;
		Q3DScatter_PTR():Q3DScatter;
		Pointer():number;
		SetPointer(p:number):void;
		AddAxis(axis:QValue3DAxis_ITF):void;
		AddSeries(series:QScatter3DSeries_ITF):void;
		Axes():QValue3DAxis[];
		AxisX():QValue3DAxis;
		ConnectAxisXChanged(f:(axis:QValue3DAxis)=>void):void;
		DisconnectAxisXChanged():void;
		AxisXChanged(axis:QValue3DAxis_ITF):void;
		AxisY():QValue3DAxis;
		ConnectAxisYChanged(f:(axis:QValue3DAxis)=>void):void;
		DisconnectAxisYChanged():void;
		AxisYChanged(axis:QValue3DAxis_ITF):void;
		AxisZ():QValue3DAxis;
		ConnectAxisZChanged(f:(axis:QValue3DAxis)=>void):void;
		DisconnectAxisZChanged():void;
		AxisZChanged(axis:QValue3DAxis_ITF):void;
		ReleaseAxis(axis:QValue3DAxis_ITF):void;
		RemoveSeries(series:QScatter3DSeries_ITF):void;
		SelectedSeries():QScatter3DSeries;
		ConnectSelectedSeriesChanged(f:(series:QScatter3DSeries)=>void):void;
		DisconnectSelectedSeriesChanged():void;
		SelectedSeriesChanged(series:QScatter3DSeries_ITF):void;
		SeriesList():QScatter3DSeries[];
		SetAxisX(axis:QValue3DAxis_ITF):void;
		SetAxisY(axis:QValue3DAxis_ITF):void;
		SetAxisZ(axis:QValue3DAxis_ITF):void;
		ConnectDestroyQ3DScatter(f:()=>void):void;
		DisconnectDestroyQ3DScatter():void;
		DestroyQ3DScatter():void;
		DestroyQ3DScatterDefault():void;
	}
	function NewQ3DScatterFromPointer(ptr:number):Q3DScatter;
	function NewQ3DScatter(format:gui.QSurfaceFormat_ITF,parent:gui.QWindow_ITF):Q3DScatter;
	interface Q3DScene_ITF {
		Q3DScene_PTR():Q3DScene;
	}

	class Q3DScene {
		___pointer: number;
		Q3DScene_PTR():Q3DScene;
		Pointer():number;
		SetPointer(p:number):void;
		ActiveCamera():Q3DCamera;
		ConnectActiveCameraChanged(f:(camera:Q3DCamera)=>void):void;
		DisconnectActiveCameraChanged():void;
		ActiveCameraChanged(camera:Q3DCamera_ITF):void;
		ActiveLight():Q3DLight;
		ConnectActiveLightChanged(f:(light:Q3DLight)=>void):void;
		DisconnectActiveLightChanged():void;
		ActiveLightChanged(light:Q3DLight_ITF):void;
		DevicePixelRatio():number;
		ConnectDevicePixelRatioChanged(f:(pixelRatio:number)=>void):void;
		DisconnectDevicePixelRatioChanged():void;
		DevicePixelRatioChanged(pixelRatio:number):void;
		GraphPositionQuery():core.QPoint;
		ConnectGraphPositionQueryChanged(f:(position:core.QPoint)=>void):void;
		DisconnectGraphPositionQueryChanged():void;
		GraphPositionQueryChanged(position:core.QPoint_ITF):void;
		InvalidSelectionPoint():core.QPoint;
		IsPointInPrimarySubView(point:core.QPoint_ITF):boolean;
		IsPointInSecondarySubView(point:core.QPoint_ITF):boolean;
		IsSecondarySubviewOnTop():boolean;
		IsSlicingActive():boolean;
		PrimarySubViewport():core.QRect;
		ConnectPrimarySubViewportChanged(f:(subViewport:core.QRect)=>void):void;
		DisconnectPrimarySubViewportChanged():void;
		PrimarySubViewportChanged(subViewport:core.QRect_ITF):void;
		SecondarySubViewport():core.QRect;
		ConnectSecondarySubViewportChanged(f:(subViewport:core.QRect)=>void):void;
		DisconnectSecondarySubViewportChanged():void;
		SecondarySubViewportChanged(subViewport:core.QRect_ITF):void;
		ConnectSecondarySubviewOnTopChanged(f:(isSecondaryOnTop:boolean)=>void):void;
		DisconnectSecondarySubviewOnTopChanged():void;
		SecondarySubviewOnTopChanged(isSecondaryOnTop:boolean):void;
		SelectionQueryPosition():core.QPoint;
		ConnectSelectionQueryPositionChanged(f:(position:core.QPoint)=>void):void;
		DisconnectSelectionQueryPositionChanged():void;
		SelectionQueryPositionChanged(position:core.QPoint_ITF):void;
		SetActiveCamera(camera:Q3DCamera_ITF):void;
		SetActiveLight(light:Q3DLight_ITF):void;
		SetDevicePixelRatio(pixelRatio:number):void;
		SetGraphPositionQuery(point:core.QPoint_ITF):void;
		SetPrimarySubViewport(primarySubViewport:core.QRect_ITF):void;
		SetSecondarySubViewport(secondarySubViewport:core.QRect_ITF):void;
		SetSecondarySubviewOnTop(isSecondaryOnTop:boolean):void;
		SetSelectionQueryPosition(point:core.QPoint_ITF):void;
		SetSlicingActive(isSlicing:boolean):void;
		ConnectSlicingActiveChanged(f:(isSlicingActive:boolean)=>void):void;
		DisconnectSlicingActiveChanged():void;
		SlicingActiveChanged(isSlicingActive:boolean):void;
		Viewport():core.QRect;
		ConnectViewportChanged(f:(viewport:core.QRect)=>void):void;
		DisconnectViewportChanged():void;
		ViewportChanged(viewport:core.QRect_ITF):void;
		ConnectDestroyQ3DScene(f:()=>void):void;
		DisconnectDestroyQ3DScene():void;
		DestroyQ3DScene():void;
		DestroyQ3DSceneDefault():void;
	}
	function NewQ3DSceneFromPointer(ptr:number):Q3DScene;
	function NewQ3DScene(parent:core.QObject_ITF):Q3DScene;
	function Q3DScene_InvalidSelectionPoint():core.QPoint;
	interface Q3DSurface_ITF {
		Q3DSurface_PTR():Q3DSurface;
	}

	class Q3DSurface {
		___pointer: number;
		Q3DSurface_PTR():Q3DSurface;
		Pointer():number;
		SetPointer(p:number):void;
		AddAxis(axis:QValue3DAxis_ITF):void;
		AddSeries(series:QSurface3DSeries_ITF):void;
		Axes():QValue3DAxis[];
		AxisX():QValue3DAxis;
		ConnectAxisXChanged(f:(axis:QValue3DAxis)=>void):void;
		DisconnectAxisXChanged():void;
		AxisXChanged(axis:QValue3DAxis_ITF):void;
		AxisY():QValue3DAxis;
		ConnectAxisYChanged(f:(axis:QValue3DAxis)=>void):void;
		DisconnectAxisYChanged():void;
		AxisYChanged(axis:QValue3DAxis_ITF):void;
		AxisZ():QValue3DAxis;
		ConnectAxisZChanged(f:(axis:QValue3DAxis)=>void):void;
		DisconnectAxisZChanged():void;
		AxisZChanged(axis:QValue3DAxis_ITF):void;
		FlipHorizontalGrid():boolean;
		ConnectFlipHorizontalGridChanged(f:(flip:boolean)=>void):void;
		DisconnectFlipHorizontalGridChanged():void;
		FlipHorizontalGridChanged(flip:boolean):void;
		ReleaseAxis(axis:QValue3DAxis_ITF):void;
		RemoveSeries(series:QSurface3DSeries_ITF):void;
		SelectedSeries():QSurface3DSeries;
		ConnectSelectedSeriesChanged(f:(series:QSurface3DSeries)=>void):void;
		DisconnectSelectedSeriesChanged():void;
		SelectedSeriesChanged(series:QSurface3DSeries_ITF):void;
		SeriesList():QSurface3DSeries[];
		SetAxisX(axis:QValue3DAxis_ITF):void;
		SetAxisY(axis:QValue3DAxis_ITF):void;
		SetAxisZ(axis:QValue3DAxis_ITF):void;
		SetFlipHorizontalGrid(flip:boolean):void;
		ConnectDestroyQ3DSurface(f:()=>void):void;
		DisconnectDestroyQ3DSurface():void;
		DestroyQ3DSurface():void;
		DestroyQ3DSurfaceDefault():void;
	}
	function NewQ3DSurfaceFromPointer(ptr:number):Q3DSurface;
	function NewQ3DSurface(format:gui.QSurfaceFormat_ITF,parent:gui.QWindow_ITF):Q3DSurface;
	interface Q3DTheme_ITF {
		Q3DTheme_PTR():Q3DTheme;
	}

	class Q3DTheme {
		___pointer: number;
		Q3DTheme_PTR():Q3DTheme;
		Pointer():number;
		SetPointer(p:number):void;
		AmbientLightStrength():number;
		ConnectAmbientLightStrengthChanged(f:(strength:number)=>void):void;
		DisconnectAmbientLightStrengthChanged():void;
		AmbientLightStrengthChanged(strength:number):void;
		BackgroundColor():gui.QColor;
		ConnectBackgroundColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectBackgroundColorChanged():void;
		BackgroundColorChanged(color:gui.QColor_ITF):void;
		ConnectBackgroundEnabledChanged(f:(enabled:boolean)=>void):void;
		DisconnectBackgroundEnabledChanged():void;
		BackgroundEnabledChanged(enabled:boolean):void;
		BaseColors():gui.QColor[];
		ConnectBaseColorsChanged(f:(colors:gui.QColor[])=>void):void;
		DisconnectBaseColorsChanged():void;
		BaseColorsChanged(colors:gui.QColor[]):void;
		BaseGradients():gui.QLinearGradient[];
		ConnectBaseGradientsChanged(f:(gradients:gui.QLinearGradient[])=>void):void;
		DisconnectBaseGradientsChanged():void;
		BaseGradientsChanged(gradients:gui.QLinearGradient[]):void;
		ColorStyle():number;
		ConnectColorStyleChanged(f:(style:number)=>void):void;
		DisconnectColorStyleChanged():void;
		ColorStyleChanged(style:number):void;
		Font():gui.QFont;
		ConnectFontChanged(f:(font:gui.QFont)=>void):void;
		DisconnectFontChanged():void;
		FontChanged(font:gui.QFont_ITF):void;
		ConnectGridEnabledChanged(f:(enabled:boolean)=>void):void;
		DisconnectGridEnabledChanged():void;
		GridEnabledChanged(enabled:boolean):void;
		GridLineColor():gui.QColor;
		ConnectGridLineColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectGridLineColorChanged():void;
		GridLineColorChanged(color:gui.QColor_ITF):void;
		HighlightLightStrength():number;
		ConnectHighlightLightStrengthChanged(f:(strength:number)=>void):void;
		DisconnectHighlightLightStrengthChanged():void;
		HighlightLightStrengthChanged(strength:number):void;
		IsBackgroundEnabled():boolean;
		IsGridEnabled():boolean;
		IsLabelBackgroundEnabled():boolean;
		IsLabelBorderEnabled():boolean;
		LabelBackgroundColor():gui.QColor;
		ConnectLabelBackgroundColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectLabelBackgroundColorChanged():void;
		LabelBackgroundColorChanged(color:gui.QColor_ITF):void;
		ConnectLabelBackgroundEnabledChanged(f:(enabled:boolean)=>void):void;
		DisconnectLabelBackgroundEnabledChanged():void;
		LabelBackgroundEnabledChanged(enabled:boolean):void;
		ConnectLabelBorderEnabledChanged(f:(enabled:boolean)=>void):void;
		DisconnectLabelBorderEnabledChanged():void;
		LabelBorderEnabledChanged(enabled:boolean):void;
		LabelTextColor():gui.QColor;
		ConnectLabelTextColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectLabelTextColorChanged():void;
		LabelTextColorChanged(color:gui.QColor_ITF):void;
		LightColor():gui.QColor;
		ConnectLightColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectLightColorChanged():void;
		LightColorChanged(color:gui.QColor_ITF):void;
		LightStrength():number;
		ConnectLightStrengthChanged(f:(strength:number)=>void):void;
		DisconnectLightStrengthChanged():void;
		LightStrengthChanged(strength:number):void;
		MultiHighlightColor():gui.QColor;
		ConnectMultiHighlightColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectMultiHighlightColorChanged():void;
		MultiHighlightColorChanged(color:gui.QColor_ITF):void;
		MultiHighlightGradient():gui.QLinearGradient;
		ConnectMultiHighlightGradientChanged(f:(gradient:gui.QLinearGradient)=>void):void;
		DisconnectMultiHighlightGradientChanged():void;
		MultiHighlightGradientChanged(gradient:gui.QLinearGradient_ITF):void;
		SetAmbientLightStrength(strength:number):void;
		SetBackgroundColor(color:gui.QColor_ITF):void;
		SetBackgroundEnabled(enabled:boolean):void;
		SetBaseColors(colors:gui.QColor[]):void;
		SetBaseGradients(gradients:gui.QLinearGradient[]):void;
		SetColorStyle(style:number):void;
		SetFont(font:gui.QFont_ITF):void;
		SetGridEnabled(enabled:boolean):void;
		SetGridLineColor(color:gui.QColor_ITF):void;
		SetHighlightLightStrength(strength:number):void;
		SetLabelBackgroundColor(color:gui.QColor_ITF):void;
		SetLabelBackgroundEnabled(enabled:boolean):void;
		SetLabelBorderEnabled(enabled:boolean):void;
		SetLabelTextColor(color:gui.QColor_ITF):void;
		SetLightColor(color:gui.QColor_ITF):void;
		SetLightStrength(strength:number):void;
		SetMultiHighlightColor(color:gui.QColor_ITF):void;
		SetMultiHighlightGradient(gradient:gui.QLinearGradient_ITF):void;
		SetSingleHighlightColor(color:gui.QColor_ITF):void;
		SetSingleHighlightGradient(gradient:gui.QLinearGradient_ITF):void;
		SetType(themeType:number):void;
		SetWindowColor(color:gui.QColor_ITF):void;
		SingleHighlightColor():gui.QColor;
		ConnectSingleHighlightColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectSingleHighlightColorChanged():void;
		SingleHighlightColorChanged(color:gui.QColor_ITF):void;
		SingleHighlightGradient():gui.QLinearGradient;
		ConnectSingleHighlightGradientChanged(f:(gradient:gui.QLinearGradient)=>void):void;
		DisconnectSingleHighlightGradientChanged():void;
		SingleHighlightGradientChanged(gradient:gui.QLinearGradient_ITF):void;
		Type():number;
		ConnectTypeChanged(f:(themeType:number)=>void):void;
		DisconnectTypeChanged():void;
		TypeChanged(themeType:number):void;
		WindowColor():gui.QColor;
		ConnectWindowColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectWindowColorChanged():void;
		WindowColorChanged(color:gui.QColor_ITF):void;
		ConnectDestroyQ3DTheme(f:()=>void):void;
		DisconnectDestroyQ3DTheme():void;
		DestroyQ3DTheme():void;
		DestroyQ3DThemeDefault():void;
	}
	function NewQ3DThemeFromPointer(ptr:number):Q3DTheme;
	function NewQ3DTheme(parent:core.QObject_ITF):Q3DTheme;
	function NewQ3DTheme2(themeType:number,parent:core.QObject_ITF):Q3DTheme;
	const Q3DTheme__ColorStyleUniform: number;
	const Q3DTheme__ColorStyleObjectGradient: number;
	const Q3DTheme__ColorStyleRangeGradient: number;
	const Q3DTheme__ThemeQt: number;
	const Q3DTheme__ThemePrimaryColors: number;
	const Q3DTheme__ThemeDigia: number;
	const Q3DTheme__ThemeStoneMoss: number;
	const Q3DTheme__ThemeArmyBlue: number;
	const Q3DTheme__ThemeRetro: number;
	const Q3DTheme__ThemeEbony: number;
	const Q3DTheme__ThemeIsabelle: number;
	const Q3DTheme__ThemeUserDefined: number;
	interface QAbstract3DAxis_ITF {
		QAbstract3DAxis_PTR():QAbstract3DAxis;
	}

	class QAbstract3DAxis {
		___pointer: number;
		QAbstract3DAxis_PTR():QAbstract3DAxis;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectAutoAdjustRangeChanged(f:(autoAdjust:boolean)=>void):void;
		DisconnectAutoAdjustRangeChanged():void;
		AutoAdjustRangeChanged(autoAdjust:boolean):void;
		IsAutoAdjustRange():boolean;
		IsTitleFixed():boolean;
		IsTitleVisible():boolean;
		LabelAutoRotation():number;
		ConnectLabelAutoRotationChanged(f:(angle:number)=>void):void;
		DisconnectLabelAutoRotationChanged():void;
		LabelAutoRotationChanged(angle:number):void;
		Labels():string[];
		ConnectLabelsChanged(f:()=>void):void;
		DisconnectLabelsChanged():void;
		LabelsChanged():void;
		Max():number;
		ConnectMaxChanged(f:(value:number)=>void):void;
		DisconnectMaxChanged():void;
		MaxChanged(value:number):void;
		Min():number;
		ConnectMinChanged(f:(value:number)=>void):void;
		DisconnectMinChanged():void;
		MinChanged(value:number):void;
		Orientation():number;
		ConnectOrientationChanged(f:(orientation:number)=>void):void;
		DisconnectOrientationChanged():void;
		OrientationChanged(orientation:number):void;
		ConnectRangeChanged(f:(mi:number,max:number)=>void):void;
		DisconnectRangeChanged():void;
		RangeChanged(mi:number,max:number):void;
		SetAutoAdjustRange(autoAdjust:boolean):void;
		SetLabelAutoRotation(angle:number):void;
		SetLabels(labels:string[]):void;
		SetMax(max:number):void;
		SetMin(mi:number):void;
		SetRange(mi:number,max:number):void;
		SetTitle(title:string):void;
		SetTitleFixed(fixed:boolean):void;
		SetTitleVisible(visible:boolean):void;
		Title():string;
		ConnectTitleChanged(f:(newTitle:string)=>void):void;
		DisconnectTitleChanged():void;
		TitleChanged(newTitle:string):void;
		ConnectTitleFixedChanged(f:(fixed:boolean)=>void):void;
		DisconnectTitleFixedChanged():void;
		TitleFixedChanged(fixed:boolean):void;
		ConnectTitleVisibilityChanged(f:(visible:boolean)=>void):void;
		DisconnectTitleVisibilityChanged():void;
		TitleVisibilityChanged(visible:boolean):void;
		Type():number;
		ConnectDestroyQAbstract3DAxis(f:()=>void):void;
		DisconnectDestroyQAbstract3DAxis():void;
		DestroyQAbstract3DAxis():void;
		DestroyQAbstract3DAxisDefault():void;
	}
	function NewQAbstract3DAxisFromPointer(ptr:number):QAbstract3DAxis;
	const QAbstract3DAxis__AxisOrientationNone: number;
	const QAbstract3DAxis__AxisOrientationX: number;
	const QAbstract3DAxis__AxisOrientationY: number;
	const QAbstract3DAxis__AxisOrientationZ: number;
	const QAbstract3DAxis__AxisTypeNone: number;
	const QAbstract3DAxis__AxisTypeCategory: number;
	const QAbstract3DAxis__AxisTypeValue: number;
	const QAbstract3DGraph__SelectionNone: number;
	const QAbstract3DGraph__SelectionItem: number;
	const QAbstract3DGraph__SelectionRow: number;
	const QAbstract3DGraph__SelectionItemAndRow: number;
	const QAbstract3DGraph__SelectionColumn: number;
	const QAbstract3DGraph__SelectionItemAndColumn: number;
	const QAbstract3DGraph__SelectionRowAndColumn: number;
	const QAbstract3DGraph__SelectionItemRowAndColumn: number;
	const QAbstract3DGraph__SelectionSlice: number;
	const QAbstract3DGraph__SelectionMultiSeries: number;
	const QAbstract3DGraph__ShadowQualityNone: number;
	const QAbstract3DGraph__ShadowQualityLow: number;
	const QAbstract3DGraph__ShadowQualityMedium: number;
	const QAbstract3DGraph__ShadowQualityHigh: number;
	const QAbstract3DGraph__ShadowQualitySoftLow: number;
	const QAbstract3DGraph__ShadowQualitySoftMedium: number;
	const QAbstract3DGraph__ShadowQualitySoftHigh: number;
	const QAbstract3DGraph__ElementNone: number;
	const QAbstract3DGraph__ElementSeries: number;
	const QAbstract3DGraph__ElementAxisXLabel: number;
	const QAbstract3DGraph__ElementAxisYLabel: number;
	const QAbstract3DGraph__ElementAxisZLabel: number;
	const QAbstract3DGraph__ElementCustomItem: number;
	const QAbstract3DGraph__OptimizationDefault: number;
	const QAbstract3DGraph__OptimizationStatic: number;
	interface QAbstract3DInputHandler_ITF {
		QAbstract3DInputHandler_PTR():QAbstract3DInputHandler;
	}

	class QAbstract3DInputHandler {
		___pointer: number;
		QAbstract3DInputHandler_PTR():QAbstract3DInputHandler;
		Pointer():number;
		SetPointer(p:number):void;
		InputPosition():core.QPoint;
		InputView():number;
		ConnectInputViewChanged(f:(view:number)=>void):void;
		DisconnectInputViewChanged():void;
		InputViewChanged(view:number):void;
		ConnectMouseDoubleClickEvent(f:(event:gui.QMouseEvent)=>void):void;
		DisconnectMouseDoubleClickEvent():void;
		MouseDoubleClickEvent(event:gui.QMouseEvent_ITF):void;
		MouseDoubleClickEventDefault(event:gui.QMouseEvent_ITF):void;
		ConnectMouseMoveEvent(f:(event:gui.QMouseEvent,mousePos:core.QPoint)=>void):void;
		DisconnectMouseMoveEvent():void;
		MouseMoveEvent(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		MouseMoveEventDefault(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		ConnectMousePressEvent(f:(event:gui.QMouseEvent,mousePos:core.QPoint)=>void):void;
		DisconnectMousePressEvent():void;
		MousePressEvent(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		MousePressEventDefault(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		ConnectMouseReleaseEvent(f:(event:gui.QMouseEvent,mousePos:core.QPoint)=>void):void;
		DisconnectMouseReleaseEvent():void;
		MouseReleaseEvent(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		MouseReleaseEventDefault(event:gui.QMouseEvent_ITF,mousePos:core.QPoint_ITF):void;
		ConnectPositionChanged(f:(position:core.QPoint)=>void):void;
		DisconnectPositionChanged():void;
		PositionChanged(position:core.QPoint_ITF):void;
		PrevDistance():number;
		PreviousInputPos():core.QPoint;
		Scene():Q3DScene;
		ConnectSceneChanged(f:(scene:Q3DScene)=>void):void;
		DisconnectSceneChanged():void;
		SceneChanged(scene:Q3DScene_ITF):void;
		SetInputPosition(position:core.QPoint_ITF):void;
		SetInputView(inputView:number):void;
		SetPrevDistance(distance:number):void;
		SetPreviousInputPos(position:core.QPoint_ITF):void;
		SetScene(scene:Q3DScene_ITF):void;
		ConnectTouchEvent(f:(event:gui.QTouchEvent)=>void):void;
		DisconnectTouchEvent():void;
		TouchEvent(event:gui.QTouchEvent_ITF):void;
		TouchEventDefault(event:gui.QTouchEvent_ITF):void;
		ConnectWheelEvent(f:(event:gui.QWheelEvent)=>void):void;
		DisconnectWheelEvent():void;
		WheelEvent(event:gui.QWheelEvent_ITF):void;
		WheelEventDefault(event:gui.QWheelEvent_ITF):void;
		ConnectDestroyQAbstract3DInputHandler(f:()=>void):void;
		DisconnectDestroyQAbstract3DInputHandler():void;
		DestroyQAbstract3DInputHandler():void;
		DestroyQAbstract3DInputHandlerDefault():void;
	}
	function NewQAbstract3DInputHandlerFromPointer(ptr:number):QAbstract3DInputHandler;
	function NewQAbstract3DInputHandler(parent:core.QObject_ITF):QAbstract3DInputHandler;
	const QAbstract3DInputHandler__InputViewNone: number;
	const QAbstract3DInputHandler__InputViewOnPrimary: number;
	const QAbstract3DInputHandler__InputViewOnSecondary: number;
	interface QAbstract3DSeries_ITF {
		QAbstract3DSeries_PTR():QAbstract3DSeries;
	}

	class QAbstract3DSeries {
		___pointer: number;
		QAbstract3DSeries_PTR():QAbstract3DSeries;
		Pointer():number;
		SetPointer(p:number):void;
		BaseColor():gui.QColor;
		ConnectBaseColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectBaseColorChanged():void;
		BaseColorChanged(color:gui.QColor_ITF):void;
		BaseGradient():gui.QLinearGradient;
		ConnectBaseGradientChanged(f:(gradient:gui.QLinearGradient)=>void):void;
		DisconnectBaseGradientChanged():void;
		BaseGradientChanged(gradient:gui.QLinearGradient_ITF):void;
		ColorStyle():number;
		ConnectColorStyleChanged(f:(style:number)=>void):void;
		DisconnectColorStyleChanged():void;
		ColorStyleChanged(style:number):void;
		IsItemLabelVisible():boolean;
		IsMeshSmooth():boolean;
		IsVisible():boolean;
		ItemLabel():string;
		ConnectItemLabelChanged(f:(label:string)=>void):void;
		DisconnectItemLabelChanged():void;
		ItemLabelChanged(label:string):void;
		ItemLabelFormat():string;
		ConnectItemLabelFormatChanged(f:(format:string)=>void):void;
		DisconnectItemLabelFormatChanged():void;
		ItemLabelFormatChanged(format:string):void;
		ConnectItemLabelVisibilityChanged(f:(visible:boolean)=>void):void;
		DisconnectItemLabelVisibilityChanged():void;
		ItemLabelVisibilityChanged(visible:boolean):void;
		Mesh():number;
		ConnectMeshChanged(f:(mesh:number)=>void):void;
		DisconnectMeshChanged():void;
		MeshChanged(mesh:number):void;
		MeshRotation():gui.QQuaternion;
		ConnectMeshRotationChanged(f:(rotation:gui.QQuaternion)=>void):void;
		DisconnectMeshRotationChanged():void;
		MeshRotationChanged(rotation:gui.QQuaternion_ITF):void;
		ConnectMeshSmoothChanged(f:(enabled:boolean)=>void):void;
		DisconnectMeshSmoothChanged():void;
		MeshSmoothChanged(enabled:boolean):void;
		MultiHighlightColor():gui.QColor;
		ConnectMultiHighlightColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectMultiHighlightColorChanged():void;
		MultiHighlightColorChanged(color:gui.QColor_ITF):void;
		MultiHighlightGradient():gui.QLinearGradient;
		ConnectMultiHighlightGradientChanged(f:(gradient:gui.QLinearGradient)=>void):void;
		DisconnectMultiHighlightGradientChanged():void;
		MultiHighlightGradientChanged(gradient:gui.QLinearGradient_ITF):void;
		Name():string;
		ConnectNameChanged(f:(name:string)=>void):void;
		DisconnectNameChanged():void;
		NameChanged(name:string):void;
		SetBaseColor(color:gui.QColor_ITF):void;
		SetBaseGradient(gradient:gui.QLinearGradient_ITF):void;
		SetColorStyle(style:number):void;
		SetItemLabelFormat(format:string):void;
		SetItemLabelVisible(visible:boolean):void;
		SetMesh(mesh:number):void;
		SetMeshAxisAndAngle(axis:gui.QVector3D_ITF,angle:number):void;
		SetMeshRotation(rotation:gui.QQuaternion_ITF):void;
		SetMeshSmooth(enable:boolean):void;
		SetMultiHighlightColor(color:gui.QColor_ITF):void;
		SetMultiHighlightGradient(gradient:gui.QLinearGradient_ITF):void;
		SetName(name:string):void;
		SetSingleHighlightColor(color:gui.QColor_ITF):void;
		SetSingleHighlightGradient(gradient:gui.QLinearGradient_ITF):void;
		SetUserDefinedMesh(fileName:string):void;
		SetVisible(visible:boolean):void;
		SingleHighlightColor():gui.QColor;
		ConnectSingleHighlightColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectSingleHighlightColorChanged():void;
		SingleHighlightColorChanged(color:gui.QColor_ITF):void;
		SingleHighlightGradient():gui.QLinearGradient;
		ConnectSingleHighlightGradientChanged(f:(gradient:gui.QLinearGradient)=>void):void;
		DisconnectSingleHighlightGradientChanged():void;
		SingleHighlightGradientChanged(gradient:gui.QLinearGradient_ITF):void;
		Type():number;
		UserDefinedMesh():string;
		ConnectUserDefinedMeshChanged(f:(fileName:string)=>void):void;
		DisconnectUserDefinedMeshChanged():void;
		UserDefinedMeshChanged(fileName:string):void;
		ConnectVisibilityChanged(f:(visible:boolean)=>void):void;
		DisconnectVisibilityChanged():void;
		VisibilityChanged(visible:boolean):void;
		ConnectDestroyQAbstract3DSeries(f:()=>void):void;
		DisconnectDestroyQAbstract3DSeries():void;
		DestroyQAbstract3DSeries():void;
		DestroyQAbstract3DSeriesDefault():void;
	}
	function NewQAbstract3DSeriesFromPointer(ptr:number):QAbstract3DSeries;
	const QAbstract3DSeries__SeriesTypeNone: number;
	const QAbstract3DSeries__SeriesTypeBar: number;
	const QAbstract3DSeries__SeriesTypeScatter: number;
	const QAbstract3DSeries__SeriesTypeSurface: number;
	const QAbstract3DSeries__MeshUserDefined: number;
	const QAbstract3DSeries__MeshBar: number;
	const QAbstract3DSeries__MeshCube: number;
	const QAbstract3DSeries__MeshPyramid: number;
	const QAbstract3DSeries__MeshCone: number;
	const QAbstract3DSeries__MeshCylinder: number;
	const QAbstract3DSeries__MeshBevelBar: number;
	const QAbstract3DSeries__MeshBevelCube: number;
	const QAbstract3DSeries__MeshSphere: number;
	const QAbstract3DSeries__MeshMinimal: number;
	const QAbstract3DSeries__MeshArrow: number;
	const QAbstract3DSeries__MeshPoint: number;
	interface QAbstractDataProxy_ITF {
		QAbstractDataProxy_PTR():QAbstractDataProxy;
	}

	class QAbstractDataProxy {
		___pointer: number;
		QAbstractDataProxy_PTR():QAbstractDataProxy;
		Pointer():number;
		SetPointer(p:number):void;
		Type():number;
		ConnectDestroyQAbstractDataProxy(f:()=>void):void;
		DisconnectDestroyQAbstractDataProxy():void;
		DestroyQAbstractDataProxy():void;
		DestroyQAbstractDataProxyDefault():void;
	}
	function NewQAbstractDataProxyFromPointer(ptr:number):QAbstractDataProxy;
	const QAbstractDataProxy__DataTypeNone: number;
	const QAbstractDataProxy__DataTypeBar: number;
	const QAbstractDataProxy__DataTypeScatter: number;
	const QAbstractDataProxy__DataTypeSurface: number;
	interface QBar3DSeries_ITF {
		QBar3DSeries_PTR():QBar3DSeries;
	}

	class QBar3DSeries {
		___pointer: number;
		QBar3DSeries_PTR():QBar3DSeries;
		Pointer():number;
		SetPointer(p:number):void;
		DataProxy():QBarDataProxy;
		ConnectDataProxyChanged(f:(proxy:QBarDataProxy)=>void):void;
		DisconnectDataProxyChanged():void;
		DataProxyChanged(proxy:QBarDataProxy_ITF):void;
		InvalidSelectionPosition():core.QPoint;
		MeshAngle():number;
		ConnectMeshAngleChanged(f:(angle:number)=>void):void;
		DisconnectMeshAngleChanged():void;
		MeshAngleChanged(angle:number):void;
		SelectedBar():core.QPoint;
		ConnectSelectedBarChanged(f:(position:core.QPoint)=>void):void;
		DisconnectSelectedBarChanged():void;
		SelectedBarChanged(position:core.QPoint_ITF):void;
		SetDataProxy(proxy:QBarDataProxy_ITF):void;
		SetMeshAngle(angle:number):void;
		SetSelectedBar(position:core.QPoint_ITF):void;
		ConnectDestroyQBar3DSeries(f:()=>void):void;
		DisconnectDestroyQBar3DSeries():void;
		DestroyQBar3DSeries():void;
		DestroyQBar3DSeriesDefault():void;
	}
	function NewQBar3DSeriesFromPointer(ptr:number):QBar3DSeries;
	function NewQBar3DSeries(parent:core.QObject_ITF):QBar3DSeries;
	function NewQBar3DSeries2(dataProxy:QBarDataProxy_ITF,parent:core.QObject_ITF):QBar3DSeries;
	function QBar3DSeries_InvalidSelectionPosition():core.QPoint;
	interface QBarDataItem_ITF {
		QBarDataItem_PTR():QBarDataItem;
	}

	class QBarDataItem {
		___pointer: number;
		QBarDataItem_PTR():QBarDataItem;
		Pointer():number;
		SetPointer(p:number):void;
		Rotation():number;
		SetRotation(angle:number):void;
		SetValue(val:number):void;
		Value():number;
		DestroyQBarDataItem():void;
	}
	function NewQBarDataItemFromPointer(ptr:number):QBarDataItem;
	function NewQBarDataItem():QBarDataItem;
	function NewQBarDataItem2(value:number):QBarDataItem;
	function NewQBarDataItem3(value:number,angle:number):QBarDataItem;
	function NewQBarDataItem4(other:QBarDataItem_ITF):QBarDataItem;
	interface QBarDataProxy_ITF {
		QBarDataProxy_PTR():QBarDataProxy;
	}

	class QBarDataProxy {
		___pointer: number;
		QBarDataProxy_PTR():QBarDataProxy;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectArrayReset(f:()=>void):void;
		DisconnectArrayReset():void;
		ArrayReset():void;
		ColumnLabels():string[];
		ConnectColumnLabelsChanged(f:()=>void):void;
		DisconnectColumnLabelsChanged():void;
		ColumnLabelsChanged():void;
		ItemAt(rowIndex:number,columnIndex:number):QBarDataItem;
		ItemAt2(position:core.QPoint_ITF):QBarDataItem;
		ConnectItemChanged(f:(rowIndex:number,columnIndex:number)=>void):void;
		DisconnectItemChanged():void;
		ItemChanged(rowIndex:number,columnIndex:number):void;
		RemoveRows(rowIndex:number,removeCount:number,removeLabels:boolean):void;
		ResetArray():void;
		RowCount():number;
		ConnectRowCountChanged(f:(count:number)=>void):void;
		DisconnectRowCountChanged():void;
		RowCountChanged(count:number):void;
		RowLabels():string[];
		ConnectRowLabelsChanged(f:()=>void):void;
		DisconnectRowLabelsChanged():void;
		RowLabelsChanged():void;
		ConnectRowsAdded(f:(startIndex:number,count:number)=>void):void;
		DisconnectRowsAdded():void;
		RowsAdded(startIndex:number,count:number):void;
		ConnectRowsChanged(f:(startIndex:number,count:number)=>void):void;
		DisconnectRowsChanged():void;
		RowsChanged(startIndex:number,count:number):void;
		ConnectRowsInserted(f:(startIndex:number,count:number)=>void):void;
		DisconnectRowsInserted():void;
		RowsInserted(startIndex:number,count:number):void;
		ConnectRowsRemoved(f:(startIndex:number,count:number)=>void):void;
		DisconnectRowsRemoved():void;
		RowsRemoved(startIndex:number,count:number):void;
		Series():QBar3DSeries;
		ConnectSeriesChanged(f:(series:QBar3DSeries)=>void):void;
		DisconnectSeriesChanged():void;
		SeriesChanged(series:QBar3DSeries_ITF):void;
		SetColumnLabels(labels:string[]):void;
		SetItem(rowIndex:number,columnIndex:number,item:QBarDataItem_ITF):void;
		SetItem2(position:core.QPoint_ITF,item:QBarDataItem_ITF):void;
		SetRowLabels(labels:string[]):void;
		ConnectDestroyQBarDataProxy(f:()=>void):void;
		DisconnectDestroyQBarDataProxy():void;
		DestroyQBarDataProxy():void;
		DestroyQBarDataProxyDefault():void;
	}
	function NewQBarDataProxyFromPointer(ptr:number):QBarDataProxy;
	function NewQBarDataProxy(parent:core.QObject_ITF):QBarDataProxy;
	interface QCategory3DAxis_ITF {
		QCategory3DAxis_PTR():QCategory3DAxis;
	}

	class QCategory3DAxis {
		___pointer: number;
		QCategory3DAxis_PTR():QCategory3DAxis;
		Pointer():number;
		SetPointer(p:number):void;
		Labels():string[];
		ConnectLabelsChanged(f:()=>void):void;
		DisconnectLabelsChanged():void;
		LabelsChanged():void;
		SetLabels(labels:string[]):void;
		ConnectDestroyQCategory3DAxis(f:()=>void):void;
		DisconnectDestroyQCategory3DAxis():void;
		DestroyQCategory3DAxis():void;
		DestroyQCategory3DAxisDefault():void;
	}
	function NewQCategory3DAxisFromPointer(ptr:number):QCategory3DAxis;
	function NewQCategory3DAxis(parent:core.QObject_ITF):QCategory3DAxis;
	interface QCustom3DItem_ITF {
		QCustom3DItem_PTR():QCustom3DItem;
	}

	class QCustom3DItem {
		___pointer: number;
		QCustom3DItem_PTR():QCustom3DItem;
		Pointer():number;
		SetPointer(p:number):void;
		IsPositionAbsolute():boolean;
		IsScalingAbsolute():boolean;
		IsShadowCasting():boolean;
		IsVisible():boolean;
		MeshFile():string;
		ConnectMeshFileChanged(f:(meshFile:string)=>void):void;
		DisconnectMeshFileChanged():void;
		MeshFileChanged(meshFile:string):void;
		Position():gui.QVector3D;
		ConnectPositionAbsoluteChanged(f:(positionAbsolute:boolean)=>void):void;
		DisconnectPositionAbsoluteChanged():void;
		PositionAbsoluteChanged(positionAbsolute:boolean):void;
		ConnectPositionChanged(f:(position:gui.QVector3D)=>void):void;
		DisconnectPositionChanged():void;
		PositionChanged(position:gui.QVector3D_ITF):void;
		Rotation():gui.QQuaternion;
		ConnectRotationChanged(f:(rotation:gui.QQuaternion)=>void):void;
		DisconnectRotationChanged():void;
		RotationChanged(rotation:gui.QQuaternion_ITF):void;
		Scaling():gui.QVector3D;
		ConnectScalingAbsoluteChanged(f:(scalingAbsolute:boolean)=>void):void;
		DisconnectScalingAbsoluteChanged():void;
		ScalingAbsoluteChanged(scalingAbsolute:boolean):void;
		ConnectScalingChanged(f:(scaling:gui.QVector3D)=>void):void;
		DisconnectScalingChanged():void;
		ScalingChanged(scaling:gui.QVector3D_ITF):void;
		SetMeshFile(meshFile:string):void;
		SetPosition(position:gui.QVector3D_ITF):void;
		SetPositionAbsolute(positionAbsolute:boolean):void;
		SetRotation(rotation:gui.QQuaternion_ITF):void;
		SetRotationAxisAndAngle(axis:gui.QVector3D_ITF,angle:number):void;
		SetScaling(scaling:gui.QVector3D_ITF):void;
		SetScalingAbsolute(scalingAbsolute:boolean):void;
		SetShadowCasting(enabled:boolean):void;
		SetTextureFile(textureFile:string):void;
		SetTextureImage(textureImage:gui.QImage_ITF):void;
		SetVisible(visible:boolean):void;
		ConnectShadowCastingChanged(f:(shadowCasting:boolean)=>void):void;
		DisconnectShadowCastingChanged():void;
		ShadowCastingChanged(shadowCasting:boolean):void;
		TextureFile():string;
		ConnectTextureFileChanged(f:(textureFile:string)=>void):void;
		DisconnectTextureFileChanged():void;
		TextureFileChanged(textureFile:string):void;
		ConnectVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectVisibleChanged():void;
		VisibleChanged(visible:boolean):void;
		ConnectDestroyQCustom3DItem(f:()=>void):void;
		DisconnectDestroyQCustom3DItem():void;
		DestroyQCustom3DItem():void;
		DestroyQCustom3DItemDefault():void;
	}
	function NewQCustom3DItemFromPointer(ptr:number):QCustom3DItem;
	function NewQCustom3DItem(parent:core.QObject_ITF):QCustom3DItem;
	function NewQCustom3DItem2(meshFile:string,position:gui.QVector3D_ITF,scaling:gui.QVector3D_ITF,rotation:gui.QQuaternion_ITF,texture:gui.QImage_ITF,parent:core.QObject_ITF):QCustom3DItem;
	interface QCustom3DLabel_ITF {
		QCustom3DLabel_PTR():QCustom3DLabel;
	}

	class QCustom3DLabel {
		___pointer: number;
		QCustom3DLabel_PTR():QCustom3DLabel;
		Pointer():number;
		SetPointer(p:number):void;
		BackgroundColor():gui.QColor;
		ConnectBackgroundColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectBackgroundColorChanged():void;
		BackgroundColorChanged(color:gui.QColor_ITF):void;
		ConnectBackgroundEnabledChanged(f:(enabled:boolean)=>void):void;
		DisconnectBackgroundEnabledChanged():void;
		BackgroundEnabledChanged(enabled:boolean):void;
		ConnectBorderEnabledChanged(f:(enabled:boolean)=>void):void;
		DisconnectBorderEnabledChanged():void;
		BorderEnabledChanged(enabled:boolean):void;
		ConnectFacingCameraChanged(f:(enabled:boolean)=>void):void;
		DisconnectFacingCameraChanged():void;
		FacingCameraChanged(enabled:boolean):void;
		Font():gui.QFont;
		ConnectFontChanged(f:(font:gui.QFont)=>void):void;
		DisconnectFontChanged():void;
		FontChanged(font:gui.QFont_ITF):void;
		IsBackgroundEnabled():boolean;
		IsBorderEnabled():boolean;
		IsFacingCamera():boolean;
		SetBackgroundColor(color:gui.QColor_ITF):void;
		SetBackgroundEnabled(enabled:boolean):void;
		SetBorderEnabled(enabled:boolean):void;
		SetFacingCamera(enabled:boolean):void;
		SetFont(font:gui.QFont_ITF):void;
		SetText(text:string):void;
		SetTextColor(color:gui.QColor_ITF):void;
		Text():string;
		ConnectTextChanged(f:(text:string)=>void):void;
		DisconnectTextChanged():void;
		TextChanged(text:string):void;
		TextColor():gui.QColor;
		ConnectTextColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectTextColorChanged():void;
		TextColorChanged(color:gui.QColor_ITF):void;
		ConnectDestroyQCustom3DLabel(f:()=>void):void;
		DisconnectDestroyQCustom3DLabel():void;
		DestroyQCustom3DLabel():void;
		DestroyQCustom3DLabelDefault():void;
	}
	function NewQCustom3DLabelFromPointer(ptr:number):QCustom3DLabel;
	function NewQCustom3DLabel(parent:core.QObject_ITF):QCustom3DLabel;
	function NewQCustom3DLabel2(text:string,font:gui.QFont_ITF,position:gui.QVector3D_ITF,scaling:gui.QVector3D_ITF,rotation:gui.QQuaternion_ITF,parent:core.QObject_ITF):QCustom3DLabel;
	interface QCustom3DVolume_ITF {
		QCustom3DVolume_PTR():QCustom3DVolume;
	}

	class QCustom3DVolume {
		___pointer: number;
		QCustom3DVolume_PTR():QCustom3DVolume;
		Pointer():number;
		SetPointer(p:number):void;
		AlphaMultiplier():number;
		ConnectAlphaMultiplierChanged(f:(mult:number)=>void):void;
		DisconnectAlphaMultiplierChanged():void;
		AlphaMultiplierChanged(mult:number):void;
		ColorTable():number[];
		ConnectColorTableChanged(f:()=>void):void;
		DisconnectColorTableChanged():void;
		ColorTableChanged():void;
		DrawSliceFrames():boolean;
		ConnectDrawSliceFramesChanged(f:(enabled:boolean)=>void):void;
		DisconnectDrawSliceFramesChanged():void;
		DrawSliceFramesChanged(enabled:boolean):void;
		DrawSlices():boolean;
		ConnectDrawSlicesChanged(f:(enabled:boolean)=>void):void;
		DisconnectDrawSlicesChanged():void;
		DrawSlicesChanged(enabled:boolean):void;
		PreserveOpacity():boolean;
		ConnectPreserveOpacityChanged(f:(enabled:boolean)=>void):void;
		DisconnectPreserveOpacityChanged():void;
		PreserveOpacityChanged(enabled:boolean):void;
		RenderSlice(axis:number,index:number):gui.QImage;
		SetAlphaMultiplier(mult:number):void;
		SetColorTable(colors:number[]):void;
		SetDrawSliceFrames(enable:boolean):void;
		SetDrawSlices(enable:boolean):void;
		SetPreserveOpacity(enable:boolean):void;
		SetSliceFrameColor(color:gui.QColor_ITF):void;
		SetSliceFrameGaps(values:gui.QVector3D_ITF):void;
		SetSliceFrameThicknesses(values:gui.QVector3D_ITF):void;
		SetSliceFrameWidths(values:gui.QVector3D_ITF):void;
		SetSliceIndexX(value:number):void;
		SetSliceIndexY(value:number):void;
		SetSliceIndexZ(value:number):void;
		SetSliceIndices(x:number,y:number,z:number):void;
		SetSubTextureData(axis:number,index:number,data:string):void;
		SetSubTextureData2(axis:number,index:number,image:gui.QImage_ITF):void;
		SetTextureDepth(value:number):void;
		SetTextureDimensions(width:number,height:number,depth:number):void;
		SetTextureFormat(format:number):void;
		SetTextureHeight(value:number):void;
		SetTextureWidth(value:number):void;
		SetUseHighDefShader(enable:boolean):void;
		SliceFrameColor():gui.QColor;
		ConnectSliceFrameColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectSliceFrameColorChanged():void;
		SliceFrameColorChanged(color:gui.QColor_ITF):void;
		SliceFrameGaps():gui.QVector3D;
		ConnectSliceFrameGapsChanged(f:(values:gui.QVector3D)=>void):void;
		DisconnectSliceFrameGapsChanged():void;
		SliceFrameGapsChanged(values:gui.QVector3D_ITF):void;
		SliceFrameThicknesses():gui.QVector3D;
		ConnectSliceFrameThicknessesChanged(f:(values:gui.QVector3D)=>void):void;
		DisconnectSliceFrameThicknessesChanged():void;
		SliceFrameThicknessesChanged(values:gui.QVector3D_ITF):void;
		SliceFrameWidths():gui.QVector3D;
		ConnectSliceFrameWidthsChanged(f:(values:gui.QVector3D)=>void):void;
		DisconnectSliceFrameWidthsChanged():void;
		SliceFrameWidthsChanged(values:gui.QVector3D_ITF):void;
		SliceIndexX():number;
		ConnectSliceIndexXChanged(f:(value:number)=>void):void;
		DisconnectSliceIndexXChanged():void;
		SliceIndexXChanged(value:number):void;
		SliceIndexY():number;
		ConnectSliceIndexYChanged(f:(value:number)=>void):void;
		DisconnectSliceIndexYChanged():void;
		SliceIndexYChanged(value:number):void;
		SliceIndexZ():number;
		ConnectSliceIndexZChanged(f:(value:number)=>void):void;
		DisconnectSliceIndexZChanged():void;
		SliceIndexZChanged(value:number):void;
		TextureDepth():number;
		ConnectTextureDepthChanged(f:(value:number)=>void):void;
		DisconnectTextureDepthChanged():void;
		TextureDepthChanged(value:number):void;
		TextureFormat():number;
		ConnectTextureFormatChanged(f:(format:number)=>void):void;
		DisconnectTextureFormatChanged():void;
		TextureFormatChanged(format:number):void;
		TextureHeight():number;
		ConnectTextureHeightChanged(f:(value:number)=>void):void;
		DisconnectTextureHeightChanged():void;
		TextureHeightChanged(value:number):void;
		TextureWidth():number;
		ConnectTextureWidthChanged(f:(value:number)=>void):void;
		DisconnectTextureWidthChanged():void;
		TextureWidthChanged(value:number):void;
		UseHighDefShader():boolean;
		ConnectUseHighDefShaderChanged(f:(enabled:boolean)=>void):void;
		DisconnectUseHighDefShaderChanged():void;
		UseHighDefShaderChanged(enabled:boolean):void;
		ConnectDestroyQCustom3DVolume(f:()=>void):void;
		DisconnectDestroyQCustom3DVolume():void;
		DestroyQCustom3DVolume():void;
		DestroyQCustom3DVolumeDefault():void;
	}
	function NewQCustom3DVolumeFromPointer(ptr:number):QCustom3DVolume;
	function NewQCustom3DVolume(parent:core.QObject_ITF):QCustom3DVolume;
	interface QHeightMapSurfaceDataProxy_ITF {
		QHeightMapSurfaceDataProxy_PTR():QHeightMapSurfaceDataProxy;
	}

	class QHeightMapSurfaceDataProxy {
		___pointer: number;
		QHeightMapSurfaceDataProxy_PTR():QHeightMapSurfaceDataProxy;
		Pointer():number;
		SetPointer(p:number):void;
		HeightMap():gui.QImage;
		ConnectHeightMapChanged(f:(image:gui.QImage)=>void):void;
		DisconnectHeightMapChanged():void;
		HeightMapChanged(image:gui.QImage_ITF):void;
		HeightMapFile():string;
		ConnectHeightMapFileChanged(f:(filename:string)=>void):void;
		DisconnectHeightMapFileChanged():void;
		HeightMapFileChanged(filename:string):void;
		MaxXValue():number;
		ConnectMaxXValueChanged(f:(value:number)=>void):void;
		DisconnectMaxXValueChanged():void;
		MaxXValueChanged(value:number):void;
		MaxZValue():number;
		ConnectMaxZValueChanged(f:(value:number)=>void):void;
		DisconnectMaxZValueChanged():void;
		MaxZValueChanged(value:number):void;
		MinXValue():number;
		ConnectMinXValueChanged(f:(value:number)=>void):void;
		DisconnectMinXValueChanged():void;
		MinXValueChanged(value:number):void;
		MinZValue():number;
		ConnectMinZValueChanged(f:(value:number)=>void):void;
		DisconnectMinZValueChanged():void;
		MinZValueChanged(value:number):void;
		SetHeightMap(image:gui.QImage_ITF):void;
		SetHeightMapFile(filename:string):void;
		SetMaxXValue(max:number):void;
		SetMaxZValue(max:number):void;
		SetMinXValue(mi:number):void;
		SetMinZValue(mi:number):void;
		SetValueRanges(minX:number,maxX:number,minZ:number,maxZ:number):void;
		ConnectDestroyQHeightMapSurfaceDataProxy(f:()=>void):void;
		DisconnectDestroyQHeightMapSurfaceDataProxy():void;
		DestroyQHeightMapSurfaceDataProxy():void;
		DestroyQHeightMapSurfaceDataProxyDefault():void;
	}
	function NewQHeightMapSurfaceDataProxyFromPointer(ptr:number):QHeightMapSurfaceDataProxy;
	function NewQHeightMapSurfaceDataProxy(parent:core.QObject_ITF):QHeightMapSurfaceDataProxy;
	function NewQHeightMapSurfaceDataProxy2(image:gui.QImage_ITF,parent:core.QObject_ITF):QHeightMapSurfaceDataProxy;
	function NewQHeightMapSurfaceDataProxy3(filename:string,parent:core.QObject_ITF):QHeightMapSurfaceDataProxy;
	interface QItemModelBarDataProxy_ITF {
		QItemModelBarDataProxy_PTR():QItemModelBarDataProxy;
	}

	class QItemModelBarDataProxy {
		___pointer: number;
		QItemModelBarDataProxy_PTR():QItemModelBarDataProxy;
		Pointer():number;
		SetPointer(p:number):void;
		AutoColumnCategories():boolean;
		ConnectAutoColumnCategoriesChanged(f:(enable:boolean)=>void):void;
		DisconnectAutoColumnCategoriesChanged():void;
		AutoColumnCategoriesChanged(enable:boolean):void;
		AutoRowCategories():boolean;
		ConnectAutoRowCategoriesChanged(f:(enable:boolean)=>void):void;
		DisconnectAutoRowCategoriesChanged():void;
		AutoRowCategoriesChanged(enable:boolean):void;
		ColumnCategories():string[];
		ConnectColumnCategoriesChanged(f:()=>void):void;
		DisconnectColumnCategoriesChanged():void;
		ColumnCategoriesChanged():void;
		ColumnCategoryIndex(category:string):number;
		ColumnRole():string;
		ConnectColumnRoleChanged(f:(role:string)=>void):void;
		DisconnectColumnRoleChanged():void;
		ColumnRoleChanged(role:string):void;
		ColumnRolePattern():core.QRegExp;
		ConnectColumnRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectColumnRolePatternChanged():void;
		ColumnRolePatternChanged(pattern:core.QRegExp_ITF):void;
		ColumnRoleReplace():string;
		ConnectColumnRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectColumnRoleReplaceChanged():void;
		ColumnRoleReplaceChanged(replace:string):void;
		ItemModel():core.QAbstractItemModel;
		ConnectItemModelChanged(f:(itemModel:core.QAbstractItemModel)=>void):void;
		DisconnectItemModelChanged():void;
		ItemModelChanged(itemModel:core.QAbstractItemModel_ITF):void;
		MultiMatchBehavior():number;
		ConnectMultiMatchBehaviorChanged(f:(behavior:number)=>void):void;
		DisconnectMultiMatchBehaviorChanged():void;
		MultiMatchBehaviorChanged(behavior:number):void;
		Remap(rowRole:string,columnRole:string,valueRole:string,rotationRole:string,rowCategories:string[],columnCategories:string[]):void;
		RotationRole():string;
		ConnectRotationRoleChanged(f:(role:string)=>void):void;
		DisconnectRotationRoleChanged():void;
		RotationRoleChanged(role:string):void;
		RotationRolePattern():core.QRegExp;
		ConnectRotationRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectRotationRolePatternChanged():void;
		RotationRolePatternChanged(pattern:core.QRegExp_ITF):void;
		RotationRoleReplace():string;
		ConnectRotationRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectRotationRoleReplaceChanged():void;
		RotationRoleReplaceChanged(replace:string):void;
		RowCategories():string[];
		ConnectRowCategoriesChanged(f:()=>void):void;
		DisconnectRowCategoriesChanged():void;
		RowCategoriesChanged():void;
		RowCategoryIndex(category:string):number;
		RowRole():string;
		ConnectRowRoleChanged(f:(role:string)=>void):void;
		DisconnectRowRoleChanged():void;
		RowRoleChanged(role:string):void;
		RowRolePattern():core.QRegExp;
		ConnectRowRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectRowRolePatternChanged():void;
		RowRolePatternChanged(pattern:core.QRegExp_ITF):void;
		RowRoleReplace():string;
		ConnectRowRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectRowRoleReplaceChanged():void;
		RowRoleReplaceChanged(replace:string):void;
		SetAutoColumnCategories(enable:boolean):void;
		SetAutoRowCategories(enable:boolean):void;
		SetColumnCategories(categories:string[]):void;
		SetColumnRole(role:string):void;
		SetColumnRolePattern(pattern:core.QRegExp_ITF):void;
		SetColumnRoleReplace(replace:string):void;
		SetItemModel(itemModel:core.QAbstractItemModel_ITF):void;
		SetMultiMatchBehavior(behavior:number):void;
		SetRotationRole(role:string):void;
		SetRotationRolePattern(pattern:core.QRegExp_ITF):void;
		SetRotationRoleReplace(replace:string):void;
		SetRowCategories(categories:string[]):void;
		SetRowRole(role:string):void;
		SetRowRolePattern(pattern:core.QRegExp_ITF):void;
		SetRowRoleReplace(replace:string):void;
		SetUseModelCategories(enable:boolean):void;
		SetValueRole(role:string):void;
		SetValueRolePattern(pattern:core.QRegExp_ITF):void;
		SetValueRoleReplace(replace:string):void;
		UseModelCategories():boolean;
		ConnectUseModelCategoriesChanged(f:(enable:boolean)=>void):void;
		DisconnectUseModelCategoriesChanged():void;
		UseModelCategoriesChanged(enable:boolean):void;
		ValueRole():string;
		ConnectValueRoleChanged(f:(role:string)=>void):void;
		DisconnectValueRoleChanged():void;
		ValueRoleChanged(role:string):void;
		ValueRolePattern():core.QRegExp;
		ConnectValueRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectValueRolePatternChanged():void;
		ValueRolePatternChanged(pattern:core.QRegExp_ITF):void;
		ValueRoleReplace():string;
		ConnectValueRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectValueRoleReplaceChanged():void;
		ValueRoleReplaceChanged(replace:string):void;
		ConnectDestroyQItemModelBarDataProxy(f:()=>void):void;
		DisconnectDestroyQItemModelBarDataProxy():void;
		DestroyQItemModelBarDataProxy():void;
		DestroyQItemModelBarDataProxyDefault():void;
	}
	function NewQItemModelBarDataProxyFromPointer(ptr:number):QItemModelBarDataProxy;
	function NewQItemModelBarDataProxy(parent:core.QObject_ITF):QItemModelBarDataProxy;
	function NewQItemModelBarDataProxy2(itemModel:core.QAbstractItemModel_ITF,parent:core.QObject_ITF):QItemModelBarDataProxy;
	function NewQItemModelBarDataProxy3(itemModel:core.QAbstractItemModel_ITF,valueRole:string,parent:core.QObject_ITF):QItemModelBarDataProxy;
	function NewQItemModelBarDataProxy4(itemModel:core.QAbstractItemModel_ITF,rowRole:string,columnRole:string,valueRole:string,parent:core.QObject_ITF):QItemModelBarDataProxy;
	function NewQItemModelBarDataProxy5(itemModel:core.QAbstractItemModel_ITF,rowRole:string,columnRole:string,valueRole:string,rotationRole:string,parent:core.QObject_ITF):QItemModelBarDataProxy;
	function NewQItemModelBarDataProxy6(itemModel:core.QAbstractItemModel_ITF,rowRole:string,columnRole:string,valueRole:string,rowCategories:string[],columnCategories:string[],parent:core.QObject_ITF):QItemModelBarDataProxy;
	function NewQItemModelBarDataProxy7(itemModel:core.QAbstractItemModel_ITF,rowRole:string,columnRole:string,valueRole:string,rotationRole:string,rowCategories:string[],columnCategories:string[],parent:core.QObject_ITF):QItemModelBarDataProxy;
	const QItemModelBarDataProxy__MMBFirst: number;
	const QItemModelBarDataProxy__MMBLast: number;
	const QItemModelBarDataProxy__MMBAverage: number;
	const QItemModelBarDataProxy__MMBCumulative: number;
	interface QItemModelScatterDataProxy_ITF {
		QItemModelScatterDataProxy_PTR():QItemModelScatterDataProxy;
	}

	class QItemModelScatterDataProxy {
		___pointer: number;
		QItemModelScatterDataProxy_PTR():QItemModelScatterDataProxy;
		Pointer():number;
		SetPointer(p:number):void;
		ItemModel():core.QAbstractItemModel;
		ConnectItemModelChanged(f:(itemModel:core.QAbstractItemModel)=>void):void;
		DisconnectItemModelChanged():void;
		ItemModelChanged(itemModel:core.QAbstractItemModel_ITF):void;
		Remap(xPosRole:string,yPosRole:string,zPosRole:string,rotationRole:string):void;
		RotationRole():string;
		ConnectRotationRoleChanged(f:(role:string)=>void):void;
		DisconnectRotationRoleChanged():void;
		RotationRoleChanged(role:string):void;
		RotationRolePattern():core.QRegExp;
		ConnectRotationRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectRotationRolePatternChanged():void;
		RotationRolePatternChanged(pattern:core.QRegExp_ITF):void;
		RotationRoleReplace():string;
		ConnectRotationRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectRotationRoleReplaceChanged():void;
		RotationRoleReplaceChanged(replace:string):void;
		SetItemModel(itemModel:core.QAbstractItemModel_ITF):void;
		SetRotationRole(role:string):void;
		SetRotationRolePattern(pattern:core.QRegExp_ITF):void;
		SetRotationRoleReplace(replace:string):void;
		SetXPosRole(role:string):void;
		SetXPosRolePattern(pattern:core.QRegExp_ITF):void;
		SetXPosRoleReplace(replace:string):void;
		SetYPosRole(role:string):void;
		SetYPosRolePattern(pattern:core.QRegExp_ITF):void;
		SetYPosRoleReplace(replace:string):void;
		SetZPosRole(role:string):void;
		SetZPosRolePattern(pattern:core.QRegExp_ITF):void;
		SetZPosRoleReplace(replace:string):void;
		XPosRole():string;
		ConnectXPosRoleChanged(f:(role:string)=>void):void;
		DisconnectXPosRoleChanged():void;
		XPosRoleChanged(role:string):void;
		XPosRolePattern():core.QRegExp;
		ConnectXPosRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectXPosRolePatternChanged():void;
		XPosRolePatternChanged(pattern:core.QRegExp_ITF):void;
		XPosRoleReplace():string;
		ConnectXPosRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectXPosRoleReplaceChanged():void;
		XPosRoleReplaceChanged(replace:string):void;
		YPosRole():string;
		ConnectYPosRoleChanged(f:(role:string)=>void):void;
		DisconnectYPosRoleChanged():void;
		YPosRoleChanged(role:string):void;
		YPosRolePattern():core.QRegExp;
		ConnectYPosRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectYPosRolePatternChanged():void;
		YPosRolePatternChanged(pattern:core.QRegExp_ITF):void;
		YPosRoleReplace():string;
		ConnectYPosRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectYPosRoleReplaceChanged():void;
		YPosRoleReplaceChanged(replace:string):void;
		ZPosRole():string;
		ConnectZPosRoleChanged(f:(role:string)=>void):void;
		DisconnectZPosRoleChanged():void;
		ZPosRoleChanged(role:string):void;
		ZPosRolePattern():core.QRegExp;
		ConnectZPosRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectZPosRolePatternChanged():void;
		ZPosRolePatternChanged(pattern:core.QRegExp_ITF):void;
		ZPosRoleReplace():string;
		ConnectZPosRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectZPosRoleReplaceChanged():void;
		ZPosRoleReplaceChanged(replace:string):void;
		ConnectDestroyQItemModelScatterDataProxy(f:()=>void):void;
		DisconnectDestroyQItemModelScatterDataProxy():void;
		DestroyQItemModelScatterDataProxy():void;
		DestroyQItemModelScatterDataProxyDefault():void;
	}
	function NewQItemModelScatterDataProxyFromPointer(ptr:number):QItemModelScatterDataProxy;
	function NewQItemModelScatterDataProxy(parent:core.QObject_ITF):QItemModelScatterDataProxy;
	function NewQItemModelScatterDataProxy2(itemModel:core.QAbstractItemModel_ITF,parent:core.QObject_ITF):QItemModelScatterDataProxy;
	function NewQItemModelScatterDataProxy3(itemModel:core.QAbstractItemModel_ITF,xPosRole:string,yPosRole:string,zPosRole:string,parent:core.QObject_ITF):QItemModelScatterDataProxy;
	function NewQItemModelScatterDataProxy4(itemModel:core.QAbstractItemModel_ITF,xPosRole:string,yPosRole:string,zPosRole:string,rotationRole:string,parent:core.QObject_ITF):QItemModelScatterDataProxy;
	interface QItemModelSurfaceDataProxy_ITF {
		QItemModelSurfaceDataProxy_PTR():QItemModelSurfaceDataProxy;
	}

	class QItemModelSurfaceDataProxy {
		___pointer: number;
		QItemModelSurfaceDataProxy_PTR():QItemModelSurfaceDataProxy;
		Pointer():number;
		SetPointer(p:number):void;
		AutoColumnCategories():boolean;
		ConnectAutoColumnCategoriesChanged(f:(enable:boolean)=>void):void;
		DisconnectAutoColumnCategoriesChanged():void;
		AutoColumnCategoriesChanged(enable:boolean):void;
		AutoRowCategories():boolean;
		ConnectAutoRowCategoriesChanged(f:(enable:boolean)=>void):void;
		DisconnectAutoRowCategoriesChanged():void;
		AutoRowCategoriesChanged(enable:boolean):void;
		ColumnCategories():string[];
		ConnectColumnCategoriesChanged(f:()=>void):void;
		DisconnectColumnCategoriesChanged():void;
		ColumnCategoriesChanged():void;
		ColumnCategoryIndex(category:string):number;
		ColumnRole():string;
		ConnectColumnRoleChanged(f:(role:string)=>void):void;
		DisconnectColumnRoleChanged():void;
		ColumnRoleChanged(role:string):void;
		ColumnRolePattern():core.QRegExp;
		ConnectColumnRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectColumnRolePatternChanged():void;
		ColumnRolePatternChanged(pattern:core.QRegExp_ITF):void;
		ColumnRoleReplace():string;
		ConnectColumnRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectColumnRoleReplaceChanged():void;
		ColumnRoleReplaceChanged(replace:string):void;
		ItemModel():core.QAbstractItemModel;
		ConnectItemModelChanged(f:(itemModel:core.QAbstractItemModel)=>void):void;
		DisconnectItemModelChanged():void;
		ItemModelChanged(itemModel:core.QAbstractItemModel_ITF):void;
		MultiMatchBehavior():number;
		ConnectMultiMatchBehaviorChanged(f:(behavior:number)=>void):void;
		DisconnectMultiMatchBehaviorChanged():void;
		MultiMatchBehaviorChanged(behavior:number):void;
		Remap(rowRole:string,columnRole:string,xPosRole:string,yPosRole:string,zPosRole:string,rowCategories:string[],columnCategories:string[]):void;
		RowCategories():string[];
		ConnectRowCategoriesChanged(f:()=>void):void;
		DisconnectRowCategoriesChanged():void;
		RowCategoriesChanged():void;
		RowCategoryIndex(category:string):number;
		RowRole():string;
		ConnectRowRoleChanged(f:(role:string)=>void):void;
		DisconnectRowRoleChanged():void;
		RowRoleChanged(role:string):void;
		RowRolePattern():core.QRegExp;
		ConnectRowRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectRowRolePatternChanged():void;
		RowRolePatternChanged(pattern:core.QRegExp_ITF):void;
		RowRoleReplace():string;
		ConnectRowRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectRowRoleReplaceChanged():void;
		RowRoleReplaceChanged(replace:string):void;
		SetAutoColumnCategories(enable:boolean):void;
		SetAutoRowCategories(enable:boolean):void;
		SetColumnCategories(categories:string[]):void;
		SetColumnRole(role:string):void;
		SetColumnRolePattern(pattern:core.QRegExp_ITF):void;
		SetColumnRoleReplace(replace:string):void;
		SetItemModel(itemModel:core.QAbstractItemModel_ITF):void;
		SetMultiMatchBehavior(behavior:number):void;
		SetRowCategories(categories:string[]):void;
		SetRowRole(role:string):void;
		SetRowRolePattern(pattern:core.QRegExp_ITF):void;
		SetRowRoleReplace(replace:string):void;
		SetUseModelCategories(enable:boolean):void;
		SetXPosRole(role:string):void;
		SetXPosRolePattern(pattern:core.QRegExp_ITF):void;
		SetXPosRoleReplace(replace:string):void;
		SetYPosRole(role:string):void;
		SetYPosRolePattern(pattern:core.QRegExp_ITF):void;
		SetYPosRoleReplace(replace:string):void;
		SetZPosRole(role:string):void;
		SetZPosRolePattern(pattern:core.QRegExp_ITF):void;
		SetZPosRoleReplace(replace:string):void;
		UseModelCategories():boolean;
		ConnectUseModelCategoriesChanged(f:(enable:boolean)=>void):void;
		DisconnectUseModelCategoriesChanged():void;
		UseModelCategoriesChanged(enable:boolean):void;
		XPosRole():string;
		ConnectXPosRoleChanged(f:(role:string)=>void):void;
		DisconnectXPosRoleChanged():void;
		XPosRoleChanged(role:string):void;
		XPosRolePattern():core.QRegExp;
		ConnectXPosRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectXPosRolePatternChanged():void;
		XPosRolePatternChanged(pattern:core.QRegExp_ITF):void;
		XPosRoleReplace():string;
		ConnectXPosRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectXPosRoleReplaceChanged():void;
		XPosRoleReplaceChanged(replace:string):void;
		YPosRole():string;
		ConnectYPosRoleChanged(f:(role:string)=>void):void;
		DisconnectYPosRoleChanged():void;
		YPosRoleChanged(role:string):void;
		YPosRolePattern():core.QRegExp;
		ConnectYPosRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectYPosRolePatternChanged():void;
		YPosRolePatternChanged(pattern:core.QRegExp_ITF):void;
		YPosRoleReplace():string;
		ConnectYPosRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectYPosRoleReplaceChanged():void;
		YPosRoleReplaceChanged(replace:string):void;
		ZPosRole():string;
		ConnectZPosRoleChanged(f:(role:string)=>void):void;
		DisconnectZPosRoleChanged():void;
		ZPosRoleChanged(role:string):void;
		ZPosRolePattern():core.QRegExp;
		ConnectZPosRolePatternChanged(f:(pattern:core.QRegExp)=>void):void;
		DisconnectZPosRolePatternChanged():void;
		ZPosRolePatternChanged(pattern:core.QRegExp_ITF):void;
		ZPosRoleReplace():string;
		ConnectZPosRoleReplaceChanged(f:(replace:string)=>void):void;
		DisconnectZPosRoleReplaceChanged():void;
		ZPosRoleReplaceChanged(replace:string):void;
		ConnectDestroyQItemModelSurfaceDataProxy(f:()=>void):void;
		DisconnectDestroyQItemModelSurfaceDataProxy():void;
		DestroyQItemModelSurfaceDataProxy():void;
		DestroyQItemModelSurfaceDataProxyDefault():void;
	}
	function NewQItemModelSurfaceDataProxyFromPointer(ptr:number):QItemModelSurfaceDataProxy;
	function NewQItemModelSurfaceDataProxy(parent:core.QObject_ITF):QItemModelSurfaceDataProxy;
	function NewQItemModelSurfaceDataProxy2(itemModel:core.QAbstractItemModel_ITF,parent:core.QObject_ITF):QItemModelSurfaceDataProxy;
	function NewQItemModelSurfaceDataProxy3(itemModel:core.QAbstractItemModel_ITF,yPosRole:string,parent:core.QObject_ITF):QItemModelSurfaceDataProxy;
	function NewQItemModelSurfaceDataProxy4(itemModel:core.QAbstractItemModel_ITF,rowRole:string,columnRole:string,yPosRole:string,parent:core.QObject_ITF):QItemModelSurfaceDataProxy;
	function NewQItemModelSurfaceDataProxy5(itemModel:core.QAbstractItemModel_ITF,rowRole:string,columnRole:string,xPosRole:string,yPosRole:string,zPosRole:string,parent:core.QObject_ITF):QItemModelSurfaceDataProxy;
	function NewQItemModelSurfaceDataProxy6(itemModel:core.QAbstractItemModel_ITF,rowRole:string,columnRole:string,yPosRole:string,rowCategories:string[],columnCategories:string[],parent:core.QObject_ITF):QItemModelSurfaceDataProxy;
	function NewQItemModelSurfaceDataProxy7(itemModel:core.QAbstractItemModel_ITF,rowRole:string,columnRole:string,xPosRole:string,yPosRole:string,zPosRole:string,rowCategories:string[],columnCategories:string[],parent:core.QObject_ITF):QItemModelSurfaceDataProxy;
	const QItemModelSurfaceDataProxy__MMBFirst: number;
	const QItemModelSurfaceDataProxy__MMBLast: number;
	const QItemModelSurfaceDataProxy__MMBAverage: number;
	const QItemModelSurfaceDataProxy__MMBCumulativeY: number;
	interface QLogValue3DAxisFormatter_ITF {
		QLogValue3DAxisFormatter_PTR():QLogValue3DAxisFormatter;
	}

	class QLogValue3DAxisFormatter {
		___pointer: number;
		QLogValue3DAxisFormatter_PTR():QLogValue3DAxisFormatter;
		Pointer():number;
		SetPointer(p:number):void;
		AutoSubGrid():boolean;
		ConnectAutoSubGridChanged(f:(enabled:boolean)=>void):void;
		DisconnectAutoSubGridChanged():void;
		AutoSubGridChanged(enabled:boolean):void;
		Base():number;
		ConnectBaseChanged(f:(base:number)=>void):void;
		DisconnectBaseChanged():void;
		BaseChanged(base:number):void;
		SetAutoSubGrid(enabled:boolean):void;
		SetBase(base:number):void;
		SetShowEdgeLabels(enabled:boolean):void;
		ShowEdgeLabels():boolean;
		ConnectShowEdgeLabelsChanged(f:(enabled:boolean)=>void):void;
		DisconnectShowEdgeLabelsChanged():void;
		ShowEdgeLabelsChanged(enabled:boolean):void;
		ConnectDestroyQLogValue3DAxisFormatter(f:()=>void):void;
		DisconnectDestroyQLogValue3DAxisFormatter():void;
		DestroyQLogValue3DAxisFormatter():void;
		DestroyQLogValue3DAxisFormatterDefault():void;
	}
	function NewQLogValue3DAxisFormatterFromPointer(ptr:number):QLogValue3DAxisFormatter;
	function NewQLogValue3DAxisFormatter2(parent:core.QObject_ITF):QLogValue3DAxisFormatter;
	interface QScatter3DSeries_ITF {
		QScatter3DSeries_PTR():QScatter3DSeries;
	}

	class QScatter3DSeries {
		___pointer: number;
		QScatter3DSeries_PTR():QScatter3DSeries;
		Pointer():number;
		SetPointer(p:number):void;
		DataProxy():QScatterDataProxy;
		ConnectDataProxyChanged(f:(proxy:QScatterDataProxy)=>void):void;
		DisconnectDataProxyChanged():void;
		DataProxyChanged(proxy:QScatterDataProxy_ITF):void;
		InvalidSelectionIndex():number;
		ItemSize():number;
		ConnectItemSizeChanged(f:(size:number)=>void):void;
		DisconnectItemSizeChanged():void;
		ItemSizeChanged(size:number):void;
		SelectedItem():number;
		ConnectSelectedItemChanged(f:(index:number)=>void):void;
		DisconnectSelectedItemChanged():void;
		SelectedItemChanged(index:number):void;
		SetDataProxy(proxy:QScatterDataProxy_ITF):void;
		SetItemSize(size:number):void;
		SetSelectedItem(index:number):void;
		ConnectDestroyQScatter3DSeries(f:()=>void):void;
		DisconnectDestroyQScatter3DSeries():void;
		DestroyQScatter3DSeries():void;
		DestroyQScatter3DSeriesDefault():void;
	}
	function NewQScatter3DSeriesFromPointer(ptr:number):QScatter3DSeries;
	function NewQScatter3DSeries(parent:core.QObject_ITF):QScatter3DSeries;
	function NewQScatter3DSeries2(dataProxy:QScatterDataProxy_ITF,parent:core.QObject_ITF):QScatter3DSeries;
	function QScatter3DSeries_InvalidSelectionIndex():number;
	interface QScatterDataItem_ITF {
		QScatterDataItem_PTR():QScatterDataItem;
	}

	class QScatterDataItem {
		___pointer: number;
		QScatterDataItem_PTR():QScatterDataItem;
		Pointer():number;
		SetPointer(p:number):void;
		Position():gui.QVector3D;
		Rotation():gui.QQuaternion;
		SetPosition(pos:gui.QVector3D_ITF):void;
		SetRotation(rot:gui.QQuaternion_ITF):void;
		SetX(value:number):void;
		SetY(value:number):void;
		SetZ(value:number):void;
		X():number;
		Y():number;
		Z():number;
		DestroyQScatterDataItem():void;
	}
	function NewQScatterDataItemFromPointer(ptr:number):QScatterDataItem;
	function NewQScatterDataItem():QScatterDataItem;
	function NewQScatterDataItem2(position:gui.QVector3D_ITF):QScatterDataItem;
	function NewQScatterDataItem3(position:gui.QVector3D_ITF,rotation:gui.QQuaternion_ITF):QScatterDataItem;
	function NewQScatterDataItem4(other:QScatterDataItem_ITF):QScatterDataItem;
	interface QScatterDataProxy_ITF {
		QScatterDataProxy_PTR():QScatterDataProxy;
	}

	class QScatterDataProxy {
		___pointer: number;
		QScatterDataProxy_PTR():QScatterDataProxy;
		Pointer():number;
		SetPointer(p:number):void;
		AddItem(item:QScatterDataItem_ITF):number;
		ConnectArrayReset(f:()=>void):void;
		DisconnectArrayReset():void;
		ArrayReset():void;
		InsertItem(index:number,item:QScatterDataItem_ITF):void;
		ItemAt(index:number):QScatterDataItem;
		ItemCount():number;
		ConnectItemCountChanged(f:(count:number)=>void):void;
		DisconnectItemCountChanged():void;
		ItemCountChanged(count:number):void;
		ConnectItemsAdded(f:(startIndex:number,count:number)=>void):void;
		DisconnectItemsAdded():void;
		ItemsAdded(startIndex:number,count:number):void;
		ConnectItemsChanged(f:(startIndex:number,count:number)=>void):void;
		DisconnectItemsChanged():void;
		ItemsChanged(startIndex:number,count:number):void;
		ConnectItemsInserted(f:(startIndex:number,count:number)=>void):void;
		DisconnectItemsInserted():void;
		ItemsInserted(startIndex:number,count:number):void;
		ConnectItemsRemoved(f:(startIndex:number,count:number)=>void):void;
		DisconnectItemsRemoved():void;
		ItemsRemoved(startIndex:number,count:number):void;
		RemoveItems(index:number,removeCount:number):void;
		Series():QScatter3DSeries;
		ConnectSeriesChanged(f:(series:QScatter3DSeries)=>void):void;
		DisconnectSeriesChanged():void;
		SeriesChanged(series:QScatter3DSeries_ITF):void;
		SetItem(index:number,item:QScatterDataItem_ITF):void;
		ConnectDestroyQScatterDataProxy(f:()=>void):void;
		DisconnectDestroyQScatterDataProxy():void;
		DestroyQScatterDataProxy():void;
		DestroyQScatterDataProxyDefault():void;
	}
	function NewQScatterDataProxyFromPointer(ptr:number):QScatterDataProxy;
	function NewQScatterDataProxy(parent:core.QObject_ITF):QScatterDataProxy;
	interface QSurface3DSeries_ITF {
		QSurface3DSeries_PTR():QSurface3DSeries;
	}

	class QSurface3DSeries {
		___pointer: number;
		QSurface3DSeries_PTR():QSurface3DSeries;
		Pointer():number;
		SetPointer(p:number):void;
		DataProxy():QSurfaceDataProxy;
		ConnectDataProxyChanged(f:(proxy:QSurfaceDataProxy)=>void):void;
		DisconnectDataProxyChanged():void;
		DataProxyChanged(proxy:QSurfaceDataProxy_ITF):void;
		DrawMode():number;
		ConnectDrawModeChanged(f:(mode:number)=>void):void;
		DisconnectDrawModeChanged():void;
		DrawModeChanged(mode:number):void;
		ConnectFlatShadingEnabledChanged(f:(enable:boolean)=>void):void;
		DisconnectFlatShadingEnabledChanged():void;
		FlatShadingEnabledChanged(enable:boolean):void;
		ConnectFlatShadingSupportedChanged(f:(enable:boolean)=>void):void;
		DisconnectFlatShadingSupportedChanged():void;
		FlatShadingSupportedChanged(enable:boolean):void;
		InvalidSelectionPosition():core.QPoint;
		IsFlatShadingEnabled():boolean;
		IsFlatShadingSupported():boolean;
		SelectedPoint():core.QPoint;
		ConnectSelectedPointChanged(f:(position:core.QPoint)=>void):void;
		DisconnectSelectedPointChanged():void;
		SelectedPointChanged(position:core.QPoint_ITF):void;
		SetDataProxy(proxy:QSurfaceDataProxy_ITF):void;
		SetDrawMode(mode:number):void;
		SetFlatShadingEnabled(enabled:boolean):void;
		SetSelectedPoint(position:core.QPoint_ITF):void;
		SetTexture(texture:gui.QImage_ITF):void;
		SetTextureFile(filename:string):void;
		Texture():gui.QImage;
		ConnectTextureChanged(f:(image:gui.QImage)=>void):void;
		DisconnectTextureChanged():void;
		TextureChanged(image:gui.QImage_ITF):void;
		TextureFile():string;
		ConnectTextureFileChanged(f:(filename:string)=>void):void;
		DisconnectTextureFileChanged():void;
		TextureFileChanged(filename:string):void;
		ConnectDestroyQSurface3DSeries(f:()=>void):void;
		DisconnectDestroyQSurface3DSeries():void;
		DestroyQSurface3DSeries():void;
		DestroyQSurface3DSeriesDefault():void;
	}
	function NewQSurface3DSeriesFromPointer(ptr:number):QSurface3DSeries;
	function NewQSurface3DSeries(parent:core.QObject_ITF):QSurface3DSeries;
	function NewQSurface3DSeries2(dataProxy:QSurfaceDataProxy_ITF,parent:core.QObject_ITF):QSurface3DSeries;
	function QSurface3DSeries_InvalidSelectionPosition():core.QPoint;
	const QSurface3DSeries__DrawWireframe: number;
	const QSurface3DSeries__DrawSurface: number;
	const QSurface3DSeries__DrawSurfaceAndWireframe: number;
	interface QSurfaceDataItem_ITF {
		QSurfaceDataItem_PTR():QSurfaceDataItem;
	}

	class QSurfaceDataItem {
		___pointer: number;
		QSurfaceDataItem_PTR():QSurfaceDataItem;
		Pointer():number;
		SetPointer(p:number):void;
		Position():gui.QVector3D;
		SetPosition(pos:gui.QVector3D_ITF):void;
		SetX(value:number):void;
		SetY(value:number):void;
		SetZ(value:number):void;
		X():number;
		Y():number;
		Z():number;
		DestroyQSurfaceDataItem():void;
	}
	function NewQSurfaceDataItemFromPointer(ptr:number):QSurfaceDataItem;
	function NewQSurfaceDataItem():QSurfaceDataItem;
	function NewQSurfaceDataItem2(position:gui.QVector3D_ITF):QSurfaceDataItem;
	function NewQSurfaceDataItem3(other:QSurfaceDataItem_ITF):QSurfaceDataItem;
	interface QSurfaceDataProxy_ITF {
		QSurfaceDataProxy_PTR():QSurfaceDataProxy;
	}

	class QSurfaceDataProxy {
		___pointer: number;
		QSurfaceDataProxy_PTR():QSurfaceDataProxy;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectArrayReset(f:()=>void):void;
		DisconnectArrayReset():void;
		ArrayReset():void;
		ColumnCount():number;
		ConnectColumnCountChanged(f:(count:number)=>void):void;
		DisconnectColumnCountChanged():void;
		ColumnCountChanged(count:number):void;
		ItemAt(rowIndex:number,columnIndex:number):QSurfaceDataItem;
		ItemAt2(position:core.QPoint_ITF):QSurfaceDataItem;
		ConnectItemChanged(f:(rowIndex:number,columnIndex:number)=>void):void;
		DisconnectItemChanged():void;
		ItemChanged(rowIndex:number,columnIndex:number):void;
		RemoveRows(rowIndex:number,removeCount:number):void;
		RowCount():number;
		ConnectRowCountChanged(f:(count:number)=>void):void;
		DisconnectRowCountChanged():void;
		RowCountChanged(count:number):void;
		ConnectRowsAdded(f:(startIndex:number,count:number)=>void):void;
		DisconnectRowsAdded():void;
		RowsAdded(startIndex:number,count:number):void;
		ConnectRowsChanged(f:(startIndex:number,count:number)=>void):void;
		DisconnectRowsChanged():void;
		RowsChanged(startIndex:number,count:number):void;
		ConnectRowsInserted(f:(startIndex:number,count:number)=>void):void;
		DisconnectRowsInserted():void;
		RowsInserted(startIndex:number,count:number):void;
		ConnectRowsRemoved(f:(startIndex:number,count:number)=>void):void;
		DisconnectRowsRemoved():void;
		RowsRemoved(startIndex:number,count:number):void;
		Series():QSurface3DSeries;
		ConnectSeriesChanged(f:(series:QSurface3DSeries)=>void):void;
		DisconnectSeriesChanged():void;
		SeriesChanged(series:QSurface3DSeries_ITF):void;
		SetItem(rowIndex:number,columnIndex:number,item:QSurfaceDataItem_ITF):void;
		SetItem2(position:core.QPoint_ITF,item:QSurfaceDataItem_ITF):void;
		ConnectDestroyQSurfaceDataProxy(f:()=>void):void;
		DisconnectDestroyQSurfaceDataProxy():void;
		DestroyQSurfaceDataProxy():void;
		DestroyQSurfaceDataProxyDefault():void;
	}
	function NewQSurfaceDataProxyFromPointer(ptr:number):QSurfaceDataProxy;
	function NewQSurfaceDataProxy(parent:core.QObject_ITF):QSurfaceDataProxy;
	interface QTouch3DInputHandler_ITF {
		QTouch3DInputHandler_PTR():QTouch3DInputHandler;
	}

	class QTouch3DInputHandler {
		___pointer: number;
		QTouch3DInputHandler_PTR():QTouch3DInputHandler;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectTouchEvent(f:(event:gui.QTouchEvent)=>void):void;
		DisconnectTouchEvent():void;
		TouchEvent(event:gui.QTouchEvent_ITF):void;
		TouchEventDefault(event:gui.QTouchEvent_ITF):void;
		ConnectDestroyQTouch3DInputHandler(f:()=>void):void;
		DisconnectDestroyQTouch3DInputHandler():void;
		DestroyQTouch3DInputHandler():void;
		DestroyQTouch3DInputHandlerDefault():void;
	}
	function NewQTouch3DInputHandlerFromPointer(ptr:number):QTouch3DInputHandler;
	function NewQTouch3DInputHandler(parent:core.QObject_ITF):QTouch3DInputHandler;
	interface QValue3DAxis_ITF {
		QValue3DAxis_PTR():QValue3DAxis;
	}

	class QValue3DAxis {
		___pointer: number;
		QValue3DAxis_PTR():QValue3DAxis;
		Pointer():number;
		SetPointer(p:number):void;
		Formatter():QValue3DAxisFormatter;
		ConnectFormatterChanged(f:(formatter:QValue3DAxisFormatter)=>void):void;
		DisconnectFormatterChanged():void;
		FormatterChanged(formatter:QValue3DAxisFormatter_ITF):void;
		LabelFormat():string;
		ConnectLabelFormatChanged(f:(format:string)=>void):void;
		DisconnectLabelFormatChanged():void;
		LabelFormatChanged(format:string):void;
		Reversed():boolean;
		ConnectReversedChanged(f:(enable:boolean)=>void):void;
		DisconnectReversedChanged():void;
		ReversedChanged(enable:boolean):void;
		SegmentCount():number;
		ConnectSegmentCountChanged(f:(count:number)=>void):void;
		DisconnectSegmentCountChanged():void;
		SegmentCountChanged(count:number):void;
		SetFormatter(formatter:QValue3DAxisFormatter_ITF):void;
		SetLabelFormat(format:string):void;
		SetReversed(enable:boolean):void;
		SetSegmentCount(count:number):void;
		SetSubSegmentCount(count:number):void;
		SubSegmentCount():number;
		ConnectSubSegmentCountChanged(f:(count:number)=>void):void;
		DisconnectSubSegmentCountChanged():void;
		SubSegmentCountChanged(count:number):void;
		ConnectDestroyQValue3DAxis(f:()=>void):void;
		DisconnectDestroyQValue3DAxis():void;
		DestroyQValue3DAxis():void;
		DestroyQValue3DAxisDefault():void;
	}
	function NewQValue3DAxisFromPointer(ptr:number):QValue3DAxis;
	function NewQValue3DAxis(parent:core.QObject_ITF):QValue3DAxis;
	function NewQValue3DAxisFormatter2(parent:core.QObject_ITF):QValue3DAxisFormatter;
	interface QValue3DAxisFormatter_ITF {
		QValue3DAxisFormatter_PTR():QValue3DAxisFormatter;
	}

	class QValue3DAxisFormatter {
		___pointer: number;
		QValue3DAxisFormatter_PTR():QValue3DAxisFormatter;
		Pointer():number;
		SetPointer(p:number):void;
		AllowNegatives():boolean;
		AllowZero():boolean;
		Axis():QValue3DAxis;
		ConnectCreateNewInstance(f:()=>QValue3DAxisFormatter):void;
		DisconnectCreateNewInstance():void;
		CreateNewInstance():QValue3DAxisFormatter;
		CreateNewInstanceDefault():QValue3DAxisFormatter;
		GridPositions():number[];
		LabelPositions():number[];
		LabelStrings():string[];
		Locale():core.QLocale;
		MarkDirty(labelsChange:boolean):void;
		ConnectPopulateCopy(f:(copy:QValue3DAxisFormatter)=>void):void;
		DisconnectPopulateCopy():void;
		PopulateCopy(copy:QValue3DAxisFormatter_ITF):void;
		PopulateCopyDefault(copy:QValue3DAxisFormatter_ITF):void;
		ConnectPositionAt(f:(value:number)=>number):void;
		DisconnectPositionAt():void;
		PositionAt(value:number):number;
		PositionAtDefault(value:number):number;
		ConnectRecalculate(f:()=>void):void;
		DisconnectRecalculate():void;
		Recalculate():void;
		RecalculateDefault():void;
		SetAllowNegatives(allow:boolean):void;
		SetAllowZero(allow:boolean):void;
		SetLocale(locale:core.QLocale_ITF):void;
		ConnectStringForValue(f:(value:number,format:string)=>string):void;
		DisconnectStringForValue():void;
		StringForValue(value:number,format:string):string;
		StringForValueDefault(value:number,format:string):string;
		SubGridPositions():number[];
		ConnectValueAt(f:(position:number)=>number):void;
		DisconnectValueAt():void;
		ValueAt(position:number):number;
		ValueAtDefault(position:number):number;
		ConnectDestroyQValue3DAxisFormatter(f:()=>void):void;
		DisconnectDestroyQValue3DAxisFormatter():void;
		DestroyQValue3DAxisFormatter():void;
		DestroyQValue3DAxisFormatterDefault():void;
	}
	function NewQValue3DAxisFormatterFromPointer(ptr:number):QValue3DAxisFormatter;
	function NewQValue3DAxisFormatter2(parent:core.QObject_ITF):QValue3DAxisFormatter;
}
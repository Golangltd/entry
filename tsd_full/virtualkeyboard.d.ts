/// <reference path="core.d.ts" />
declare namespace virtualkeyboard {
	interface QVirtualKeyboardAbstractInputMethod_ITF extends core.QObject_ITF {
		QVirtualKeyboardAbstractInputMethod_PTR():QVirtualKeyboardAbstractInputMethod;
	}

	class QVirtualKeyboardAbstractInputMethod extends core.QObject {
		___pointer: number;
		QVirtualKeyboardAbstractInputMethod_PTR():QVirtualKeyboardAbstractInputMethod;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectClickPreeditText(f:(cursorPosition:number)=>boolean):void;
		DisconnectClickPreeditText():void;
		ClickPreeditText(cursorPosition:number):boolean;
		ClickPreeditTextDefault(cursorPosition:number):boolean;
		InputContext():QVirtualKeyboardInputContext;
		InputEngine():QVirtualKeyboardInputEngine;
		ConnectInputModes(f:(locale:string)=>number):void;
		DisconnectInputModes():void;
		InputModes(locale:string):number;
		ConnectKeyEvent(f:(key:number,text:string,modifiers:number)=>boolean):void;
		DisconnectKeyEvent():void;
		KeyEvent(key:number,text:string,modifiers:number):boolean;
		ConnectPatternRecognitionModes(f:()=>number):void;
		DisconnectPatternRecognitionModes():void;
		PatternRecognitionModes():number;
		PatternRecognitionModesDefault():number;
		ConnectReselect(f:(cursorPosition:number,reselectFlags:number)=>boolean):void;
		DisconnectReselect():void;
		Reselect(cursorPosition:number,reselectFlags:number):boolean;
		ReselectDefault(cursorPosition:number,reselectFlags:number):boolean;
		ConnectReset(f:()=>void):void;
		DisconnectReset():void;
		Reset():void;
		ResetDefault():void;
		ConnectSelectionListActiveItemChanged(f:(ty:number,index:number)=>void):void;
		DisconnectSelectionListActiveItemChanged():void;
		SelectionListActiveItemChanged(ty:number,index:number):void;
		ConnectSelectionListChanged(f:(ty:number)=>void):void;
		DisconnectSelectionListChanged():void;
		SelectionListChanged(ty:number):void;
		ConnectSelectionListData(f:(ty:number,index:number,role:number)=>core.QVariant):void;
		DisconnectSelectionListData():void;
		SelectionListData(ty:number,index:number,role:number):core.QVariant;
		SelectionListDataDefault(ty:number,index:number,role:number):core.QVariant;
		ConnectSelectionListItemCount(f:(ty:number)=>number):void;
		DisconnectSelectionListItemCount():void;
		SelectionListItemCount(ty:number):number;
		SelectionListItemCountDefault(ty:number):number;
		ConnectSelectionListItemSelected(f:(ty:number,index:number)=>void):void;
		DisconnectSelectionListItemSelected():void;
		SelectionListItemSelected(ty:number,index:number):void;
		SelectionListItemSelectedDefault(ty:number,index:number):void;
		ConnectSelectionListRemoveItem(f:(ty:number,index:number)=>boolean):void;
		DisconnectSelectionListRemoveItem():void;
		SelectionListRemoveItem(ty:number,index:number):boolean;
		SelectionListRemoveItemDefault(ty:number,index:number):boolean;
		ConnectSelectionLists(f:()=>number):void;
		DisconnectSelectionLists():void;
		SelectionLists():number;
		SelectionListsDefault():number;
		ConnectSelectionListsChanged(f:()=>void):void;
		DisconnectSelectionListsChanged():void;
		SelectionListsChanged():void;
		ConnectSetInputMode(f:(locale:string,inputMode:number)=>boolean):void;
		DisconnectSetInputMode():void;
		SetInputMode(locale:string,inputMode:number):boolean;
		ConnectSetTextCase(f:(textCase:number)=>boolean):void;
		DisconnectSetTextCase():void;
		SetTextCase(textCase:number):boolean;
		ConnectTraceBegin(f:(traceId:number,patternRecognitionMode:number,traceCaptureDeviceInfo:Map<string,core.QVariant>,traceScreenInfo:Map<string,core.QVariant>)=>QVirtualKeyboardTrace):void;
		DisconnectTraceBegin():void;
		TraceBegin(traceId:number,patternRecognitionMode:number,traceCaptureDeviceInfo:Map<string,core.QVariant>,traceScreenInfo:Map<string,core.QVariant>):QVirtualKeyboardTrace;
		TraceBeginDefault(traceId:number,patternRecognitionMode:number,traceCaptureDeviceInfo:Map<string,core.QVariant>,traceScreenInfo:Map<string,core.QVariant>):QVirtualKeyboardTrace;
		ConnectTraceEnd(f:(trace:QVirtualKeyboardTrace)=>boolean):void;
		DisconnectTraceEnd():void;
		TraceEnd(trace:QVirtualKeyboardTrace_ITF):boolean;
		TraceEndDefault(trace:QVirtualKeyboardTrace_ITF):boolean;
		ConnectUpdate(f:()=>void):void;
		DisconnectUpdate():void;
		Update():void;
		UpdateDefault():void;
		ConnectDestroyQVirtualKeyboardAbstractInputMethod(f:()=>void):void;
		DisconnectDestroyQVirtualKeyboardAbstractInputMethod():void;
		DestroyQVirtualKeyboardAbstractInputMethod():void;
		DestroyQVirtualKeyboardAbstractInputMethodDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQVirtualKeyboardAbstractInputMethodFromPointer(ptr:number):QVirtualKeyboardAbstractInputMethod;
	function NewQVirtualKeyboardAbstractInputMethod(parent:core.QObject_ITF):QVirtualKeyboardAbstractInputMethod;
	interface QVirtualKeyboardExtensionPlugin_ITF extends core.QObject_ITF {
		QVirtualKeyboardExtensionPlugin_PTR():QVirtualKeyboardExtensionPlugin;
	}

	class QVirtualKeyboardExtensionPlugin extends core.QObject {
		___pointer: number;
		QVirtualKeyboardExtensionPlugin_PTR():QVirtualKeyboardExtensionPlugin;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectRegisterTypes(f:(uri:string)=>void):void;
		DisconnectRegisterTypes():void;
		RegisterTypes(uri:string):void;
		RegisterTypesDefault(uri:string):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQVirtualKeyboardExtensionPluginFromPointer(ptr:number):QVirtualKeyboardExtensionPlugin;
	interface QVirtualKeyboardInputContext_ITF extends core.QObject_ITF {
		QVirtualKeyboardInputContext_PTR():QVirtualKeyboardInputContext;
	}

	class QVirtualKeyboardInputContext extends core.QObject {
		___pointer: number;
		QVirtualKeyboardInputContext_PTR():QVirtualKeyboardInputContext;
		Pointer():number;
		SetPointer(p:number):void;
		AnchorPosition():number;
		ConnectAnchorPositionChanged(f:()=>void):void;
		DisconnectAnchorPositionChanged():void;
		AnchorPositionChanged():void;
		AnchorRectIntersectsClipRect():boolean;
		ConnectAnchorRectIntersectsClipRectChanged(f:()=>void):void;
		DisconnectAnchorRectIntersectsClipRectChanged():void;
		AnchorRectIntersectsClipRectChanged():void;
		AnchorRectangle():core.QRectF;
		ConnectAnchorRectangleChanged(f:()=>void):void;
		DisconnectAnchorRectangleChanged():void;
		AnchorRectangleChanged():void;
		ConnectAnimatingChanged(f:()=>void):void;
		DisconnectAnimatingChanged():void;
		AnimatingChanged():void;
		ConnectCapsLockActiveChanged(f:()=>void):void;
		DisconnectCapsLockActiveChanged():void;
		CapsLockActiveChanged():void;
		Clear():void;
		Commit():void;
		Commit2(text:string,replaceFrom:number,replaceLength:number):void;
		CursorPosition():number;
		ConnectCursorPositionChanged(f:()=>void):void;
		DisconnectCursorPositionChanged():void;
		CursorPositionChanged():void;
		CursorRectIntersectsClipRect():boolean;
		ConnectCursorRectIntersectsClipRectChanged(f:()=>void):void;
		DisconnectCursorRectIntersectsClipRectChanged():void;
		CursorRectIntersectsClipRectChanged():void;
		CursorRectangle():core.QRectF;
		ConnectCursorRectangleChanged(f:()=>void):void;
		DisconnectCursorRectangleChanged():void;
		CursorRectangleChanged():void;
		InputEngine():QVirtualKeyboardInputEngine;
		InputItem():core.QObject;
		ConnectInputItemChanged(f:()=>void):void;
		DisconnectInputItemChanged():void;
		InputItemChanged():void;
		InputMethodHints():number;
		ConnectInputMethodHintsChanged(f:()=>void):void;
		DisconnectInputMethodHintsChanged():void;
		InputMethodHintsChanged():void;
		IsAnimating():boolean;
		IsCapsLockActive():boolean;
		IsSelectionControlVisible():boolean;
		IsShiftActive():boolean;
		IsUppercase():boolean;
		Locale():string;
		ConnectLocaleChanged(f:()=>void):void;
		DisconnectLocaleChanged():void;
		LocaleChanged():void;
		PreeditText():string;
		ConnectPreeditTextChanged(f:()=>void):void;
		DisconnectPreeditTextChanged():void;
		PreeditTextChanged():void;
		SelectedText():string;
		ConnectSelectedTextChanged(f:()=>void):void;
		DisconnectSelectedTextChanged():void;
		SelectedTextChanged():void;
		ConnectSelectionControlVisibleChanged(f:()=>void):void;
		DisconnectSelectionControlVisibleChanged():void;
		SelectionControlVisibleChanged():void;
		SendKeyClick(key:number,text:string,modifiers:number):void;
		SetAnimating(isAnimating:boolean):void;
		ConnectShiftActiveChanged(f:()=>void):void;
		DisconnectShiftActiveChanged():void;
		ShiftActiveChanged():void;
		SurroundingText():string;
		ConnectSurroundingTextChanged(f:()=>void):void;
		DisconnectSurroundingTextChanged():void;
		SurroundingTextChanged():void;
		ConnectUppercaseChanged(f:()=>void):void;
		DisconnectUppercaseChanged():void;
		UppercaseChanged():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQVirtualKeyboardInputContextFromPointer(ptr:number):QVirtualKeyboardInputContext;
	interface QVirtualKeyboardInputEngine_ITF extends core.QObject_ITF {
		QVirtualKeyboardInputEngine_PTR():QVirtualKeyboardInputEngine;
	}

	class QVirtualKeyboardInputEngine extends core.QObject {
		___pointer: number;
		QVirtualKeyboardInputEngine_PTR():QVirtualKeyboardInputEngine;
		Pointer():number;
		SetPointer(p:number):void;
		ActiveKey():number;
		ConnectActiveKeyChanged(f:(key:number)=>void):void;
		DisconnectActiveKeyChanged():void;
		ActiveKeyChanged(key:number):void;
		InputContext():QVirtualKeyboardInputContext;
		InputMethod():QVirtualKeyboardAbstractInputMethod;
		ConnectInputMethodChanged(f:()=>void):void;
		DisconnectInputMethodChanged():void;
		InputMethodChanged():void;
		ConnectInputMethodReset(f:()=>void):void;
		DisconnectInputMethodReset():void;
		InputMethodReset():void;
		ConnectInputMethodUpdate(f:()=>void):void;
		DisconnectInputMethodUpdate():void;
		InputMethodUpdate():void;
		InputMode():number;
		ConnectInputModeChanged(f:()=>void):void;
		DisconnectInputModeChanged():void;
		InputModeChanged():void;
		InputModes():number[];
		ConnectInputModesChanged(f:()=>void):void;
		DisconnectInputModesChanged():void;
		InputModesChanged():void;
		PatternRecognitionModes():number[];
		ConnectPatternRecognitionModesChanged(f:()=>void):void;
		DisconnectPatternRecognitionModesChanged():void;
		PatternRecognitionModesChanged():void;
		PreviousKey():number;
		ConnectPreviousKeyChanged(f:(key:number)=>void):void;
		DisconnectPreviousKeyChanged():void;
		PreviousKeyChanged(key:number):void;
		Reselect(cursorPosition:number,reselectFlags:number):boolean;
		SetInputMethod(inputMethod:QVirtualKeyboardAbstractInputMethod_ITF):void;
		SetInputMode(inputMode:number):void;
		TraceBegin(traceId:number,patternRecognitionMode:number,traceCaptureDeviceInfo:Map<string,core.QVariant>,traceScreenInfo:Map<string,core.QVariant>):QVirtualKeyboardTrace;
		TraceEnd(trace:QVirtualKeyboardTrace_ITF):boolean;
		VirtualKeyCancel():void;
		VirtualKeyClick(key:number,text:string,modifiers:number):boolean;
		ConnectVirtualKeyClicked(f:(key:number,text:string,modifiers:number,isAutoRepeat:boolean)=>void):void;
		DisconnectVirtualKeyClicked():void;
		VirtualKeyClicked(key:number,text:string,modifiers:number,isAutoRepeat:boolean):void;
		VirtualKeyPress(key:number,text:string,modifiers:number,repe:boolean):boolean;
		VirtualKeyRelease(key:number,text:string,modifiers:number):boolean;
		WordCandidateListModel():QVirtualKeyboardSelectionListModel;
		ConnectWordCandidateListModelChanged(f:()=>void):void;
		DisconnectWordCandidateListModelChanged():void;
		WordCandidateListModelChanged():void;
		WordCandidateListVisibleHint():boolean;
		ConnectWordCandidateListVisibleHintChanged(f:()=>void):void;
		DisconnectWordCandidateListVisibleHintChanged():void;
		WordCandidateListVisibleHintChanged():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQVirtualKeyboardInputEngineFromPointer(ptr:number):QVirtualKeyboardInputEngine;
	const QVirtualKeyboardInputEngine__Lower: number;
	const QVirtualKeyboardInputEngine__Upper: number;
	const QVirtualKeyboardInputEngine__Latin: number;
	const QVirtualKeyboardInputEngine__Numeric: number;
	const QVirtualKeyboardInputEngine__Dialable: number;
	const QVirtualKeyboardInputEngine__Pinyin: number;
	const QVirtualKeyboardInputEngine__Cangjie: number;
	const QVirtualKeyboardInputEngine__Zhuyin: number;
	const QVirtualKeyboardInputEngine__Hangul: number;
	const QVirtualKeyboardInputEngine__Hiragana: number;
	const QVirtualKeyboardInputEngine__Katakana: number;
	const QVirtualKeyboardInputEngine__FullwidthLatin: number;
	const QVirtualKeyboardInputEngine__Greek: number;
	const QVirtualKeyboardInputEngine__Cyrillic: number;
	const QVirtualKeyboardInputEngine__Arabic: number;
	const QVirtualKeyboardInputEngine__Hebrew: number;
	const QVirtualKeyboardInputEngine__ChineseHandwriting: number;
	const QVirtualKeyboardInputEngine__JapaneseHandwriting: number;
	const QVirtualKeyboardInputEngine__KoreanHandwriting: number;
	const QVirtualKeyboardInputEngine__Thai: number;
	const QVirtualKeyboardInputEngine__None: number;
	const QVirtualKeyboardInputEngine__PatternRecognitionDisabled: number;
	const QVirtualKeyboardInputEngine__Handwriting: number;
	const QVirtualKeyboardInputEngine__HandwritingRecoginition: number;
	const QVirtualKeyboardInputEngine__WordBeforeCursor: number;
	const QVirtualKeyboardInputEngine__WordAfterCursor: number;
	const QVirtualKeyboardInputEngine__WordAtCursor: number;
	interface QVirtualKeyboardSelectionListModel_ITF extends core.QAbstractListModel_ITF {
		QVirtualKeyboardSelectionListModel_PTR():QVirtualKeyboardSelectionListModel;
	}

	class QVirtualKeyboardSelectionListModel extends core.QAbstractListModel {
		___pointer: number;
		QVirtualKeyboardSelectionListModel_PTR():QVirtualKeyboardSelectionListModel;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectActiveItemChanged(f:(index:number)=>void):void;
		DisconnectActiveItemChanged():void;
		ActiveItemChanged(index:number):void;
		ConnectItemSelected(f:(index:number)=>void):void;
		DisconnectItemSelected():void;
		ItemSelected(index:number):void;
		RemoveItem(index:number):void;
		SelectItem(index:number):void;
		DropMimeDataDefault(data:core.QMimeData_ITF,action:number,row:number,column:number,parent:core.QModelIndex_ITF):boolean;
		FlagsDefault(index:core.QModelIndex_ITF):number;
		IndexDefault(row:number,column:number,parent:core.QModelIndex_ITF):core.QModelIndex;
		SiblingDefault(row:number,column:number,idx:core.QModelIndex_ITF):core.QModelIndex;
		BuddyDefault(index:core.QModelIndex_ITF):core.QModelIndex;
		CanDropMimeDataDefault(data:core.QMimeData_ITF,action:number,row:number,column:number,parent:core.QModelIndex_ITF):boolean;
		CanFetchMoreDefault(parent:core.QModelIndex_ITF):boolean;
		ColumnCountDefault(parent:core.QModelIndex_ITF):number;
		DataDefault(index:core.QModelIndex_ITF,role:number):core.QVariant;
		FetchMoreDefault(parent:core.QModelIndex_ITF):void;
		HasChildrenDefault(parent:core.QModelIndex_ITF):boolean;
		HeaderDataDefault(section:number,orientation:number,role:number):core.QVariant;
		InsertColumnsDefault(column:number,count:number,parent:core.QModelIndex_ITF):boolean;
		InsertRowsDefault(row:number,count:number,parent:core.QModelIndex_ITF):boolean;
		ItemDataDefault(index:core.QModelIndex_ITF):Map<number,core.QVariant>;
		MatchDefault(start:core.QModelIndex_ITF,role:number,value:core.QVariant_ITF,hits:number,flags:number):core.QModelIndex[];
		MimeDataDefault(indexes:core.QModelIndex[]):core.QMimeData;
		MimeTypesDefault():string[];
		MoveColumnsDefault(sourceParent:core.QModelIndex_ITF,sourceColumn:number,count:number,destinationParent:core.QModelIndex_ITF,destinationChild:number):boolean;
		MoveRowsDefault(sourceParent:core.QModelIndex_ITF,sourceRow:number,count:number,destinationParent:core.QModelIndex_ITF,destinationChild:number):boolean;
		ParentDefault(index:core.QModelIndex_ITF):core.QModelIndex;
		RemoveColumnsDefault(column:number,count:number,parent:core.QModelIndex_ITF):boolean;
		RemoveRowsDefault(row:number,count:number,parent:core.QModelIndex_ITF):boolean;
		ResetInternalDataDefault():void;
		RevertDefault():void;
		RoleNamesDefault():Map<number,core.QByteArray>;
		RowCountDefault(parent:core.QModelIndex_ITF):number;
		SetDataDefault(index:core.QModelIndex_ITF,value:core.QVariant_ITF,role:number):boolean;
		SetHeaderDataDefault(section:number,orientation:number,value:core.QVariant_ITF,role:number):boolean;
		SetItemDataDefault(index:core.QModelIndex_ITF,roles:Map<number,core.QVariant>):boolean;
		SortDefault(column:number,order:number):void;
		SpanDefault(index:core.QModelIndex_ITF):core.QSize;
		SubmitDefault():boolean;
		SupportedDragActionsDefault():number;
		SupportedDropActionsDefault():number;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQVirtualKeyboardSelectionListModelFromPointer(ptr:number):QVirtualKeyboardSelectionListModel;
	const QVirtualKeyboardSelectionListModel__WordCandidateList: number;
	const QVirtualKeyboardSelectionListModel__Display: number;
	const QVirtualKeyboardSelectionListModel__DisplayRole: number;
	const QVirtualKeyboardSelectionListModel__Dictionary: number;
	const QVirtualKeyboardSelectionListModel__CanRemoveSuggestion: number;
	const QVirtualKeyboardSelectionListModel__Default: number;
	const QVirtualKeyboardSelectionListModel__User: number;
	interface QVirtualKeyboardTrace_ITF extends core.QObject_ITF {
		QVirtualKeyboardTrace_PTR():QVirtualKeyboardTrace;
	}

	class QVirtualKeyboardTrace extends core.QObject {
		___pointer: number;
		QVirtualKeyboardTrace_PTR():QVirtualKeyboardTrace;
		Pointer():number;
		SetPointer(p:number):void;
		AddPoint(point:core.QPointF_ITF):number;
		ConnectCanceledChanged(f:(isCanceled:boolean)=>void):void;
		DisconnectCanceledChanged():void;
		CanceledChanged(isCanceled:boolean):void;
		ChannelData(channel:string,pos:number,count:number):core.QVariant[];
		Channels():string[];
		ConnectChannelsChanged(f:()=>void):void;
		DisconnectChannelsChanged():void;
		ChannelsChanged():void;
		ConnectFinalChanged(f:(isFinal:boolean)=>void):void;
		DisconnectFinalChanged():void;
		FinalChanged(isFinal:boolean):void;
		IsCanceled():boolean;
		IsFinal():boolean;
		Length():number;
		ConnectLengthChanged(f:(length:number)=>void):void;
		DisconnectLengthChanged():void;
		LengthChanged(length:number):void;
		Opacity():number;
		ConnectOpacityChanged(f:(opacity:number)=>void):void;
		DisconnectOpacityChanged():void;
		OpacityChanged(opacity:number):void;
		Points(pos:number,count:number):core.QVariant[];
		SetCanceled(canceled:boolean):void;
		SetChannelData(channel:string,index:number,data:core.QVariant_ITF):void;
		SetChannels(channels:string[]):void;
		SetFinal(fi:boolean):void;
		SetOpacity(opacity:number):void;
		SetTraceId(id:number):void;
		TraceId():number;
		ConnectTraceIdChanged(f:(traceId:number)=>void):void;
		DisconnectTraceIdChanged():void;
		TraceIdChanged(traceId:number):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQVirtualKeyboardTraceFromPointer(ptr:number):QVirtualKeyboardTrace;
}
/// <reference path="core.d.ts" />
/// <reference path="gui.d.ts" />
/// <reference path="widgets.d.ts" />
declare namespace charts {
	interface QAbstractAxis_ITF extends core.QObject_ITF {
		QAbstractAxis_PTR():QAbstractAxis;
	}

	class QAbstractAxis extends core.QObject {
		___pointer: number;
		QAbstractAxis_PTR():QAbstractAxis;
		Pointer():number;
		SetPointer(p:number):void;
		Alignment():number;
		ConnectColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectColorChanged():void;
		ColorChanged(color:gui.QColor_ITF):void;
		GridLineColor():gui.QColor;
		ConnectGridLineColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectGridLineColorChanged():void;
		GridLineColorChanged(color:gui.QColor_ITF):void;
		GridLinePen():gui.QPen;
		ConnectGridLinePenChanged(f:(pen:gui.QPen)=>void):void;
		DisconnectGridLinePenChanged():void;
		GridLinePenChanged(pen:gui.QPen_ITF):void;
		ConnectGridVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectGridVisibleChanged():void;
		GridVisibleChanged(visible:boolean):void;
		Hide():void;
		IsGridLineVisible():boolean;
		IsLineVisible():boolean;
		IsMinorGridLineVisible():boolean;
		IsReverse():boolean;
		IsTitleVisible():boolean;
		IsVisible():boolean;
		LabelsAngle():number;
		ConnectLabelsAngleChanged(f:(angle:number)=>void):void;
		DisconnectLabelsAngleChanged():void;
		LabelsAngleChanged(angle:number):void;
		LabelsBrush():gui.QBrush;
		ConnectLabelsBrushChanged(f:(brush:gui.QBrush)=>void):void;
		DisconnectLabelsBrushChanged():void;
		LabelsBrushChanged(brush:gui.QBrush_ITF):void;
		LabelsColor():gui.QColor;
		ConnectLabelsColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectLabelsColorChanged():void;
		LabelsColorChanged(color:gui.QColor_ITF):void;
		LabelsEditable():boolean;
		ConnectLabelsEditableChanged(f:(editable:boolean)=>void):void;
		DisconnectLabelsEditableChanged():void;
		LabelsEditableChanged(editable:boolean):void;
		LabelsFont():gui.QFont;
		ConnectLabelsFontChanged(f:(font:gui.QFont)=>void):void;
		DisconnectLabelsFontChanged():void;
		LabelsFontChanged(font:gui.QFont_ITF):void;
		LabelsVisible():boolean;
		ConnectLabelsVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectLabelsVisibleChanged():void;
		LabelsVisibleChanged(visible:boolean):void;
		LinePen():gui.QPen;
		ConnectLinePenChanged(f:(pen:gui.QPen)=>void):void;
		DisconnectLinePenChanged():void;
		LinePenChanged(pen:gui.QPen_ITF):void;
		LinePenColor():gui.QColor;
		ConnectLineVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectLineVisibleChanged():void;
		LineVisibleChanged(visible:boolean):void;
		MinorGridLineColor():gui.QColor;
		ConnectMinorGridLineColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectMinorGridLineColorChanged():void;
		MinorGridLineColorChanged(color:gui.QColor_ITF):void;
		MinorGridLinePen():gui.QPen;
		ConnectMinorGridLinePenChanged(f:(pen:gui.QPen)=>void):void;
		DisconnectMinorGridLinePenChanged():void;
		MinorGridLinePenChanged(pen:gui.QPen_ITF):void;
		ConnectMinorGridVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectMinorGridVisibleChanged():void;
		MinorGridVisibleChanged(visible:boolean):void;
		Orientation():number;
		ConnectReverseChanged(f:(reverse:boolean)=>void):void;
		DisconnectReverseChanged():void;
		ReverseChanged(reverse:boolean):void;
		SetGridLineColor(color:gui.QColor_ITF):void;
		SetGridLinePen(pen:gui.QPen_ITF):void;
		SetGridLineVisible(visible:boolean):void;
		SetLabelsAngle(angle:number):void;
		SetLabelsBrush(brush:gui.QBrush_ITF):void;
		SetLabelsColor(color:gui.QColor_ITF):void;
		SetLabelsEditable(editable:boolean):void;
		SetLabelsFont(font:gui.QFont_ITF):void;
		SetLabelsVisible(visible:boolean):void;
		SetLinePen(pen:gui.QPen_ITF):void;
		SetLinePenColor(color:gui.QColor_ITF):void;
		SetLineVisible(visible:boolean):void;
		SetMax(max:core.QVariant_ITF):void;
		SetMin(mi:core.QVariant_ITF):void;
		SetMinorGridLineColor(color:gui.QColor_ITF):void;
		SetMinorGridLinePen(pen:gui.QPen_ITF):void;
		SetMinorGridLineVisible(visible:boolean):void;
		SetRange(mi:core.QVariant_ITF,max:core.QVariant_ITF):void;
		SetReverse(reverse:boolean):void;
		SetShadesBorderColor(color:gui.QColor_ITF):void;
		SetShadesBrush(brush:gui.QBrush_ITF):void;
		SetShadesColor(color:gui.QColor_ITF):void;
		SetShadesPen(pen:gui.QPen_ITF):void;
		SetShadesVisible(visible:boolean):void;
		SetTitleBrush(brush:gui.QBrush_ITF):void;
		SetTitleFont(font:gui.QFont_ITF):void;
		SetTitleText(title:string):void;
		SetTitleVisible(visible:boolean):void;
		SetVisible(visible:boolean):void;
		ShadesBorderColor():gui.QColor;
		ConnectShadesBorderColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectShadesBorderColorChanged():void;
		ShadesBorderColorChanged(color:gui.QColor_ITF):void;
		ShadesBrush():gui.QBrush;
		ConnectShadesBrushChanged(f:(brush:gui.QBrush)=>void):void;
		DisconnectShadesBrushChanged():void;
		ShadesBrushChanged(brush:gui.QBrush_ITF):void;
		ShadesColor():gui.QColor;
		ConnectShadesColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectShadesColorChanged():void;
		ShadesColorChanged(color:gui.QColor_ITF):void;
		ShadesPen():gui.QPen;
		ConnectShadesPenChanged(f:(pen:gui.QPen)=>void):void;
		DisconnectShadesPenChanged():void;
		ShadesPenChanged(pen:gui.QPen_ITF):void;
		ShadesVisible():boolean;
		ConnectShadesVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectShadesVisibleChanged():void;
		ShadesVisibleChanged(visible:boolean):void;
		Show():void;
		TitleBrush():gui.QBrush;
		ConnectTitleBrushChanged(f:(brush:gui.QBrush)=>void):void;
		DisconnectTitleBrushChanged():void;
		TitleBrushChanged(brush:gui.QBrush_ITF):void;
		TitleFont():gui.QFont;
		ConnectTitleFontChanged(f:(font:gui.QFont)=>void):void;
		DisconnectTitleFontChanged():void;
		TitleFontChanged(font:gui.QFont_ITF):void;
		TitleText():string;
		ConnectTitleTextChanged(f:(text:string)=>void):void;
		DisconnectTitleTextChanged():void;
		TitleTextChanged(text:string):void;
		ConnectTitleVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectTitleVisibleChanged():void;
		TitleVisibleChanged(visible:boolean):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		ConnectVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectVisibleChanged():void;
		VisibleChanged(visible:boolean):void;
		ConnectDestroyQAbstractAxis(f:()=>void):void;
		DisconnectDestroyQAbstractAxis():void;
		DestroyQAbstractAxis():void;
		DestroyQAbstractAxisDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQAbstractAxisFromPointer(ptr:number):QAbstractAxis;
	const QAbstractAxis__AxisTypeNoAxis: number;
	const QAbstractAxis__AxisTypeValue: number;
	const QAbstractAxis__AxisTypeBarCategory: number;
	const QAbstractAxis__AxisTypeCategory: number;
	const QAbstractAxis__AxisTypeDateTime: number;
	const QAbstractAxis__AxisTypeLogValue: number;
	interface QAbstractBarSeries_ITF extends QAbstractSeries_ITF {
		QAbstractBarSeries_PTR():QAbstractBarSeries;
	}

	class QAbstractBarSeries extends QAbstractSeries {
		___pointer: number;
		QAbstractBarSeries_PTR():QAbstractBarSeries;
		Pointer():number;
		SetPointer(p:number):void;
		Append(set:QBarSet_ITF):boolean;
		Append2(sets:QBarSet[]):boolean;
		BarSets():QBarSet[];
		BarWidth():number;
		ConnectBarsetsAdded(f:(sets:QBarSet[])=>void):void;
		DisconnectBarsetsAdded():void;
		BarsetsAdded(sets:QBarSet[]):void;
		ConnectBarsetsRemoved(f:(sets:QBarSet[])=>void):void;
		DisconnectBarsetsRemoved():void;
		BarsetsRemoved(sets:QBarSet[]):void;
		Clear():void;
		ConnectClicked(f:(index:number,barset:QBarSet)=>void):void;
		DisconnectClicked():void;
		Clicked(index:number,barset:QBarSet_ITF):void;
		Count():number;
		ConnectCountChanged(f:()=>void):void;
		DisconnectCountChanged():void;
		CountChanged():void;
		ConnectDoubleClicked(f:(index:number,barset:QBarSet)=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked(index:number,barset:QBarSet_ITF):void;
		ConnectHovered(f:(status:boolean,index:number,barset:QBarSet)=>void):void;
		DisconnectHovered():void;
		Hovered(status:boolean,index:number,barset:QBarSet_ITF):void;
		Insert(index:number,set:QBarSet_ITF):boolean;
		IsLabelsVisible():boolean;
		LabelsAngle():number;
		ConnectLabelsAngleChanged(f:(angle:number)=>void):void;
		DisconnectLabelsAngleChanged():void;
		LabelsAngleChanged(angle:number):void;
		LabelsFormat():string;
		ConnectLabelsFormatChanged(f:(format:string)=>void):void;
		DisconnectLabelsFormatChanged():void;
		LabelsFormatChanged(format:string):void;
		LabelsPosition():number;
		ConnectLabelsPositionChanged(f:(position:number)=>void):void;
		DisconnectLabelsPositionChanged():void;
		LabelsPositionChanged(position:number):void;
		LabelsPrecision():number;
		ConnectLabelsPrecisionChanged(f:(precision:number)=>void):void;
		DisconnectLabelsPrecisionChanged():void;
		LabelsPrecisionChanged(precision:number):void;
		ConnectLabelsVisibleChanged(f:()=>void):void;
		DisconnectLabelsVisibleChanged():void;
		LabelsVisibleChanged():void;
		ConnectPressed(f:(index:number,barset:QBarSet)=>void):void;
		DisconnectPressed():void;
		Pressed(index:number,barset:QBarSet_ITF):void;
		ConnectReleased(f:(index:number,barset:QBarSet)=>void):void;
		DisconnectReleased():void;
		Released(index:number,barset:QBarSet_ITF):void;
		Remove(set:QBarSet_ITF):boolean;
		SetBarWidth(width:number):void;
		SetLabelsAngle(angle:number):void;
		SetLabelsFormat(format:string):void;
		SetLabelsPosition(position:number):void;
		SetLabelsPrecision(precision:number):void;
		SetLabelsVisible(visible:boolean):void;
		Take(set:QBarSet_ITF):boolean;
		ConnectDestroyQAbstractBarSeries(f:()=>void):void;
		DisconnectDestroyQAbstractBarSeries():void;
		DestroyQAbstractBarSeries():void;
		DestroyQAbstractBarSeriesDefault():void;
		Type():number;
		TypeDefault():number;
	}
	function NewQAbstractBarSeriesFromPointer(ptr:number):QAbstractBarSeries;
	const QAbstractBarSeries__LabelsCenter: number;
	const QAbstractBarSeries__LabelsInsideEnd: number;
	const QAbstractBarSeries__LabelsInsideBase: number;
	const QAbstractBarSeries__LabelsOutsideEnd: number;
	interface QAbstractSeries_ITF extends core.QObject_ITF {
		QAbstractSeries_PTR():QAbstractSeries;
	}

	class QAbstractSeries extends core.QObject {
		___pointer: number;
		QAbstractSeries_PTR():QAbstractSeries;
		Pointer():number;
		SetPointer(p:number):void;
		AttachAxis(axis:QAbstractAxis_ITF):boolean;
		AttachedAxes():QAbstractAxis[];
		Chart():QChart;
		DetachAxis(axis:QAbstractAxis_ITF):boolean;
		Hide():void;
		IsVisible():boolean;
		Name():string;
		ConnectNameChanged(f:()=>void):void;
		DisconnectNameChanged():void;
		NameChanged():void;
		Opacity():number;
		ConnectOpacityChanged(f:()=>void):void;
		DisconnectOpacityChanged():void;
		OpacityChanged():void;
		SetName(name:string):void;
		SetOpacity(opacity:number):void;
		SetUseOpenGL(enable:boolean):void;
		SetVisible(visible:boolean):void;
		Show():void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		UseOpenGL():boolean;
		ConnectUseOpenGLChanged(f:()=>void):void;
		DisconnectUseOpenGLChanged():void;
		UseOpenGLChanged():void;
		ConnectVisibleChanged(f:()=>void):void;
		DisconnectVisibleChanged():void;
		VisibleChanged():void;
		ConnectDestroyQAbstractSeries(f:()=>void):void;
		DisconnectDestroyQAbstractSeries():void;
		DestroyQAbstractSeries():void;
		DestroyQAbstractSeriesDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQAbstractSeriesFromPointer(ptr:number):QAbstractSeries;
	const QAbstractSeries__SeriesTypeLine: number;
	const QAbstractSeries__SeriesTypeArea: number;
	const QAbstractSeries__SeriesTypeBar: number;
	const QAbstractSeries__SeriesTypeStackedBar: number;
	const QAbstractSeries__SeriesTypePercentBar: number;
	const QAbstractSeries__SeriesTypePie: number;
	const QAbstractSeries__SeriesTypeScatter: number;
	const QAbstractSeries__SeriesTypeSpline: number;
	const QAbstractSeries__SeriesTypeHorizontalBar: number;
	const QAbstractSeries__SeriesTypeHorizontalStackedBar: number;
	const QAbstractSeries__SeriesTypeHorizontalPercentBar: number;
	const QAbstractSeries__SeriesTypeBoxPlot: number;
	const QAbstractSeries__SeriesTypeCandlestick: number;
	interface QAreaLegendMarker_ITF extends QLegendMarker_ITF {
		QAreaLegendMarker_PTR():QAreaLegendMarker;
	}

	class QAreaLegendMarker extends QLegendMarker {
		___pointer: number;
		QAreaLegendMarker_PTR():QAreaLegendMarker;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectSeries(f:()=>QAreaSeries):void;
		DisconnectSeries():void;
		Series():QAreaSeries;
		SeriesDefault():QAreaSeries;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQAreaLegendMarker(f:()=>void):void;
		DisconnectDestroyQAreaLegendMarker():void;
		DestroyQAreaLegendMarker():void;
		DestroyQAreaLegendMarkerDefault():void;
	}
	function NewQAreaLegendMarkerFromPointer(ptr:number):QAreaLegendMarker;
	interface QAreaSeries_ITF extends QAbstractSeries_ITF {
		QAreaSeries_PTR():QAreaSeries;
	}

	class QAreaSeries extends QAbstractSeries {
		___pointer: number;
		QAreaSeries_PTR():QAreaSeries;
		Pointer():number;
		SetPointer(p:number):void;
		BorderColor():gui.QColor;
		ConnectBorderColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectBorderColorChanged():void;
		BorderColorChanged(color:gui.QColor_ITF):void;
		Brush():gui.QBrush;
		ConnectClicked(f:(point:core.QPointF)=>void):void;
		DisconnectClicked():void;
		Clicked(point:core.QPointF_ITF):void;
		Color():gui.QColor;
		ConnectColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectColorChanged():void;
		ColorChanged(color:gui.QColor_ITF):void;
		ConnectDoubleClicked(f:(point:core.QPointF)=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked(point:core.QPointF_ITF):void;
		ConnectHovered(f:(point:core.QPointF,state:boolean)=>void):void;
		DisconnectHovered():void;
		Hovered(point:core.QPointF_ITF,state:boolean):void;
		LowerSeries():QLineSeries;
		Pen():gui.QPen;
		PointLabelsClipping():boolean;
		ConnectPointLabelsClippingChanged(f:(clipping:boolean)=>void):void;
		DisconnectPointLabelsClippingChanged():void;
		PointLabelsClippingChanged(clipping:boolean):void;
		PointLabelsColor():gui.QColor;
		ConnectPointLabelsColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectPointLabelsColorChanged():void;
		PointLabelsColorChanged(color:gui.QColor_ITF):void;
		PointLabelsFont():gui.QFont;
		ConnectPointLabelsFontChanged(f:(font:gui.QFont)=>void):void;
		DisconnectPointLabelsFontChanged():void;
		PointLabelsFontChanged(font:gui.QFont_ITF):void;
		PointLabelsFormat():string;
		ConnectPointLabelsFormatChanged(f:(format:string)=>void):void;
		DisconnectPointLabelsFormatChanged():void;
		PointLabelsFormatChanged(format:string):void;
		ConnectPointLabelsVisibilityChanged(f:(visible:boolean)=>void):void;
		DisconnectPointLabelsVisibilityChanged():void;
		PointLabelsVisibilityChanged(visible:boolean):void;
		PointLabelsVisible():boolean;
		PointsVisible():boolean;
		ConnectPressed(f:(point:core.QPointF)=>void):void;
		DisconnectPressed():void;
		Pressed(point:core.QPointF_ITF):void;
		ConnectReleased(f:(point:core.QPointF)=>void):void;
		DisconnectReleased():void;
		Released(point:core.QPointF_ITF):void;
		SetBorderColor(color:gui.QColor_ITF):void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetColor(color:gui.QColor_ITF):void;
		SetLowerSeries(series:QLineSeries_ITF):void;
		SetPen(pen:gui.QPen_ITF):void;
		SetPointLabelsClipping(enabled:boolean):void;
		SetPointLabelsColor(color:gui.QColor_ITF):void;
		SetPointLabelsFont(font:gui.QFont_ITF):void;
		SetPointLabelsFormat(format:string):void;
		SetPointLabelsVisible(visible:boolean):void;
		SetPointsVisible(visible:boolean):void;
		SetUpperSeries(series:QLineSeries_ITF):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		UpperSeries():QLineSeries;
		ConnectDestroyQAreaSeries(f:()=>void):void;
		DisconnectDestroyQAreaSeries():void;
		DestroyQAreaSeries():void;
		DestroyQAreaSeriesDefault():void;
	}
	function NewQAreaSeriesFromPointer(ptr:number):QAreaSeries;
	function NewQAreaSeries(parent:core.QObject_ITF):QAreaSeries;
	function NewQAreaSeries2(upperSeries:QLineSeries_ITF,lowerSeries:QLineSeries_ITF):QAreaSeries;
	interface QBarCategoryAxis_ITF extends QAbstractAxis_ITF {
		QBarCategoryAxis_PTR():QBarCategoryAxis;
	}

	class QBarCategoryAxis extends QAbstractAxis {
		___pointer: number;
		QBarCategoryAxis_PTR():QBarCategoryAxis;
		Pointer():number;
		SetPointer(p:number):void;
		Append(categories:string[]):void;
		Append2(category:string):void;
		At(index:number):string;
		Categories():string[];
		ConnectCategoriesChanged(f:()=>void):void;
		DisconnectCategoriesChanged():void;
		CategoriesChanged():void;
		Clear():void;
		Count():number;
		ConnectCountChanged(f:()=>void):void;
		DisconnectCountChanged():void;
		CountChanged():void;
		Insert(index:number,category:string):void;
		Max():string;
		ConnectMaxChanged(f:(max:string)=>void):void;
		DisconnectMaxChanged():void;
		MaxChanged(max:string):void;
		Min():string;
		ConnectMinChanged(f:(mi:string)=>void):void;
		DisconnectMinChanged():void;
		MinChanged(mi:string):void;
		ConnectRangeChanged(f:(mi:string,max:string)=>void):void;
		DisconnectRangeChanged():void;
		RangeChanged(mi:string,max:string):void;
		Remove(category:string):void;
		Replace(oldCategory:string,newCategory:string):void;
		SetCategories(categories:string[]):void;
		SetMax(max:string):void;
		SetMin(mi:string):void;
		SetRange(minCategory:string,maxCategory:string):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQBarCategoryAxis(f:()=>void):void;
		DisconnectDestroyQBarCategoryAxis():void;
		DestroyQBarCategoryAxis():void;
		DestroyQBarCategoryAxisDefault():void;
	}
	function NewQBarCategoryAxisFromPointer(ptr:number):QBarCategoryAxis;
	function NewQBarCategoryAxis(parent:core.QObject_ITF):QBarCategoryAxis;
	interface QBarLegendMarker_ITF extends QLegendMarker_ITF {
		QBarLegendMarker_PTR():QBarLegendMarker;
	}

	class QBarLegendMarker extends QLegendMarker {
		___pointer: number;
		QBarLegendMarker_PTR():QBarLegendMarker;
		Pointer():number;
		SetPointer(p:number):void;
		Barset():QBarSet;
		ConnectSeries(f:()=>QAbstractBarSeries):void;
		DisconnectSeries():void;
		Series():QAbstractBarSeries;
		SeriesDefault():QAbstractBarSeries;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQBarLegendMarker(f:()=>void):void;
		DisconnectDestroyQBarLegendMarker():void;
		DestroyQBarLegendMarker():void;
		DestroyQBarLegendMarkerDefault():void;
	}
	function NewQBarLegendMarkerFromPointer(ptr:number):QBarLegendMarker;
	interface QBarSeries_ITF extends QAbstractBarSeries_ITF {
		QBarSeries_PTR():QBarSeries;
	}

	class QBarSeries extends QAbstractBarSeries {
		___pointer: number;
		QBarSeries_PTR():QBarSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQBarSeries(f:()=>void):void;
		DisconnectDestroyQBarSeries():void;
		DestroyQBarSeries():void;
		DestroyQBarSeriesDefault():void;
	}
	function NewQBarSeriesFromPointer(ptr:number):QBarSeries;
	function NewQBarSeries(parent:core.QObject_ITF):QBarSeries;
	interface QBarSet_ITF extends core.QObject_ITF {
		QBarSet_PTR():QBarSet;
	}

	class QBarSet extends core.QObject {
		___pointer: number;
		QBarSet_PTR():QBarSet;
		Pointer():number;
		SetPointer(p:number):void;
		Append(value:number):void;
		Append2(values:number[]):void;
		At(index:number):number;
		BorderColor():gui.QColor;
		ConnectBorderColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectBorderColorChanged():void;
		BorderColorChanged(color:gui.QColor_ITF):void;
		Brush():gui.QBrush;
		ConnectBrushChanged(f:()=>void):void;
		DisconnectBrushChanged():void;
		BrushChanged():void;
		ConnectClicked(f:(index:number)=>void):void;
		DisconnectClicked():void;
		Clicked(index:number):void;
		Color():gui.QColor;
		ConnectColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectColorChanged():void;
		ColorChanged(color:gui.QColor_ITF):void;
		Count():number;
		ConnectDoubleClicked(f:(index:number)=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked(index:number):void;
		ConnectHovered(f:(status:boolean,index:number)=>void):void;
		DisconnectHovered():void;
		Hovered(status:boolean,index:number):void;
		Insert(index:number,value:number):void;
		Label():string;
		LabelBrush():gui.QBrush;
		ConnectLabelBrushChanged(f:()=>void):void;
		DisconnectLabelBrushChanged():void;
		LabelBrushChanged():void;
		ConnectLabelChanged(f:()=>void):void;
		DisconnectLabelChanged():void;
		LabelChanged():void;
		LabelColor():gui.QColor;
		ConnectLabelColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectLabelColorChanged():void;
		LabelColorChanged(color:gui.QColor_ITF):void;
		LabelFont():gui.QFont;
		ConnectLabelFontChanged(f:()=>void):void;
		DisconnectLabelFontChanged():void;
		LabelFontChanged():void;
		Pen():gui.QPen;
		ConnectPenChanged(f:()=>void):void;
		DisconnectPenChanged():void;
		PenChanged():void;
		ConnectPressed(f:(index:number)=>void):void;
		DisconnectPressed():void;
		Pressed(index:number):void;
		ConnectReleased(f:(index:number)=>void):void;
		DisconnectReleased():void;
		Released(index:number):void;
		Remove(index:number,count:number):void;
		Replace(index:number,value:number):void;
		SetBorderColor(color:gui.QColor_ITF):void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetColor(color:gui.QColor_ITF):void;
		SetLabel(label:string):void;
		SetLabelBrush(brush:gui.QBrush_ITF):void;
		SetLabelColor(color:gui.QColor_ITF):void;
		SetLabelFont(font:gui.QFont_ITF):void;
		SetPen(pen:gui.QPen_ITF):void;
		Sum():number;
		ConnectValueChanged(f:(index:number)=>void):void;
		DisconnectValueChanged():void;
		ValueChanged(index:number):void;
		ConnectValuesAdded(f:(index:number,count:number)=>void):void;
		DisconnectValuesAdded():void;
		ValuesAdded(index:number,count:number):void;
		ConnectValuesRemoved(f:(index:number,count:number)=>void):void;
		DisconnectValuesRemoved():void;
		ValuesRemoved(index:number,count:number):void;
		ConnectDestroyQBarSet(f:()=>void):void;
		DisconnectDestroyQBarSet():void;
		DestroyQBarSet():void;
		DestroyQBarSetDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQBarSetFromPointer(ptr:number):QBarSet;
	function NewQBarSet(label:string,parent:core.QObject_ITF):QBarSet;
	interface QBoxPlotLegendMarker_ITF extends QLegendMarker_ITF {
		QBoxPlotLegendMarker_PTR():QBoxPlotLegendMarker;
	}

	class QBoxPlotLegendMarker extends QLegendMarker {
		___pointer: number;
		QBoxPlotLegendMarker_PTR():QBoxPlotLegendMarker;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectSeries(f:()=>QBoxPlotSeries):void;
		DisconnectSeries():void;
		Series():QBoxPlotSeries;
		SeriesDefault():QBoxPlotSeries;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQBoxPlotLegendMarker(f:()=>void):void;
		DisconnectDestroyQBoxPlotLegendMarker():void;
		DestroyQBoxPlotLegendMarker():void;
		DestroyQBoxPlotLegendMarkerDefault():void;
	}
	function NewQBoxPlotLegendMarkerFromPointer(ptr:number):QBoxPlotLegendMarker;
	interface QBoxPlotSeries_ITF extends QAbstractSeries_ITF {
		QBoxPlotSeries_PTR():QBoxPlotSeries;
	}

	class QBoxPlotSeries extends QAbstractSeries {
		___pointer: number;
		QBoxPlotSeries_PTR():QBoxPlotSeries;
		Pointer():number;
		SetPointer(p:number):void;
		Append(set:QBoxSet_ITF):boolean;
		Append2(sets:QBoxSet[]):boolean;
		ConnectBoxOutlineVisibilityChanged(f:()=>void):void;
		DisconnectBoxOutlineVisibilityChanged():void;
		BoxOutlineVisibilityChanged():void;
		BoxOutlineVisible():boolean;
		BoxSets():QBoxSet[];
		BoxWidth():number;
		ConnectBoxWidthChanged(f:()=>void):void;
		DisconnectBoxWidthChanged():void;
		BoxWidthChanged():void;
		ConnectBoxsetsAdded(f:(sets:QBoxSet[])=>void):void;
		DisconnectBoxsetsAdded():void;
		BoxsetsAdded(sets:QBoxSet[]):void;
		ConnectBoxsetsRemoved(f:(sets:QBoxSet[])=>void):void;
		DisconnectBoxsetsRemoved():void;
		BoxsetsRemoved(sets:QBoxSet[]):void;
		Brush():gui.QBrush;
		ConnectBrushChanged(f:()=>void):void;
		DisconnectBrushChanged():void;
		BrushChanged():void;
		Clear():void;
		ConnectClicked(f:(boxset:QBoxSet)=>void):void;
		DisconnectClicked():void;
		Clicked(boxset:QBoxSet_ITF):void;
		Count():number;
		ConnectCountChanged(f:()=>void):void;
		DisconnectCountChanged():void;
		CountChanged():void;
		ConnectDoubleClicked(f:(boxset:QBoxSet)=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked(boxset:QBoxSet_ITF):void;
		ConnectHovered(f:(status:boolean,boxset:QBoxSet)=>void):void;
		DisconnectHovered():void;
		Hovered(status:boolean,boxset:QBoxSet_ITF):void;
		Insert(index:number,set:QBoxSet_ITF):boolean;
		Pen():gui.QPen;
		ConnectPenChanged(f:()=>void):void;
		DisconnectPenChanged():void;
		PenChanged():void;
		ConnectPressed(f:(boxset:QBoxSet)=>void):void;
		DisconnectPressed():void;
		Pressed(boxset:QBoxSet_ITF):void;
		ConnectReleased(f:(boxset:QBoxSet)=>void):void;
		DisconnectReleased():void;
		Released(boxset:QBoxSet_ITF):void;
		Remove(set:QBoxSet_ITF):boolean;
		SetBoxOutlineVisible(visible:boolean):void;
		SetBoxWidth(width:number):void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetPen(pen:gui.QPen_ITF):void;
		Take(set:QBoxSet_ITF):boolean;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQBoxPlotSeries(f:()=>void):void;
		DisconnectDestroyQBoxPlotSeries():void;
		DestroyQBoxPlotSeries():void;
		DestroyQBoxPlotSeriesDefault():void;
	}
	function NewQBoxPlotSeriesFromPointer(ptr:number):QBoxPlotSeries;
	function NewQBoxPlotSeries(parent:core.QObject_ITF):QBoxPlotSeries;
	interface QBoxSet_ITF extends core.QObject_ITF {
		QBoxSet_PTR():QBoxSet;
	}

	class QBoxSet extends core.QObject {
		___pointer: number;
		QBoxSet_PTR():QBoxSet;
		Pointer():number;
		SetPointer(p:number):void;
		Append(value:number):void;
		Append2(values:number[]):void;
		At(index:number):number;
		Brush():gui.QBrush;
		ConnectBrushChanged(f:()=>void):void;
		DisconnectBrushChanged():void;
		BrushChanged():void;
		Clear():void;
		ConnectCleared(f:()=>void):void;
		DisconnectCleared():void;
		Cleared():void;
		ConnectClicked(f:()=>void):void;
		DisconnectClicked():void;
		Clicked():void;
		Count():number;
		ConnectDoubleClicked(f:()=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked():void;
		ConnectHovered(f:(status:boolean)=>void):void;
		DisconnectHovered():void;
		Hovered(status:boolean):void;
		Label():string;
		Pen():gui.QPen;
		ConnectPenChanged(f:()=>void):void;
		DisconnectPenChanged():void;
		PenChanged():void;
		ConnectPressed(f:()=>void):void;
		DisconnectPressed():void;
		Pressed():void;
		ConnectReleased(f:()=>void):void;
		DisconnectReleased():void;
		Released():void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetLabel(label:string):void;
		SetPen(pen:gui.QPen_ITF):void;
		SetValue(index:number,value:number):void;
		ConnectValueChanged(f:(index:number)=>void):void;
		DisconnectValueChanged():void;
		ValueChanged(index:number):void;
		ConnectValuesChanged(f:()=>void):void;
		DisconnectValuesChanged():void;
		ValuesChanged():void;
		ConnectDestroyQBoxSet(f:()=>void):void;
		DisconnectDestroyQBoxSet():void;
		DestroyQBoxSet():void;
		DestroyQBoxSetDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQBoxSetFromPointer(ptr:number):QBoxSet;
	function NewQBoxSet(label:string,parent:core.QObject_ITF):QBoxSet;
	function NewQBoxSet2(le:number,lq:number,m:number,uq:number,ue:number,label:string,parent:core.QObject_ITF):QBoxSet;
	const QBoxSet__LowerExtreme: number;
	const QBoxSet__LowerQuartile: number;
	const QBoxSet__Median: number;
	const QBoxSet__UpperQuartile: number;
	const QBoxSet__UpperExtreme: number;
	interface QCandlestickLegendMarker_ITF extends QLegendMarker_ITF {
		QCandlestickLegendMarker_PTR():QCandlestickLegendMarker;
	}

	class QCandlestickLegendMarker extends QLegendMarker {
		___pointer: number;
		QCandlestickLegendMarker_PTR():QCandlestickLegendMarker;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectSeries(f:()=>QCandlestickSeries):void;
		DisconnectSeries():void;
		Series():QCandlestickSeries;
		SeriesDefault():QCandlestickSeries;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
	}
	function NewQCandlestickLegendMarkerFromPointer(ptr:number):QCandlestickLegendMarker;
	interface QCandlestickModelMapper_ITF extends core.QObject_ITF {
		QCandlestickModelMapper_PTR():QCandlestickModelMapper;
	}

	class QCandlestickModelMapper extends core.QObject {
		___pointer: number;
		QCandlestickModelMapper_PTR():QCandlestickModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		Close():number;
		FirstSetSection():number;
		High():number;
		LastSetSection():number;
		Low():number;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		Open():number;
		ConnectOrientation(f:()=>number):void;
		DisconnectOrientation():void;
		Orientation():number;
		Series():QCandlestickSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetClose(close:number):void;
		SetFirstSetSection(firstSetSection:number):void;
		SetHigh(high:number):void;
		SetLastSetSection(lastSetSection:number):void;
		SetLow(low:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetOpen(open:number):void;
		SetSeries(series:QCandlestickSeries_ITF):void;
		SetTimestamp(timestamp:number):void;
		Timestamp():number;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQCandlestickModelMapperFromPointer(ptr:number):QCandlestickModelMapper;
	function NewQCandlestickModelMapper(parent:core.QObject_ITF):QCandlestickModelMapper;
	interface QCandlestickSeries_ITF extends QAbstractSeries_ITF {
		QCandlestickSeries_PTR():QCandlestickSeries;
	}

	class QCandlestickSeries extends QAbstractSeries {
		___pointer: number;
		QCandlestickSeries_PTR():QCandlestickSeries;
		Pointer():number;
		SetPointer(p:number):void;
		Append(set:QCandlestickSet_ITF):boolean;
		Append2(sets:QCandlestickSet[]):boolean;
		ConnectBodyOutlineVisibilityChanged(f:()=>void):void;
		DisconnectBodyOutlineVisibilityChanged():void;
		BodyOutlineVisibilityChanged():void;
		BodyOutlineVisible():boolean;
		BodyWidth():number;
		ConnectBodyWidthChanged(f:()=>void):void;
		DisconnectBodyWidthChanged():void;
		BodyWidthChanged():void;
		Brush():gui.QBrush;
		ConnectBrushChanged(f:()=>void):void;
		DisconnectBrushChanged():void;
		BrushChanged():void;
		ConnectCandlestickSetsAdded(f:(sets:QCandlestickSet[])=>void):void;
		DisconnectCandlestickSetsAdded():void;
		CandlestickSetsAdded(sets:QCandlestickSet[]):void;
		ConnectCandlestickSetsRemoved(f:(sets:QCandlestickSet[])=>void):void;
		DisconnectCandlestickSetsRemoved():void;
		CandlestickSetsRemoved(sets:QCandlestickSet[]):void;
		ConnectCapsVisibilityChanged(f:()=>void):void;
		DisconnectCapsVisibilityChanged():void;
		CapsVisibilityChanged():void;
		CapsVisible():boolean;
		CapsWidth():number;
		ConnectCapsWidthChanged(f:()=>void):void;
		DisconnectCapsWidthChanged():void;
		CapsWidthChanged():void;
		Clear():void;
		ConnectClicked(f:(set:QCandlestickSet)=>void):void;
		DisconnectClicked():void;
		Clicked(set:QCandlestickSet_ITF):void;
		Count():number;
		ConnectCountChanged(f:()=>void):void;
		DisconnectCountChanged():void;
		CountChanged():void;
		DecreasingColor():gui.QColor;
		ConnectDecreasingColorChanged(f:()=>void):void;
		DisconnectDecreasingColorChanged():void;
		DecreasingColorChanged():void;
		ConnectDoubleClicked(f:(set:QCandlestickSet)=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked(set:QCandlestickSet_ITF):void;
		ConnectHovered(f:(status:boolean,set:QCandlestickSet)=>void):void;
		DisconnectHovered():void;
		Hovered(status:boolean,set:QCandlestickSet_ITF):void;
		IncreasingColor():gui.QColor;
		ConnectIncreasingColorChanged(f:()=>void):void;
		DisconnectIncreasingColorChanged():void;
		IncreasingColorChanged():void;
		Insert(index:number,set:QCandlestickSet_ITF):boolean;
		MaximumColumnWidth():number;
		ConnectMaximumColumnWidthChanged(f:()=>void):void;
		DisconnectMaximumColumnWidthChanged():void;
		MaximumColumnWidthChanged():void;
		MinimumColumnWidth():number;
		ConnectMinimumColumnWidthChanged(f:()=>void):void;
		DisconnectMinimumColumnWidthChanged():void;
		MinimumColumnWidthChanged():void;
		Pen():gui.QPen;
		ConnectPenChanged(f:()=>void):void;
		DisconnectPenChanged():void;
		PenChanged():void;
		ConnectPressed(f:(set:QCandlestickSet)=>void):void;
		DisconnectPressed():void;
		Pressed(set:QCandlestickSet_ITF):void;
		ConnectReleased(f:(set:QCandlestickSet)=>void):void;
		DisconnectReleased():void;
		Released(set:QCandlestickSet_ITF):void;
		Remove(set:QCandlestickSet_ITF):boolean;
		Remove2(sets:QCandlestickSet[]):boolean;
		SetBodyOutlineVisible(bodyOutlineVisible:boolean):void;
		SetBodyWidth(bodyWidth:number):void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetCapsVisible(capsVisible:boolean):void;
		SetCapsWidth(capsWidth:number):void;
		SetDecreasingColor(decreasingColor:gui.QColor_ITF):void;
		SetIncreasingColor(increasingColor:gui.QColor_ITF):void;
		SetMaximumColumnWidth(maximumColumnWidth:number):void;
		SetMinimumColumnWidth(minimumColumnWidth:number):void;
		SetPen(pen:gui.QPen_ITF):void;
		Sets():QCandlestickSet[];
		Take(set:QCandlestickSet_ITF):boolean;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQCandlestickSeries(f:()=>void):void;
		DisconnectDestroyQCandlestickSeries():void;
		DestroyQCandlestickSeries():void;
		DestroyQCandlestickSeriesDefault():void;
	}
	function NewQCandlestickSeriesFromPointer(ptr:number):QCandlestickSeries;
	function NewQCandlestickSeries(parent:core.QObject_ITF):QCandlestickSeries;
	interface QCandlestickSet_ITF extends core.QObject_ITF {
		QCandlestickSet_PTR():QCandlestickSet;
	}

	class QCandlestickSet extends core.QObject {
		___pointer: number;
		QCandlestickSet_PTR():QCandlestickSet;
		Pointer():number;
		SetPointer(p:number):void;
		Brush():gui.QBrush;
		ConnectBrushChanged(f:()=>void):void;
		DisconnectBrushChanged():void;
		BrushChanged():void;
		ConnectClicked(f:()=>void):void;
		DisconnectClicked():void;
		Clicked():void;
		Close():number;
		ConnectCloseChanged(f:()=>void):void;
		DisconnectCloseChanged():void;
		CloseChanged():void;
		ConnectDoubleClicked(f:()=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked():void;
		High():number;
		ConnectHighChanged(f:()=>void):void;
		DisconnectHighChanged():void;
		HighChanged():void;
		ConnectHovered(f:(status:boolean)=>void):void;
		DisconnectHovered():void;
		Hovered(status:boolean):void;
		Low():number;
		ConnectLowChanged(f:()=>void):void;
		DisconnectLowChanged():void;
		LowChanged():void;
		Open():number;
		ConnectOpenChanged(f:()=>void):void;
		DisconnectOpenChanged():void;
		OpenChanged():void;
		Pen():gui.QPen;
		ConnectPenChanged(f:()=>void):void;
		DisconnectPenChanged():void;
		PenChanged():void;
		ConnectPressed(f:()=>void):void;
		DisconnectPressed():void;
		Pressed():void;
		ConnectReleased(f:()=>void):void;
		DisconnectReleased():void;
		Released():void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetClose(close:number):void;
		SetHigh(high:number):void;
		SetLow(low:number):void;
		SetOpen(open:number):void;
		SetPen(pen:gui.QPen_ITF):void;
		SetTimestamp(timestamp:number):void;
		Timestamp():number;
		ConnectTimestampChanged(f:()=>void):void;
		DisconnectTimestampChanged():void;
		TimestampChanged():void;
		ConnectDestroyQCandlestickSet(f:()=>void):void;
		DisconnectDestroyQCandlestickSet():void;
		DestroyQCandlestickSet():void;
		DestroyQCandlestickSetDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQCandlestickSetFromPointer(ptr:number):QCandlestickSet;
	function NewQCandlestickSet(timestamp:number,parent:core.QObject_ITF):QCandlestickSet;
	function NewQCandlestickSet2(open:number,high:number,low:number,close:number,timestamp:number,parent:core.QObject_ITF):QCandlestickSet;
	interface QCategoryAxis_ITF extends QValueAxis_ITF {
		QCategoryAxis_PTR():QCategoryAxis;
	}

	class QCategoryAxis extends QValueAxis {
		___pointer: number;
		QCategoryAxis_PTR():QCategoryAxis;
		Pointer():number;
		SetPointer(p:number):void;
		Append(categoryLabel:string,categoryEndValue:number):void;
		ConnectCategoriesChanged(f:()=>void):void;
		DisconnectCategoriesChanged():void;
		CategoriesChanged():void;
		CategoriesLabels():string[];
		Count():number;
		EndValue(categoryLabel:string):number;
		LabelsPosition():number;
		ConnectLabelsPositionChanged(f:(position:number)=>void):void;
		DisconnectLabelsPositionChanged():void;
		LabelsPositionChanged(position:number):void;
		Remove(categoryLabel:string):void;
		ReplaceLabel(oldLabel:string,newLabel:string):void;
		SetLabelsPosition(position:number):void;
		SetStartValue(mi:number):void;
		StartValue(categoryLabel:string):number;
		ConnectDestroyQCategoryAxis(f:()=>void):void;
		DisconnectDestroyQCategoryAxis():void;
		DestroyQCategoryAxis():void;
		DestroyQCategoryAxisDefault():void;
	}
	function NewQCategoryAxisFromPointer(ptr:number):QCategoryAxis;
	function NewQCategoryAxis(parent:core.QObject_ITF):QCategoryAxis;
	const QCategoryAxis__AxisLabelsPositionCenter: number;
	const QCategoryAxis__AxisLabelsPositionOnValue: number;
	interface QChart_ITF extends widgets.QGraphicsWidget_ITF {
		QChart_PTR():QChart;
	}

	class QChart extends widgets.QGraphicsWidget {
		___pointer: number;
		QChart_PTR():QChart;
		Pointer():number;
		SetPointer(p:number):void;
		AddAxis(axis:QAbstractAxis_ITF,alignment:number):void;
		AddSeries(series:QAbstractSeries_ITF):void;
		AnimationDuration():number;
		AnimationEasingCurve():core.QEasingCurve;
		AnimationOptions():number;
		Axes(orientation:number,series:QAbstractSeries_ITF):QAbstractAxis[];
		BackgroundBrush():gui.QBrush;
		BackgroundPen():gui.QPen;
		BackgroundRoundness():number;
		ChartType():number;
		CreateDefaultAxes():void;
		IsBackgroundVisible():boolean;
		IsDropShadowEnabled():boolean;
		IsPlotAreaBackgroundVisible():boolean;
		IsZoomed():boolean;
		Legend():QLegend;
		Locale():core.QLocale;
		LocalizeNumbers():boolean;
		MapToPosition(value:core.QPointF_ITF,series:QAbstractSeries_ITF):core.QPointF;
		MapToValue(position:core.QPointF_ITF,series:QAbstractSeries_ITF):core.QPointF;
		Margins():core.QMargins;
		PlotArea():core.QRectF;
		PlotAreaBackgroundBrush():gui.QBrush;
		PlotAreaBackgroundPen():gui.QPen;
		ConnectPlotAreaChanged(f:(plotArea:core.QRectF)=>void):void;
		DisconnectPlotAreaChanged():void;
		PlotAreaChanged(plotArea:core.QRectF_ITF):void;
		RemoveAllSeries():void;
		RemoveAxis(axis:QAbstractAxis_ITF):void;
		RemoveSeries(series:QAbstractSeries_ITF):void;
		Scroll(dx:number,dy:number):void;
		Series():QAbstractSeries[];
		SetAnimationDuration(msecs:number):void;
		SetAnimationEasingCurve(curve:core.QEasingCurve_ITF):void;
		SetAnimationOptions(options:number):void;
		SetBackgroundBrush(brush:gui.QBrush_ITF):void;
		SetBackgroundPen(pen:gui.QPen_ITF):void;
		SetBackgroundRoundness(diameter:number):void;
		SetBackgroundVisible(visible:boolean):void;
		SetDropShadowEnabled(enabled:boolean):void;
		SetLocale(locale:core.QLocale_ITF):void;
		SetLocalizeNumbers(localize:boolean):void;
		SetMargins(margins:core.QMargins_ITF):void;
		SetPlotArea(rect:core.QRectF_ITF):void;
		SetPlotAreaBackgroundBrush(brush:gui.QBrush_ITF):void;
		SetPlotAreaBackgroundPen(pen:gui.QPen_ITF):void;
		SetPlotAreaBackgroundVisible(visible:boolean):void;
		SetTheme(theme:number):void;
		SetTitle(title:string):void;
		SetTitleBrush(brush:gui.QBrush_ITF):void;
		SetTitleFont(font:gui.QFont_ITF):void;
		Theme():number;
		Title():string;
		TitleBrush():gui.QBrush;
		TitleFont():gui.QFont;
		Zoom(factor:number):void;
		ZoomIn():void;
		ZoomIn2(rect:core.QRectF_ITF):void;
		ZoomOut():void;
		ZoomReset():void;
		ConnectDestroyQChart(f:()=>void):void;
		DisconnectDestroyQChart():void;
		DestroyQChart():void;
		DestroyQChartDefault():void;
		BoundingRectDefault():core.QRectF;
		ChangeEventDefault(event:core.QEvent_ITF):void;
		CloseDefault():boolean;
		CloseEventDefault(event:gui.QCloseEvent_ITF):void;
		EventDefault(event:core.QEvent_ITF):boolean;
		FocusInEventDefault(event:gui.QFocusEvent_ITF):void;
		FocusNextPrevChildDefault(next:boolean):boolean;
		FocusOutEventDefault(event:gui.QFocusEvent_ITF):void;
		GetContentsMarginsDefault(left:number,top:number,right:number,bottom:number):void;
		GrabKeyboardEventDefault(event:core.QEvent_ITF):void;
		GrabMouseEventDefault(event:core.QEvent_ITF):void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		HoverLeaveEventDefault(event:widgets.QGraphicsSceneHoverEvent_ITF):void;
		HoverMoveEventDefault(event:widgets.QGraphicsSceneHoverEvent_ITF):void;
		InitStyleOptionDefault(option:widgets.QStyleOption_ITF):void;
		ItemChangeDefault(change:number,value:core.QVariant_ITF):core.QVariant;
		MoveEventDefault(event:widgets.QGraphicsSceneMoveEvent_ITF):void;
		PaintDefault(painter:gui.QPainter_ITF,option:widgets.QStyleOptionGraphicsItem_ITF,widget:widgets.QWidget_ITF):void;
		PaintWindowFrameDefault(painter:gui.QPainter_ITF,option:widgets.QStyleOptionGraphicsItem_ITF,widget:widgets.QWidget_ITF):void;
		PolishEventDefault():void;
		ResizeEventDefault(event:widgets.QGraphicsSceneResizeEvent_ITF):void;
		SceneEventDefault(event:core.QEvent_ITF):boolean;
		SetGeometryDefault(rect:core.QRectF_ITF):void;
		ShapeDefault():gui.QPainterPath;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		SizeHintDefault(which:number,constraint:core.QSizeF_ITF):core.QSizeF;
		TypeDefault():number;
		UngrabKeyboardEventDefault(event:core.QEvent_ITF):void;
		UngrabMouseEventDefault(event:core.QEvent_ITF):void;
		UpdateGeometryDefault():void;
		WindowFrameEventDefault(event:core.QEvent_ITF):boolean;
		WindowFrameSectionAtDefault(pos:core.QPointF_ITF):number;
		UpdateMicroFocusDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
		AdvanceDefault(phase:number):void;
		CollidesWithItemDefault(other:widgets.QGraphicsItem_ITF,mode:number):boolean;
		CollidesWithPathDefault(path:gui.QPainterPath_ITF,mode:number):boolean;
		ContainsDefault(point:core.QPointF_ITF):boolean;
		ContextMenuEventDefault(event:widgets.QGraphicsSceneContextMenuEvent_ITF):void;
		DragEnterEventDefault(event:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DragLeaveEventDefault(event:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DragMoveEventDefault(event:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DropEventDefault(event:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		HoverEnterEventDefault(event:widgets.QGraphicsSceneHoverEvent_ITF):void;
		InputMethodEventDefault(event:gui.QInputMethodEvent_ITF):void;
		InputMethodQueryDefault(query:number):core.QVariant;
		IsObscuredByDefault(item:widgets.QGraphicsItem_ITF):boolean;
		KeyPressEventDefault(event:gui.QKeyEvent_ITF):void;
		KeyReleaseEventDefault(event:gui.QKeyEvent_ITF):void;
		MouseDoubleClickEventDefault(event:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MouseMoveEventDefault(event:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MousePressEventDefault(event:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MouseReleaseEventDefault(event:widgets.QGraphicsSceneMouseEvent_ITF):void;
		OpaqueAreaDefault():gui.QPainterPath;
		SceneEventFilterDefault(watched:widgets.QGraphicsItem_ITF,event:core.QEvent_ITF):boolean;
		WheelEventDefault(event:widgets.QGraphicsSceneWheelEvent_ITF):void;
	}
	function NewQChartFromPointer(ptr:number):QChart;
	function NewQChart(parent:widgets.QGraphicsItem_ITF,wFlags:number):QChart;
	const QChart__ChartTypeUndefined: number;
	const QChart__ChartTypeCartesian: number;
	const QChart__ChartTypePolar: number;
	const QChart__ChartThemeLight: number;
	const QChart__ChartThemeBlueCerulean: number;
	const QChart__ChartThemeDark: number;
	const QChart__ChartThemeBrownSand: number;
	const QChart__ChartThemeBlueNcs: number;
	const QChart__ChartThemeHighContrast: number;
	const QChart__ChartThemeBlueIcy: number;
	const QChart__ChartThemeQt: number;
	const QChart__NoAnimation: number;
	const QChart__GridAxisAnimations: number;
	const QChart__SeriesAnimations: number;
	const QChart__AllAnimations: number;
	interface QChartView_ITF extends widgets.QGraphicsView_ITF {
		QChartView_PTR():QChartView;
	}

	class QChartView extends widgets.QGraphicsView {
		___pointer: number;
		QChartView_PTR():QChartView;
		Pointer():number;
		SetPointer(p:number):void;
		Chart():QChart;
		MouseMoveEventDefault(event:gui.QMouseEvent_ITF):void;
		MousePressEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseReleaseEventDefault(event:gui.QMouseEvent_ITF):void;
		ResizeEventDefault(event:gui.QResizeEvent_ITF):void;
		RubberBand():number;
		SetChart(chart:QChart_ITF):void;
		SetRubberBand(rubberBand:number):void;
		ConnectDestroyQChartView(f:()=>void):void;
		DisconnectDestroyQChartView():void;
		DestroyQChartView():void;
		DestroyQChartViewDefault():void;
		ContextMenuEventDefault(event:gui.QContextMenuEvent_ITF):void;
		DragEnterEventDefault(event:gui.QDragEnterEvent_ITF):void;
		DragLeaveEventDefault(event:gui.QDragLeaveEvent_ITF):void;
		DragMoveEventDefault(event:gui.QDragMoveEvent_ITF):void;
		DrawBackgroundDefault(painter:gui.QPainter_ITF,rect:core.QRectF_ITF):void;
		DrawForegroundDefault(painter:gui.QPainter_ITF,rect:core.QRectF_ITF):void;
		DropEventDefault(event:gui.QDropEvent_ITF):void;
		EventDefault(event:core.QEvent_ITF):boolean;
		FocusInEventDefault(event:gui.QFocusEvent_ITF):void;
		FocusNextPrevChildDefault(next:boolean):boolean;
		FocusOutEventDefault(event:gui.QFocusEvent_ITF):void;
		InputMethodEventDefault(event:gui.QInputMethodEvent_ITF):void;
		InputMethodQueryDefault(query:number):core.QVariant;
		InvalidateSceneDefault(rect:core.QRectF_ITF,layers:number):void;
		KeyPressEventDefault(event:gui.QKeyEvent_ITF):void;
		KeyReleaseEventDefault(event:gui.QKeyEvent_ITF):void;
		MouseDoubleClickEventDefault(event:gui.QMouseEvent_ITF):void;
		PaintEventDefault(event:gui.QPaintEvent_ITF):void;
		ScrollContentsByDefault(dx:number,dy:number):void;
		SetupViewportDefault(widget:widgets.QWidget_ITF):void;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		SizeHintDefault():core.QSize;
		UpdateSceneDefault(rects:core.QRectF[]):void;
		UpdateSceneRectDefault(rect:core.QRectF_ITF):void;
		ViewportEventDefault(event:core.QEvent_ITF):boolean;
		WheelEventDefault(event:gui.QWheelEvent_ITF):void;
		MinimumSizeHintDefault():core.QSize;
		ViewportSizeHintDefault():core.QSize;
		ChangeEventDefault(ev:core.QEvent_ITF):void;
		ActionEventDefault(event:gui.QActionEvent_ITF):void;
		CloseDefault():boolean;
		CloseEventDefault(event:gui.QCloseEvent_ITF):void;
		EnterEventDefault(event:core.QEvent_ITF):void;
		HasHeightForWidthDefault():boolean;
		HeightForWidthDefault(w:number):number;
		HideDefault():void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		InitPainterDefault(painter:gui.QPainter_ITF):void;
		LeaveEventDefault(event:core.QEvent_ITF):void;
		LowerDefault():void;
		MetricDefault(m:number):number;
		MoveEventDefault(event:gui.QMoveEvent_ITF):void;
		NativeEventDefault(eventType:core.QByteArray_ITF,message:number,result:number):boolean;
		PaintEngineDefault():gui.QPaintEngine;
		RaiseDefault():void;
		RepaintDefault():void;
		SetDisabledDefault(disable:boolean):void;
		SetEnabledDefault(vbo:boolean):void;
		SetFocus2Default():void;
		SetHiddenDefault(hidden:boolean):void;
		SetStyleSheetDefault(styleSheet:string):void;
		SetVisibleDefault(visible:boolean):void;
		SetWindowModifiedDefault(vbo:boolean):void;
		SetWindowTitleDefault(vqs:string):void;
		ShowDefault():void;
		ShowFullScreenDefault():void;
		ShowMaximizedDefault():void;
		ShowMinimizedDefault():void;
		ShowNormalDefault():void;
		TabletEventDefault(event:gui.QTabletEvent_ITF):void;
		UpdateDefault():void;
		UpdateMicroFocusDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQChartViewFromPointer(ptr:number):QChartView;
	function NewQChartView(parent:widgets.QWidget_ITF):QChartView;
	function NewQChartView2(chart:QChart_ITF,parent:widgets.QWidget_ITF):QChartView;
	const QChartView__NoRubberBand: number;
	const QChartView__VerticalRubberBand: number;
	const QChartView__HorizontalRubberBand: number;
	const QChartView__RectangleRubberBand: number;
	interface QDateTimeAxis_ITF extends QAbstractAxis_ITF {
		QDateTimeAxis_PTR():QDateTimeAxis;
	}

	class QDateTimeAxis extends QAbstractAxis {
		___pointer: number;
		QDateTimeAxis_PTR():QDateTimeAxis;
		Pointer():number;
		SetPointer(p:number):void;
		Format():string;
		ConnectFormatChanged(f:(format:string)=>void):void;
		DisconnectFormatChanged():void;
		FormatChanged(format:string):void;
		Max():core.QDateTime;
		ConnectMaxChanged(f:(max:core.QDateTime)=>void):void;
		DisconnectMaxChanged():void;
		MaxChanged(max:core.QDateTime_ITF):void;
		Min():core.QDateTime;
		ConnectMinChanged(f:(mi:core.QDateTime)=>void):void;
		DisconnectMinChanged():void;
		MinChanged(mi:core.QDateTime_ITF):void;
		ConnectRangeChanged(f:(mi:core.QDateTime,max:core.QDateTime)=>void):void;
		DisconnectRangeChanged():void;
		RangeChanged(mi:core.QDateTime_ITF,max:core.QDateTime_ITF):void;
		SetFormat(format:string):void;
		SetMax(max:core.QDateTime_ITF):void;
		SetMin(mi:core.QDateTime_ITF):void;
		SetRange(mi:core.QDateTime_ITF,max:core.QDateTime_ITF):void;
		SetTickCount(count:number):void;
		TickCount():number;
		ConnectTickCountChanged(f:(tickCount:number)=>void):void;
		DisconnectTickCountChanged():void;
		TickCountChanged(tickCount:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQDateTimeAxis(f:()=>void):void;
		DisconnectDestroyQDateTimeAxis():void;
		DestroyQDateTimeAxis():void;
		DestroyQDateTimeAxisDefault():void;
	}
	function NewQDateTimeAxisFromPointer(ptr:number):QDateTimeAxis;
	function NewQDateTimeAxis(parent:core.QObject_ITF):QDateTimeAxis;
	interface QHBarModelMapper_ITF extends core.QObject_ITF {
		QHBarModelMapper_PTR():QHBarModelMapper;
	}

	class QHBarModelMapper extends core.QObject {
		___pointer: number;
		QHBarModelMapper_PTR():QHBarModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		ColumnCount():number;
		ConnectColumnCountChanged(f:()=>void):void;
		DisconnectColumnCountChanged():void;
		ColumnCountChanged():void;
		FirstBarSetRow():number;
		ConnectFirstBarSetRowChanged(f:()=>void):void;
		DisconnectFirstBarSetRowChanged():void;
		FirstBarSetRowChanged():void;
		FirstColumn():number;
		ConnectFirstColumnChanged(f:()=>void):void;
		DisconnectFirstColumnChanged():void;
		FirstColumnChanged():void;
		LastBarSetRow():number;
		ConnectLastBarSetRowChanged(f:()=>void):void;
		DisconnectLastBarSetRowChanged():void;
		LastBarSetRowChanged():void;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		Series():QAbstractBarSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetColumnCount(columnCount:number):void;
		SetFirstBarSetRow(firstBarSetRow:number):void;
		SetFirstColumn(firstColumn:number):void;
		SetLastBarSetRow(lastBarSetRow:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetSeries(series:QAbstractBarSeries_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQHBarModelMapperFromPointer(ptr:number):QHBarModelMapper;
	function NewQHBarModelMapper(parent:core.QObject_ITF):QHBarModelMapper;
	interface QHBoxPlotModelMapper_ITF extends core.QObject_ITF {
		QHBoxPlotModelMapper_PTR():QHBoxPlotModelMapper;
	}

	class QHBoxPlotModelMapper extends core.QObject {
		___pointer: number;
		QHBoxPlotModelMapper_PTR():QHBoxPlotModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		ColumnCount():number;
		ConnectColumnCountChanged(f:()=>void):void;
		DisconnectColumnCountChanged():void;
		ColumnCountChanged():void;
		FirstBoxSetRow():number;
		ConnectFirstBoxSetRowChanged(f:()=>void):void;
		DisconnectFirstBoxSetRowChanged():void;
		FirstBoxSetRowChanged():void;
		FirstColumn():number;
		ConnectFirstColumnChanged(f:()=>void):void;
		DisconnectFirstColumnChanged():void;
		FirstColumnChanged():void;
		LastBoxSetRow():number;
		ConnectLastBoxSetRowChanged(f:()=>void):void;
		DisconnectLastBoxSetRowChanged():void;
		LastBoxSetRowChanged():void;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		Series():QBoxPlotSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetColumnCount(rowCount:number):void;
		SetFirstBoxSetRow(firstBoxSetRow:number):void;
		SetFirstColumn(firstColumn:number):void;
		SetLastBoxSetRow(lastBoxSetRow:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetSeries(series:QBoxPlotSeries_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQHBoxPlotModelMapperFromPointer(ptr:number):QHBoxPlotModelMapper;
	function NewQHBoxPlotModelMapper(parent:core.QObject_ITF):QHBoxPlotModelMapper;
	interface QHCandlestickModelMapper_ITF extends QCandlestickModelMapper_ITF {
		QHCandlestickModelMapper_PTR():QHCandlestickModelMapper;
	}

	class QHCandlestickModelMapper extends QCandlestickModelMapper {
		___pointer: number;
		QHCandlestickModelMapper_PTR():QHCandlestickModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		CloseColumn():number;
		ConnectCloseColumnChanged(f:()=>void):void;
		DisconnectCloseColumnChanged():void;
		CloseColumnChanged():void;
		FirstSetRow():number;
		ConnectFirstSetRowChanged(f:()=>void):void;
		DisconnectFirstSetRowChanged():void;
		FirstSetRowChanged():void;
		HighColumn():number;
		ConnectHighColumnChanged(f:()=>void):void;
		DisconnectHighColumnChanged():void;
		HighColumnChanged():void;
		LastSetRow():number;
		ConnectLastSetRowChanged(f:()=>void):void;
		DisconnectLastSetRowChanged():void;
		LastSetRowChanged():void;
		LowColumn():number;
		ConnectLowColumnChanged(f:()=>void):void;
		DisconnectLowColumnChanged():void;
		LowColumnChanged():void;
		OpenColumn():number;
		ConnectOpenColumnChanged(f:()=>void):void;
		DisconnectOpenColumnChanged():void;
		OpenColumnChanged():void;
		ConnectOrientation(f:()=>number):void;
		DisconnectOrientation():void;
		Orientation():number;
		OrientationDefault():number;
		SetCloseColumn(closeColumn:number):void;
		SetFirstSetRow(firstSetRow:number):void;
		SetHighColumn(highColumn:number):void;
		SetLastSetRow(lastSetRow:number):void;
		SetLowColumn(lowColumn:number):void;
		SetOpenColumn(openColumn:number):void;
		SetTimestampColumn(timestampColumn:number):void;
		TimestampColumn():number;
		ConnectTimestampColumnChanged(f:()=>void):void;
		DisconnectTimestampColumnChanged():void;
		TimestampColumnChanged():void;
	}
	function NewQHCandlestickModelMapperFromPointer(ptr:number):QHCandlestickModelMapper;
	function NewQHCandlestickModelMapper(parent:core.QObject_ITF):QHCandlestickModelMapper;
	interface QHPieModelMapper_ITF extends QPieModelMapper_ITF {
		QHPieModelMapper_PTR():QHPieModelMapper;
	}

	class QHPieModelMapper extends QPieModelMapper {
		___pointer: number;
		QHPieModelMapper_PTR():QHPieModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		ColumnCount():number;
		ConnectColumnCountChanged(f:()=>void):void;
		DisconnectColumnCountChanged():void;
		ColumnCountChanged():void;
		FirstColumn():number;
		ConnectFirstColumnChanged(f:()=>void):void;
		DisconnectFirstColumnChanged():void;
		FirstColumnChanged():void;
		LabelsRow():number;
		ConnectLabelsRowChanged(f:()=>void):void;
		DisconnectLabelsRowChanged():void;
		LabelsRowChanged():void;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		Series():QPieSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetColumnCount(columnCount:number):void;
		SetFirstColumn(firstColumn:number):void;
		SetLabelsRow(labelsRow:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetSeries(series:QPieSeries_ITF):void;
		SetValuesRow(valuesRow:number):void;
		ValuesRow():number;
		ConnectValuesRowChanged(f:()=>void):void;
		DisconnectValuesRowChanged():void;
		ValuesRowChanged():void;
	}
	function NewQHPieModelMapperFromPointer(ptr:number):QHPieModelMapper;
	function NewQHPieModelMapper(parent:core.QObject_ITF):QHPieModelMapper;
	interface QHXYModelMapper_ITF extends QXYModelMapper_ITF {
		QHXYModelMapper_PTR():QHXYModelMapper;
	}

	class QHXYModelMapper extends QXYModelMapper {
		___pointer: number;
		QHXYModelMapper_PTR():QHXYModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		ColumnCount():number;
		ConnectColumnCountChanged(f:()=>void):void;
		DisconnectColumnCountChanged():void;
		ColumnCountChanged():void;
		FirstColumn():number;
		ConnectFirstColumnChanged(f:()=>void):void;
		DisconnectFirstColumnChanged():void;
		FirstColumnChanged():void;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		Series():QXYSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetColumnCount(columnCount:number):void;
		SetFirstColumn(firstColumn:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetSeries(series:QXYSeries_ITF):void;
		SetXRow(xRow:number):void;
		SetYRow(yRow:number):void;
		XRow():number;
		ConnectXRowChanged(f:()=>void):void;
		DisconnectXRowChanged():void;
		XRowChanged():void;
		YRow():number;
		ConnectYRowChanged(f:()=>void):void;
		DisconnectYRowChanged():void;
		YRowChanged():void;
	}
	function NewQHXYModelMapperFromPointer(ptr:number):QHXYModelMapper;
	function NewQHXYModelMapper(parent:core.QObject_ITF):QHXYModelMapper;
	interface QHorizontalBarSeries_ITF extends QAbstractBarSeries_ITF {
		QHorizontalBarSeries_PTR():QHorizontalBarSeries;
	}

	class QHorizontalBarSeries extends QAbstractBarSeries {
		___pointer: number;
		QHorizontalBarSeries_PTR():QHorizontalBarSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQHorizontalBarSeries(f:()=>void):void;
		DisconnectDestroyQHorizontalBarSeries():void;
		DestroyQHorizontalBarSeries():void;
		DestroyQHorizontalBarSeriesDefault():void;
	}
	function NewQHorizontalBarSeriesFromPointer(ptr:number):QHorizontalBarSeries;
	function NewQHorizontalBarSeries(parent:core.QObject_ITF):QHorizontalBarSeries;
	interface QHorizontalPercentBarSeries_ITF extends QAbstractBarSeries_ITF {
		QHorizontalPercentBarSeries_PTR():QHorizontalPercentBarSeries;
	}

	class QHorizontalPercentBarSeries extends QAbstractBarSeries {
		___pointer: number;
		QHorizontalPercentBarSeries_PTR():QHorizontalPercentBarSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQHorizontalPercentBarSeries(f:()=>void):void;
		DisconnectDestroyQHorizontalPercentBarSeries():void;
		DestroyQHorizontalPercentBarSeries():void;
		DestroyQHorizontalPercentBarSeriesDefault():void;
	}
	function NewQHorizontalPercentBarSeriesFromPointer(ptr:number):QHorizontalPercentBarSeries;
	function NewQHorizontalPercentBarSeries(parent:core.QObject_ITF):QHorizontalPercentBarSeries;
	interface QHorizontalStackedBarSeries_ITF extends QAbstractBarSeries_ITF {
		QHorizontalStackedBarSeries_PTR():QHorizontalStackedBarSeries;
	}

	class QHorizontalStackedBarSeries extends QAbstractBarSeries {
		___pointer: number;
		QHorizontalStackedBarSeries_PTR():QHorizontalStackedBarSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQHorizontalStackedBarSeries(f:()=>void):void;
		DisconnectDestroyQHorizontalStackedBarSeries():void;
		DestroyQHorizontalStackedBarSeries():void;
		DestroyQHorizontalStackedBarSeriesDefault():void;
	}
	function NewQHorizontalStackedBarSeriesFromPointer(ptr:number):QHorizontalStackedBarSeries;
	function NewQHorizontalStackedBarSeries(parent:core.QObject_ITF):QHorizontalStackedBarSeries;
	interface QLegend_ITF extends widgets.QGraphicsWidget_ITF {
		QLegend_PTR():QLegend;
	}

	class QLegend extends widgets.QGraphicsWidget {
		___pointer: number;
		QLegend_PTR():QLegend;
		Pointer():number;
		SetPointer(p:number):void;
		Alignment():number;
		AttachToChart():void;
		ConnectBackgroundVisibleChanged(f:(visible:boolean)=>void):void;
		DisconnectBackgroundVisibleChanged():void;
		BackgroundVisibleChanged(visible:boolean):void;
		BorderColor():gui.QColor;
		ConnectBorderColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectBorderColorChanged():void;
		BorderColorChanged(color:gui.QColor_ITF):void;
		Brush():gui.QBrush;
		Color():gui.QColor;
		ConnectColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectColorChanged():void;
		ColorChanged(color:gui.QColor_ITF):void;
		DetachFromChart():void;
		ConnectFontChanged(f:(font:gui.QFont)=>void):void;
		DisconnectFontChanged():void;
		FontChanged(font:gui.QFont_ITF):void;
		IsAttachedToChart():boolean;
		IsBackgroundVisible():boolean;
		LabelBrush():gui.QBrush;
		LabelColor():gui.QColor;
		ConnectLabelColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectLabelColorChanged():void;
		LabelColorChanged(color:gui.QColor_ITF):void;
		MarkerShape():number;
		ConnectMarkerShapeChanged(f:(shape:number)=>void):void;
		DisconnectMarkerShapeChanged():void;
		MarkerShapeChanged(shape:number):void;
		Markers(series:QAbstractSeries_ITF):QLegendMarker[];
		Pen():gui.QPen;
		ReverseMarkers():boolean;
		ConnectReverseMarkersChanged(f:(reverseMarkers:boolean)=>void):void;
		DisconnectReverseMarkersChanged():void;
		ReverseMarkersChanged(reverseMarkers:boolean):void;
		SetAlignment(alignment:number):void;
		SetBackgroundVisible(visible:boolean):void;
		SetBorderColor(color:gui.QColor_ITF):void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetColor(color:gui.QColor_ITF):void;
		SetLabelBrush(brush:gui.QBrush_ITF):void;
		SetLabelColor(color:gui.QColor_ITF):void;
		SetMarkerShape(shape:number):void;
		SetPen(pen:gui.QPen_ITF):void;
		SetReverseMarkers(reverseMarkers:boolean):void;
		SetShowToolTips(show:boolean):void;
		ShowToolTips():boolean;
		ConnectShowToolTipsChanged(f:(showToolTips:boolean)=>void):void;
		DisconnectShowToolTipsChanged():void;
		ShowToolTipsChanged(showToolTips:boolean):void;
		ConnectDestroyQLegend(f:()=>void):void;
		DisconnectDestroyQLegend():void;
		DestroyQLegend():void;
		DestroyQLegendDefault():void;
		BoundingRectDefault():core.QRectF;
		ChangeEventDefault(event:core.QEvent_ITF):void;
		CloseDefault():boolean;
		CloseEventDefault(event:gui.QCloseEvent_ITF):void;
		EventDefault(event:core.QEvent_ITF):boolean;
		FocusInEventDefault(event:gui.QFocusEvent_ITF):void;
		FocusNextPrevChildDefault(next:boolean):boolean;
		FocusOutEventDefault(event:gui.QFocusEvent_ITF):void;
		GetContentsMarginsDefault(left:number,top:number,right:number,bottom:number):void;
		GrabKeyboardEventDefault(event:core.QEvent_ITF):void;
		GrabMouseEventDefault(event:core.QEvent_ITF):void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		HoverLeaveEventDefault(event:widgets.QGraphicsSceneHoverEvent_ITF):void;
		HoverMoveEventDefault(event:widgets.QGraphicsSceneHoverEvent_ITF):void;
		InitStyleOptionDefault(option:widgets.QStyleOption_ITF):void;
		ItemChangeDefault(change:number,value:core.QVariant_ITF):core.QVariant;
		MoveEventDefault(event:widgets.QGraphicsSceneMoveEvent_ITF):void;
		PaintDefault(painter:gui.QPainter_ITF,option:widgets.QStyleOptionGraphicsItem_ITF,widget:widgets.QWidget_ITF):void;
		PaintWindowFrameDefault(painter:gui.QPainter_ITF,option:widgets.QStyleOptionGraphicsItem_ITF,widget:widgets.QWidget_ITF):void;
		PolishEventDefault():void;
		ResizeEventDefault(event:widgets.QGraphicsSceneResizeEvent_ITF):void;
		SceneEventDefault(event:core.QEvent_ITF):boolean;
		SetGeometryDefault(rect:core.QRectF_ITF):void;
		ShapeDefault():gui.QPainterPath;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		SizeHintDefault(which:number,constraint:core.QSizeF_ITF):core.QSizeF;
		TypeDefault():number;
		UngrabKeyboardEventDefault(event:core.QEvent_ITF):void;
		UngrabMouseEventDefault(event:core.QEvent_ITF):void;
		UpdateGeometryDefault():void;
		WindowFrameEventDefault(event:core.QEvent_ITF):boolean;
		WindowFrameSectionAtDefault(pos:core.QPointF_ITF):number;
		UpdateMicroFocusDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
		AdvanceDefault(phase:number):void;
		CollidesWithItemDefault(other:widgets.QGraphicsItem_ITF,mode:number):boolean;
		CollidesWithPathDefault(path:gui.QPainterPath_ITF,mode:number):boolean;
		ContainsDefault(point:core.QPointF_ITF):boolean;
		ContextMenuEventDefault(event:widgets.QGraphicsSceneContextMenuEvent_ITF):void;
		DragEnterEventDefault(event:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DragLeaveEventDefault(event:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DragMoveEventDefault(event:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DropEventDefault(event:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		HoverEnterEventDefault(event:widgets.QGraphicsSceneHoverEvent_ITF):void;
		InputMethodEventDefault(event:gui.QInputMethodEvent_ITF):void;
		InputMethodQueryDefault(query:number):core.QVariant;
		IsObscuredByDefault(item:widgets.QGraphicsItem_ITF):boolean;
		KeyPressEventDefault(event:gui.QKeyEvent_ITF):void;
		KeyReleaseEventDefault(event:gui.QKeyEvent_ITF):void;
		MouseDoubleClickEventDefault(event:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MouseMoveEventDefault(event:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MousePressEventDefault(event:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MouseReleaseEventDefault(event:widgets.QGraphicsSceneMouseEvent_ITF):void;
		OpaqueAreaDefault():gui.QPainterPath;
		SceneEventFilterDefault(watched:widgets.QGraphicsItem_ITF,event:core.QEvent_ITF):boolean;
		WheelEventDefault(event:widgets.QGraphicsSceneWheelEvent_ITF):void;
	}
	function NewQLegendFromPointer(ptr:number):QLegend;
	const QLegend__MarkerShapeDefault: number;
	const QLegend__MarkerShapeRectangle: number;
	const QLegend__MarkerShapeCircle: number;
	const QLegend__MarkerShapeFromSeries: number;
	interface QLegendMarker_ITF extends core.QObject_ITF {
		QLegendMarker_PTR():QLegendMarker;
	}

	class QLegendMarker extends core.QObject {
		___pointer: number;
		QLegendMarker_PTR():QLegendMarker;
		Pointer():number;
		SetPointer(p:number):void;
		Brush():gui.QBrush;
		ConnectBrushChanged(f:()=>void):void;
		DisconnectBrushChanged():void;
		BrushChanged():void;
		ConnectClicked(f:()=>void):void;
		DisconnectClicked():void;
		Clicked():void;
		Font():gui.QFont;
		ConnectFontChanged(f:()=>void):void;
		DisconnectFontChanged():void;
		FontChanged():void;
		ConnectHovered(f:(status:boolean)=>void):void;
		DisconnectHovered():void;
		Hovered(status:boolean):void;
		IsVisible():boolean;
		Label():string;
		LabelBrush():gui.QBrush;
		ConnectLabelBrushChanged(f:()=>void):void;
		DisconnectLabelBrushChanged():void;
		LabelBrushChanged():void;
		ConnectLabelChanged(f:()=>void):void;
		DisconnectLabelChanged():void;
		LabelChanged():void;
		Pen():gui.QPen;
		ConnectPenChanged(f:()=>void):void;
		DisconnectPenChanged():void;
		PenChanged():void;
		ConnectSeries(f:()=>QAbstractSeries):void;
		DisconnectSeries():void;
		Series():QAbstractSeries;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetFont(font:gui.QFont_ITF):void;
		SetLabel(label:string):void;
		SetLabelBrush(brush:gui.QBrush_ITF):void;
		SetPen(pen:gui.QPen_ITF):void;
		SetShape(shape:number):void;
		SetVisible(visible:boolean):void;
		Shape():number;
		ConnectShapeChanged(f:()=>void):void;
		DisconnectShapeChanged():void;
		ShapeChanged():void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		ConnectVisibleChanged(f:()=>void):void;
		DisconnectVisibleChanged():void;
		VisibleChanged():void;
		ConnectDestroyQLegendMarker(f:()=>void):void;
		DisconnectDestroyQLegendMarker():void;
		DestroyQLegendMarker():void;
		DestroyQLegendMarkerDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQLegendMarkerFromPointer(ptr:number):QLegendMarker;
	const QLegendMarker__LegendMarkerTypeArea: number;
	const QLegendMarker__LegendMarkerTypeBar: number;
	const QLegendMarker__LegendMarkerTypePie: number;
	const QLegendMarker__LegendMarkerTypeXY: number;
	const QLegendMarker__LegendMarkerTypeBoxPlot: number;
	const QLegendMarker__LegendMarkerTypeCandlestick: number;
	interface QLineSeries_ITF extends QXYSeries_ITF {
		QLineSeries_PTR():QLineSeries;
	}

	class QLineSeries extends QXYSeries {
		___pointer: number;
		QLineSeries_PTR():QLineSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQLineSeries(f:()=>void):void;
		DisconnectDestroyQLineSeries():void;
		DestroyQLineSeries():void;
		DestroyQLineSeriesDefault():void;
	}
	function NewQLineSeriesFromPointer(ptr:number):QLineSeries;
	function NewQLineSeries(parent:core.QObject_ITF):QLineSeries;
	interface QLogValueAxis_ITF extends QAbstractAxis_ITF {
		QLogValueAxis_PTR():QLogValueAxis;
	}

	class QLogValueAxis extends QAbstractAxis {
		___pointer: number;
		QLogValueAxis_PTR():QLogValueAxis;
		Pointer():number;
		SetPointer(p:number):void;
		Base():number;
		ConnectBaseChanged(f:(base:number)=>void):void;
		DisconnectBaseChanged():void;
		BaseChanged(base:number):void;
		LabelFormat():string;
		ConnectLabelFormatChanged(f:(format:string)=>void):void;
		DisconnectLabelFormatChanged():void;
		LabelFormatChanged(format:string):void;
		Max():number;
		ConnectMaxChanged(f:(max:number)=>void):void;
		DisconnectMaxChanged():void;
		MaxChanged(max:number):void;
		Min():number;
		ConnectMinChanged(f:(mi:number)=>void):void;
		DisconnectMinChanged():void;
		MinChanged(mi:number):void;
		MinorTickCount():number;
		ConnectMinorTickCountChanged(f:(minorTickCount:number)=>void):void;
		DisconnectMinorTickCountChanged():void;
		MinorTickCountChanged(minorTickCount:number):void;
		ConnectRangeChanged(f:(mi:number,max:number)=>void):void;
		DisconnectRangeChanged():void;
		RangeChanged(mi:number,max:number):void;
		SetBase(base:number):void;
		SetLabelFormat(format:string):void;
		SetMax(max:number):void;
		SetMin(mi:number):void;
		SetMinorTickCount(minorTickCount:number):void;
		SetRange(mi:number,max:number):void;
		TickCount():number;
		ConnectTickCountChanged(f:(tickCount:number)=>void):void;
		DisconnectTickCountChanged():void;
		TickCountChanged(tickCount:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQLogValueAxis(f:()=>void):void;
		DisconnectDestroyQLogValueAxis():void;
		DestroyQLogValueAxis():void;
		DestroyQLogValueAxisDefault():void;
	}
	function NewQLogValueAxisFromPointer(ptr:number):QLogValueAxis;
	function NewQLogValueAxis(parent:core.QObject_ITF):QLogValueAxis;
	interface QPercentBarSeries_ITF extends QAbstractBarSeries_ITF {
		QPercentBarSeries_PTR():QPercentBarSeries;
	}

	class QPercentBarSeries extends QAbstractBarSeries {
		___pointer: number;
		QPercentBarSeries_PTR():QPercentBarSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQPercentBarSeries(f:()=>void):void;
		DisconnectDestroyQPercentBarSeries():void;
		DestroyQPercentBarSeries():void;
		DestroyQPercentBarSeriesDefault():void;
	}
	function NewQPercentBarSeriesFromPointer(ptr:number):QPercentBarSeries;
	function NewQPercentBarSeries(parent:core.QObject_ITF):QPercentBarSeries;
	interface QPieLegendMarker_ITF extends QLegendMarker_ITF {
		QPieLegendMarker_PTR():QPieLegendMarker;
	}

	class QPieLegendMarker extends QLegendMarker {
		___pointer: number;
		QPieLegendMarker_PTR():QPieLegendMarker;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectSeries(f:()=>QPieSeries):void;
		DisconnectSeries():void;
		Series():QPieSeries;
		SeriesDefault():QPieSeries;
		Slice():QPieSlice;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQPieLegendMarker(f:()=>void):void;
		DisconnectDestroyQPieLegendMarker():void;
		DestroyQPieLegendMarker():void;
		DestroyQPieLegendMarkerDefault():void;
	}
	function NewQPieLegendMarkerFromPointer(ptr:number):QPieLegendMarker;
	interface QPieModelMapper_ITF extends core.QObject_ITF {
		QPieModelMapper_PTR():QPieModelMapper;
	}

	class QPieModelMapper extends core.QObject {
		___pointer: number;
		QPieModelMapper_PTR():QPieModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		Count():number;
		First():number;
		LabelsSection():number;
		Orientation():number;
		SetCount(count:number):void;
		SetFirst(first:number):void;
		SetLabelsSection(labelsSection:number):void;
		SetOrientation(orientation:number):void;
		SetValuesSection(valuesSection:number):void;
		ValuesSection():number;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQPieModelMapperFromPointer(ptr:number):QPieModelMapper;
	interface QPieSeries_ITF extends QAbstractSeries_ITF {
		QPieSeries_PTR():QPieSeries;
	}

	class QPieSeries extends QAbstractSeries {
		___pointer: number;
		QPieSeries_PTR():QPieSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectAdded(f:(slices:QPieSlice[])=>void):void;
		DisconnectAdded():void;
		Added(slices:QPieSlice[]):void;
		Append(slice:QPieSlice_ITF):boolean;
		Append2(slices:QPieSlice[]):boolean;
		Append3(label:string,value:number):QPieSlice;
		Clear():void;
		ConnectClicked(f:(slice:QPieSlice)=>void):void;
		DisconnectClicked():void;
		Clicked(slice:QPieSlice_ITF):void;
		Count():number;
		ConnectCountChanged(f:()=>void):void;
		DisconnectCountChanged():void;
		CountChanged():void;
		ConnectDoubleClicked(f:(slice:QPieSlice)=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked(slice:QPieSlice_ITF):void;
		HoleSize():number;
		HorizontalPosition():number;
		ConnectHovered(f:(slice:QPieSlice,state:boolean)=>void):void;
		DisconnectHovered():void;
		Hovered(slice:QPieSlice_ITF,state:boolean):void;
		Insert(index:number,slice:QPieSlice_ITF):boolean;
		IsEmpty():boolean;
		PieEndAngle():number;
		PieSize():number;
		PieStartAngle():number;
		ConnectPressed(f:(slice:QPieSlice)=>void):void;
		DisconnectPressed():void;
		Pressed(slice:QPieSlice_ITF):void;
		ConnectReleased(f:(slice:QPieSlice)=>void):void;
		DisconnectReleased():void;
		Released(slice:QPieSlice_ITF):void;
		Remove(slice:QPieSlice_ITF):boolean;
		ConnectRemoved(f:(slices:QPieSlice[])=>void):void;
		DisconnectRemoved():void;
		Removed(slices:QPieSlice[]):void;
		SetHoleSize(holeSize:number):void;
		SetHorizontalPosition(relativePosition:number):void;
		SetLabelsPosition(position:number):void;
		SetLabelsVisible(visible:boolean):void;
		SetPieEndAngle(angle:number):void;
		SetPieSize(relativeSize:number):void;
		SetPieStartAngle(startAngle:number):void;
		SetVerticalPosition(relativePosition:number):void;
		Slices():QPieSlice[];
		Sum():number;
		ConnectSumChanged(f:()=>void):void;
		DisconnectSumChanged():void;
		SumChanged():void;
		Take(slice:QPieSlice_ITF):boolean;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		VerticalPosition():number;
		ConnectDestroyQPieSeries(f:()=>void):void;
		DisconnectDestroyQPieSeries():void;
		DestroyQPieSeries():void;
		DestroyQPieSeriesDefault():void;
	}
	function NewQPieSeriesFromPointer(ptr:number):QPieSeries;
	function NewQPieSeries(parent:core.QObject_ITF):QPieSeries;
	interface QPieSlice_ITF extends core.QObject_ITF {
		QPieSlice_PTR():QPieSlice;
	}

	class QPieSlice extends core.QObject {
		___pointer: number;
		QPieSlice_PTR():QPieSlice;
		Pointer():number;
		SetPointer(p:number):void;
		AngleSpan():number;
		ConnectAngleSpanChanged(f:()=>void):void;
		DisconnectAngleSpanChanged():void;
		AngleSpanChanged():void;
		BorderColor():gui.QColor;
		ConnectBorderColorChanged(f:()=>void):void;
		DisconnectBorderColorChanged():void;
		BorderColorChanged():void;
		BorderWidth():number;
		ConnectBorderWidthChanged(f:()=>void):void;
		DisconnectBorderWidthChanged():void;
		BorderWidthChanged():void;
		Brush():gui.QBrush;
		ConnectBrushChanged(f:()=>void):void;
		DisconnectBrushChanged():void;
		BrushChanged():void;
		ConnectClicked(f:()=>void):void;
		DisconnectClicked():void;
		Clicked():void;
		Color():gui.QColor;
		ConnectColorChanged(f:()=>void):void;
		DisconnectColorChanged():void;
		ColorChanged():void;
		ConnectDoubleClicked(f:()=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked():void;
		ExplodeDistanceFactor():number;
		ConnectHovered(f:(state:boolean)=>void):void;
		DisconnectHovered():void;
		Hovered(state:boolean):void;
		IsExploded():boolean;
		IsLabelVisible():boolean;
		Label():string;
		LabelArmLengthFactor():number;
		LabelBrush():gui.QBrush;
		ConnectLabelBrushChanged(f:()=>void):void;
		DisconnectLabelBrushChanged():void;
		LabelBrushChanged():void;
		ConnectLabelChanged(f:()=>void):void;
		DisconnectLabelChanged():void;
		LabelChanged():void;
		LabelColor():gui.QColor;
		ConnectLabelColorChanged(f:()=>void):void;
		DisconnectLabelColorChanged():void;
		LabelColorChanged():void;
		LabelFont():gui.QFont;
		ConnectLabelFontChanged(f:()=>void):void;
		DisconnectLabelFontChanged():void;
		LabelFontChanged():void;
		LabelPosition():number;
		ConnectLabelVisibleChanged(f:()=>void):void;
		DisconnectLabelVisibleChanged():void;
		LabelVisibleChanged():void;
		Pen():gui.QPen;
		ConnectPenChanged(f:()=>void):void;
		DisconnectPenChanged():void;
		PenChanged():void;
		Percentage():number;
		ConnectPercentageChanged(f:()=>void):void;
		DisconnectPercentageChanged():void;
		PercentageChanged():void;
		ConnectPressed(f:()=>void):void;
		DisconnectPressed():void;
		Pressed():void;
		ConnectReleased(f:()=>void):void;
		DisconnectReleased():void;
		Released():void;
		Series():QPieSeries;
		SetBorderColor(color:gui.QColor_ITF):void;
		SetBorderWidth(width:number):void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetColor(color:gui.QColor_ITF):void;
		SetExplodeDistanceFactor(factor:number):void;
		SetExploded(exploded:boolean):void;
		SetLabel(label:string):void;
		SetLabelArmLengthFactor(factor:number):void;
		SetLabelBrush(brush:gui.QBrush_ITF):void;
		SetLabelColor(color:gui.QColor_ITF):void;
		SetLabelFont(font:gui.QFont_ITF):void;
		SetLabelPosition(position:number):void;
		SetLabelVisible(visible:boolean):void;
		SetPen(pen:gui.QPen_ITF):void;
		SetValue(value:number):void;
		StartAngle():number;
		ConnectStartAngleChanged(f:()=>void):void;
		DisconnectStartAngleChanged():void;
		StartAngleChanged():void;
		Value():number;
		ConnectValueChanged(f:()=>void):void;
		DisconnectValueChanged():void;
		ValueChanged():void;
		ConnectDestroyQPieSlice(f:()=>void):void;
		DisconnectDestroyQPieSlice():void;
		DestroyQPieSlice():void;
		DestroyQPieSliceDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQPieSliceFromPointer(ptr:number):QPieSlice;
	function NewQPieSlice(parent:core.QObject_ITF):QPieSlice;
	function NewQPieSlice2(label:string,value:number,parent:core.QObject_ITF):QPieSlice;
	const QPieSlice__LabelOutside: number;
	const QPieSlice__LabelInsideHorizontal: number;
	const QPieSlice__LabelInsideTangential: number;
	const QPieSlice__LabelInsideNormal: number;
	interface QPolarChart_ITF extends QChart_ITF {
		QPolarChart_PTR():QPolarChart;
	}

	class QPolarChart extends QChart {
		___pointer: number;
		QPolarChart_PTR():QPolarChart;
		Pointer():number;
		SetPointer(p:number):void;
		AddAxis(axis:QAbstractAxis_ITF,polarOrientation:number):void;
		Axes(polarOrientation:number,series:QAbstractSeries_ITF):QAbstractAxis[];
		AxisPolarOrientation(axis:QAbstractAxis_ITF):number;
		ConnectDestroyQPolarChart(f:()=>void):void;
		DisconnectDestroyQPolarChart():void;
		DestroyQPolarChart():void;
		DestroyQPolarChartDefault():void;
	}
	function NewQPolarChartFromPointer(ptr:number):QPolarChart;
	function NewQPolarChart(parent:widgets.QGraphicsItem_ITF,wFlags:number):QPolarChart;
	function QPolarChart_AxisPolarOrientation(axis:QAbstractAxis_ITF):number;
	const QPolarChart__PolarOrientationRadial: number;
	const QPolarChart__PolarOrientationAngular: number;
	interface QScatterSeries_ITF extends QXYSeries_ITF {
		QScatterSeries_PTR():QScatterSeries;
	}

	class QScatterSeries extends QXYSeries {
		___pointer: number;
		QScatterSeries_PTR():QScatterSeries;
		Pointer():number;
		SetPointer(p:number):void;
		BorderColor():gui.QColor;
		ConnectBorderColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectBorderColorChanged():void;
		BorderColorChanged(color:gui.QColor_ITF):void;
		MarkerShape():number;
		ConnectMarkerShapeChanged(f:(shape:number)=>void):void;
		DisconnectMarkerShapeChanged():void;
		MarkerShapeChanged(shape:number):void;
		MarkerSize():number;
		ConnectMarkerSizeChanged(f:(size:number)=>void):void;
		DisconnectMarkerSizeChanged():void;
		MarkerSizeChanged(size:number):void;
		SetBorderColor(color:gui.QColor_ITF):void;
		SetMarkerShape(shape:number):void;
		SetMarkerSize(size:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQScatterSeries(f:()=>void):void;
		DisconnectDestroyQScatterSeries():void;
		DestroyQScatterSeries():void;
		DestroyQScatterSeriesDefault():void;
	}
	function NewQScatterSeriesFromPointer(ptr:number):QScatterSeries;
	function NewQScatterSeries(parent:core.QObject_ITF):QScatterSeries;
	const QScatterSeries__MarkerShapeCircle: number;
	const QScatterSeries__MarkerShapeRectangle: number;
	interface QSplineSeries_ITF extends QLineSeries_ITF {
		QSplineSeries_PTR():QSplineSeries;
	}

	class QSplineSeries extends QLineSeries {
		___pointer: number;
		QSplineSeries_PTR():QSplineSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectDestroyQSplineSeries(f:()=>void):void;
		DisconnectDestroyQSplineSeries():void;
		DestroyQSplineSeries():void;
		DestroyQSplineSeriesDefault():void;
	}
	function NewQSplineSeriesFromPointer(ptr:number):QSplineSeries;
	function NewQSplineSeries(parent:core.QObject_ITF):QSplineSeries;
	interface QStackedBarSeries_ITF extends QAbstractBarSeries_ITF {
		QStackedBarSeries_PTR():QStackedBarSeries;
	}

	class QStackedBarSeries extends QAbstractBarSeries {
		___pointer: number;
		QStackedBarSeries_PTR():QStackedBarSeries;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQStackedBarSeries(f:()=>void):void;
		DisconnectDestroyQStackedBarSeries():void;
		DestroyQStackedBarSeries():void;
		DestroyQStackedBarSeriesDefault():void;
	}
	function NewQStackedBarSeriesFromPointer(ptr:number):QStackedBarSeries;
	function NewQStackedBarSeries(parent:core.QObject_ITF):QStackedBarSeries;
	interface QVBarModelMapper_ITF extends core.QObject_ITF {
		QVBarModelMapper_PTR():QVBarModelMapper;
	}

	class QVBarModelMapper extends core.QObject {
		___pointer: number;
		QVBarModelMapper_PTR():QVBarModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		FirstBarSetColumn():number;
		ConnectFirstBarSetColumnChanged(f:()=>void):void;
		DisconnectFirstBarSetColumnChanged():void;
		FirstBarSetColumnChanged():void;
		FirstRow():number;
		ConnectFirstRowChanged(f:()=>void):void;
		DisconnectFirstRowChanged():void;
		FirstRowChanged():void;
		LastBarSetColumn():number;
		ConnectLastBarSetColumnChanged(f:()=>void):void;
		DisconnectLastBarSetColumnChanged():void;
		LastBarSetColumnChanged():void;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		RowCount():number;
		ConnectRowCountChanged(f:()=>void):void;
		DisconnectRowCountChanged():void;
		RowCountChanged():void;
		Series():QAbstractBarSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetFirstBarSetColumn(firstBarSetColumn:number):void;
		SetFirstRow(firstRow:number):void;
		SetLastBarSetColumn(lastBarSetColumn:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetRowCount(rowCount:number):void;
		SetSeries(series:QAbstractBarSeries_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQVBarModelMapperFromPointer(ptr:number):QVBarModelMapper;
	function NewQVBarModelMapper(parent:core.QObject_ITF):QVBarModelMapper;
	interface QVBoxPlotModelMapper_ITF extends core.QObject_ITF {
		QVBoxPlotModelMapper_PTR():QVBoxPlotModelMapper;
	}

	class QVBoxPlotModelMapper extends core.QObject {
		___pointer: number;
		QVBoxPlotModelMapper_PTR():QVBoxPlotModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		FirstBoxSetColumn():number;
		ConnectFirstBoxSetColumnChanged(f:()=>void):void;
		DisconnectFirstBoxSetColumnChanged():void;
		FirstBoxSetColumnChanged():void;
		FirstRow():number;
		ConnectFirstRowChanged(f:()=>void):void;
		DisconnectFirstRowChanged():void;
		FirstRowChanged():void;
		LastBoxSetColumn():number;
		ConnectLastBoxSetColumnChanged(f:()=>void):void;
		DisconnectLastBoxSetColumnChanged():void;
		LastBoxSetColumnChanged():void;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		RowCount():number;
		ConnectRowCountChanged(f:()=>void):void;
		DisconnectRowCountChanged():void;
		RowCountChanged():void;
		Series():QBoxPlotSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetFirstBoxSetColumn(firstBoxSetColumn:number):void;
		SetFirstRow(firstRow:number):void;
		SetLastBoxSetColumn(lastBoxSetColumn:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetRowCount(rowCount:number):void;
		SetSeries(series:QBoxPlotSeries_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQVBoxPlotModelMapperFromPointer(ptr:number):QVBoxPlotModelMapper;
	function NewQVBoxPlotModelMapper(parent:core.QObject_ITF):QVBoxPlotModelMapper;
	interface QVCandlestickModelMapper_ITF extends QCandlestickModelMapper_ITF {
		QVCandlestickModelMapper_PTR():QVCandlestickModelMapper;
	}

	class QVCandlestickModelMapper extends QCandlestickModelMapper {
		___pointer: number;
		QVCandlestickModelMapper_PTR():QVCandlestickModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		CloseRow():number;
		ConnectCloseRowChanged(f:()=>void):void;
		DisconnectCloseRowChanged():void;
		CloseRowChanged():void;
		FirstSetColumn():number;
		ConnectFirstSetColumnChanged(f:()=>void):void;
		DisconnectFirstSetColumnChanged():void;
		FirstSetColumnChanged():void;
		HighRow():number;
		ConnectHighRowChanged(f:()=>void):void;
		DisconnectHighRowChanged():void;
		HighRowChanged():void;
		LastSetColumn():number;
		ConnectLastSetColumnChanged(f:()=>void):void;
		DisconnectLastSetColumnChanged():void;
		LastSetColumnChanged():void;
		LowRow():number;
		ConnectLowRowChanged(f:()=>void):void;
		DisconnectLowRowChanged():void;
		LowRowChanged():void;
		OpenRow():number;
		ConnectOpenRowChanged(f:()=>void):void;
		DisconnectOpenRowChanged():void;
		OpenRowChanged():void;
		ConnectOrientation(f:()=>number):void;
		DisconnectOrientation():void;
		Orientation():number;
		OrientationDefault():number;
		SetCloseRow(closeRow:number):void;
		SetFirstSetColumn(firstSetColumn:number):void;
		SetHighRow(highRow:number):void;
		SetLastSetColumn(lastSetColumn:number):void;
		SetLowRow(lowRow:number):void;
		SetOpenRow(openRow:number):void;
		SetTimestampRow(timestampRow:number):void;
		TimestampRow():number;
		ConnectTimestampRowChanged(f:()=>void):void;
		DisconnectTimestampRowChanged():void;
		TimestampRowChanged():void;
	}
	function NewQVCandlestickModelMapperFromPointer(ptr:number):QVCandlestickModelMapper;
	function NewQVCandlestickModelMapper(parent:core.QObject_ITF):QVCandlestickModelMapper;
	interface QVPieModelMapper_ITF extends QPieModelMapper_ITF {
		QVPieModelMapper_PTR():QVPieModelMapper;
	}

	class QVPieModelMapper extends QPieModelMapper {
		___pointer: number;
		QVPieModelMapper_PTR():QVPieModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		FirstRow():number;
		ConnectFirstRowChanged(f:()=>void):void;
		DisconnectFirstRowChanged():void;
		FirstRowChanged():void;
		LabelsColumn():number;
		ConnectLabelsColumnChanged(f:()=>void):void;
		DisconnectLabelsColumnChanged():void;
		LabelsColumnChanged():void;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		RowCount():number;
		ConnectRowCountChanged(f:()=>void):void;
		DisconnectRowCountChanged():void;
		RowCountChanged():void;
		Series():QPieSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetFirstRow(firstRow:number):void;
		SetLabelsColumn(labelsColumn:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetRowCount(rowCount:number):void;
		SetSeries(series:QPieSeries_ITF):void;
		SetValuesColumn(valuesColumn:number):void;
		ValuesColumn():number;
		ConnectValuesColumnChanged(f:()=>void):void;
		DisconnectValuesColumnChanged():void;
		ValuesColumnChanged():void;
	}
	function NewQVPieModelMapperFromPointer(ptr:number):QVPieModelMapper;
	function NewQVPieModelMapper(parent:core.QObject_ITF):QVPieModelMapper;
	interface QVXYModelMapper_ITF extends QXYModelMapper_ITF {
		QVXYModelMapper_PTR():QVXYModelMapper;
	}

	class QVXYModelMapper extends QXYModelMapper {
		___pointer: number;
		QVXYModelMapper_PTR():QVXYModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		FirstRow():number;
		ConnectFirstRowChanged(f:()=>void):void;
		DisconnectFirstRowChanged():void;
		FirstRowChanged():void;
		Model():core.QAbstractItemModel;
		ConnectModelReplaced(f:()=>void):void;
		DisconnectModelReplaced():void;
		ModelReplaced():void;
		RowCount():number;
		ConnectRowCountChanged(f:()=>void):void;
		DisconnectRowCountChanged():void;
		RowCountChanged():void;
		Series():QXYSeries;
		ConnectSeriesReplaced(f:()=>void):void;
		DisconnectSeriesReplaced():void;
		SeriesReplaced():void;
		SetFirstRow(firstRow:number):void;
		SetModel(model:core.QAbstractItemModel_ITF):void;
		SetRowCount(rowCount:number):void;
		SetSeries(series:QXYSeries_ITF):void;
		SetXColumn(xColumn:number):void;
		SetYColumn(yColumn:number):void;
		XColumn():number;
		ConnectXColumnChanged(f:()=>void):void;
		DisconnectXColumnChanged():void;
		XColumnChanged():void;
		YColumn():number;
		ConnectYColumnChanged(f:()=>void):void;
		DisconnectYColumnChanged():void;
		YColumnChanged():void;
	}
	function NewQVXYModelMapperFromPointer(ptr:number):QVXYModelMapper;
	function NewQVXYModelMapper(parent:core.QObject_ITF):QVXYModelMapper;
	interface QValueAxis_ITF extends QAbstractAxis_ITF {
		QValueAxis_PTR():QValueAxis;
	}

	class QValueAxis extends QAbstractAxis {
		___pointer: number;
		QValueAxis_PTR():QValueAxis;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectApplyNiceNumbers(f:()=>void):void;
		DisconnectApplyNiceNumbers():void;
		ApplyNiceNumbers():void;
		ApplyNiceNumbersDefault():void;
		LabelFormat():string;
		ConnectLabelFormatChanged(f:(format:string)=>void):void;
		DisconnectLabelFormatChanged():void;
		LabelFormatChanged(format:string):void;
		Max():number;
		ConnectMaxChanged(f:(max:number)=>void):void;
		DisconnectMaxChanged():void;
		MaxChanged(max:number):void;
		Min():number;
		ConnectMinChanged(f:(mi:number)=>void):void;
		DisconnectMinChanged():void;
		MinChanged(mi:number):void;
		MinorTickCount():number;
		ConnectMinorTickCountChanged(f:(minorTickCount:number)=>void):void;
		DisconnectMinorTickCountChanged():void;
		MinorTickCountChanged(minorTickCount:number):void;
		ConnectRangeChanged(f:(mi:number,max:number)=>void):void;
		DisconnectRangeChanged():void;
		RangeChanged(mi:number,max:number):void;
		SetLabelFormat(format:string):void;
		SetMax(max:number):void;
		SetMin(mi:number):void;
		SetMinorTickCount(count:number):void;
		SetRange(mi:number,max:number):void;
		SetTickAnchor(anchor:number):void;
		SetTickCount(count:number):void;
		SetTickInterval(insterval:number):void;
		SetTickType(ty:number):void;
		TickAnchor():number;
		ConnectTickAnchorChanged(f:(anchor:number)=>void):void;
		DisconnectTickAnchorChanged():void;
		TickAnchorChanged(anchor:number):void;
		TickCount():number;
		ConnectTickCountChanged(f:(tickCount:number)=>void):void;
		DisconnectTickCountChanged():void;
		TickCountChanged(tickCount:number):void;
		TickInterval():number;
		ConnectTickIntervalChanged(f:(interval:number)=>void):void;
		DisconnectTickIntervalChanged():void;
		TickIntervalChanged(interval:number):void;
		TickType():number;
		ConnectTickTypeChanged(f:(ty:number)=>void):void;
		DisconnectTickTypeChanged():void;
		TickTypeChanged(ty:number):void;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQValueAxis(f:()=>void):void;
		DisconnectDestroyQValueAxis():void;
		DestroyQValueAxis():void;
		DestroyQValueAxisDefault():void;
	}
	function NewQValueAxisFromPointer(ptr:number):QValueAxis;
	function NewQValueAxis(parent:core.QObject_ITF):QValueAxis;
	const QValueAxis__TicksDynamic: number;
	const QValueAxis__TicksFixed: number;
	interface QXYLegendMarker_ITF extends QLegendMarker_ITF {
		QXYLegendMarker_PTR():QXYLegendMarker;
	}

	class QXYLegendMarker extends QLegendMarker {
		___pointer: number;
		QXYLegendMarker_PTR():QXYLegendMarker;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectSeries(f:()=>QXYSeries):void;
		DisconnectSeries():void;
		Series():QXYSeries;
		SeriesDefault():QXYSeries;
		ConnectType(f:()=>number):void;
		DisconnectType():void;
		Type():number;
		TypeDefault():number;
		ConnectDestroyQXYLegendMarker(f:()=>void):void;
		DisconnectDestroyQXYLegendMarker():void;
		DestroyQXYLegendMarker():void;
		DestroyQXYLegendMarkerDefault():void;
	}
	function NewQXYLegendMarkerFromPointer(ptr:number):QXYLegendMarker;
	interface QXYModelMapper_ITF extends core.QObject_ITF {
		QXYModelMapper_PTR():QXYModelMapper;
	}

	class QXYModelMapper extends core.QObject {
		___pointer: number;
		QXYModelMapper_PTR():QXYModelMapper;
		Pointer():number;
		SetPointer(p:number):void;
		Orientation():number;
		SetOrientation(orientation:number):void;
		SetXSection(xSection:number):void;
		SetYSection(ySection:number):void;
		XSection():number;
		YSection():number;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQXYModelMapperFromPointer(ptr:number):QXYModelMapper;
	function NewQXYModelMapper(parent:core.QObject_ITF):QXYModelMapper;
	interface QXYSeries_ITF extends QAbstractSeries_ITF {
		QXYSeries_PTR():QXYSeries;
	}

	class QXYSeries extends QAbstractSeries {
		___pointer: number;
		QXYSeries_PTR():QXYSeries;
		Pointer():number;
		SetPointer(p:number):void;
		Append(x:number,y:number):void;
		Append2(point:core.QPointF_ITF):void;
		Append3(points:core.QPointF[]):void;
		At(index:number):core.QPointF;
		Brush():gui.QBrush;
		Clear():void;
		ConnectClicked(f:(point:core.QPointF)=>void):void;
		DisconnectClicked():void;
		Clicked(point:core.QPointF_ITF):void;
		ConnectColor(f:()=>gui.QColor):void;
		DisconnectColor():void;
		Color():gui.QColor;
		ColorDefault():gui.QColor;
		ConnectColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectColorChanged():void;
		ColorChanged(color:gui.QColor_ITF):void;
		Count():number;
		ConnectDoubleClicked(f:(point:core.QPointF)=>void):void;
		DisconnectDoubleClicked():void;
		DoubleClicked(point:core.QPointF_ITF):void;
		ConnectHovered(f:(point:core.QPointF,state:boolean)=>void):void;
		DisconnectHovered():void;
		Hovered(point:core.QPointF_ITF,state:boolean):void;
		Insert(index:number,point:core.QPointF_ITF):void;
		Pen():gui.QPen;
		ConnectPenChanged(f:(pen:gui.QPen)=>void):void;
		DisconnectPenChanged():void;
		PenChanged(pen:gui.QPen_ITF):void;
		ConnectPointAdded(f:(index:number)=>void):void;
		DisconnectPointAdded():void;
		PointAdded(index:number):void;
		PointLabelsClipping():boolean;
		ConnectPointLabelsClippingChanged(f:(clipping:boolean)=>void):void;
		DisconnectPointLabelsClippingChanged():void;
		PointLabelsClippingChanged(clipping:boolean):void;
		PointLabelsColor():gui.QColor;
		ConnectPointLabelsColorChanged(f:(color:gui.QColor)=>void):void;
		DisconnectPointLabelsColorChanged():void;
		PointLabelsColorChanged(color:gui.QColor_ITF):void;
		PointLabelsFont():gui.QFont;
		ConnectPointLabelsFontChanged(f:(font:gui.QFont)=>void):void;
		DisconnectPointLabelsFontChanged():void;
		PointLabelsFontChanged(font:gui.QFont_ITF):void;
		PointLabelsFormat():string;
		ConnectPointLabelsFormatChanged(f:(format:string)=>void):void;
		DisconnectPointLabelsFormatChanged():void;
		PointLabelsFormatChanged(format:string):void;
		ConnectPointLabelsVisibilityChanged(f:(visible:boolean)=>void):void;
		DisconnectPointLabelsVisibilityChanged():void;
		PointLabelsVisibilityChanged(visible:boolean):void;
		PointLabelsVisible():boolean;
		ConnectPointRemoved(f:(index:number)=>void):void;
		DisconnectPointRemoved():void;
		PointRemoved(index:number):void;
		ConnectPointReplaced(f:(index:number)=>void):void;
		DisconnectPointReplaced():void;
		PointReplaced(index:number):void;
		Points():core.QPointF[];
		ConnectPointsRemoved(f:(index:number,count:number)=>void):void;
		DisconnectPointsRemoved():void;
		PointsRemoved(index:number,count:number):void;
		ConnectPointsReplaced(f:()=>void):void;
		DisconnectPointsReplaced():void;
		PointsReplaced():void;
		PointsVector():core.QPointF[];
		PointsVisible():boolean;
		ConnectPressed(f:(point:core.QPointF)=>void):void;
		DisconnectPressed():void;
		Pressed(point:core.QPointF_ITF):void;
		ConnectReleased(f:(point:core.QPointF)=>void):void;
		DisconnectReleased():void;
		Released(point:core.QPointF_ITF):void;
		Remove(x:number,y:number):void;
		Remove2(point:core.QPointF_ITF):void;
		Remove3(index:number):void;
		RemovePoints(index:number,count:number):void;
		Replace(oldX:number,oldY:number,newX:number,newY:number):void;
		Replace2(oldPoint:core.QPointF_ITF,newPoint:core.QPointF_ITF):void;
		Replace3(index:number,newX:number,newY:number):void;
		Replace4(index:number,newPoint:core.QPointF_ITF):void;
		Replace5(points:core.QPointF[]):void;
		Replace6(points:core.QPointF[]):void;
		ConnectSetBrush(f:(brush:gui.QBrush)=>void):void;
		DisconnectSetBrush():void;
		SetBrush(brush:gui.QBrush_ITF):void;
		SetBrushDefault(brush:gui.QBrush_ITF):void;
		ConnectSetColor(f:(color:gui.QColor)=>void):void;
		DisconnectSetColor():void;
		SetColor(color:gui.QColor_ITF):void;
		SetColorDefault(color:gui.QColor_ITF):void;
		ConnectSetPen(f:(pen:gui.QPen)=>void):void;
		DisconnectSetPen():void;
		SetPen(pen:gui.QPen_ITF):void;
		SetPenDefault(pen:gui.QPen_ITF):void;
		SetPointLabelsClipping(enabled:boolean):void;
		SetPointLabelsColor(color:gui.QColor_ITF):void;
		SetPointLabelsFont(font:gui.QFont_ITF):void;
		SetPointLabelsFormat(format:string):void;
		SetPointLabelsVisible(visible:boolean):void;
		SetPointsVisible(visible:boolean):void;
		ConnectDestroyQXYSeries(f:()=>void):void;
		DisconnectDestroyQXYSeries():void;
		DestroyQXYSeries():void;
		DestroyQXYSeriesDefault():void;
		Type():number;
		TypeDefault():number;
	}
	function NewQXYSeriesFromPointer(ptr:number):QXYSeries;
}
/// <reference path="core.d.ts" />
/// <reference path="gui.d.ts" />
/// <reference path="widgets.d.ts" />
declare namespace printsupport {
	interface QAbstractPrintDialog_ITF extends widgets.QDialog_ITF {
		QAbstractPrintDialog_PTR():QAbstractPrintDialog;
	}

	class QAbstractPrintDialog extends widgets.QDialog {
		___pointer: number;
		QAbstractPrintDialog_PTR():QAbstractPrintDialog;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectExec(f:()=>number):void;
		DisconnectExec():void;
		Exec():number;
		FromPage():number;
		MaxPage():number;
		MinPage():number;
		PrintRange():number;
		Printer():QPrinter;
		SetFromTo(from:number,to:number):void;
		SetMinMax(mi:number,max:number):void;
		SetOptionTabs(tabs:widgets.QWidget[]):void;
		SetPrintRange(ran:number):void;
		ToPage():number;
		AcceptDefault():void;
		CloseEventDefault(e:gui.QCloseEvent_ITF):void;
		ContextMenuEventDefault(e:gui.QContextMenuEvent_ITF):void;
		DoneDefault(r:number):void;
		EventFilterDefault(o:core.QObject_ITF,e:core.QEvent_ITF):boolean;
		KeyPressEventDefault(e:gui.QKeyEvent_ITF):void;
		MinimumSizeHintDefault():core.QSize;
		OpenDefault():void;
		RejectDefault():void;
		ResizeEventDefault(vqr:gui.QResizeEvent_ITF):void;
		SetVisibleDefault(visible:boolean):void;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		SizeHintDefault():core.QSize;
		ActionEventDefault(event:gui.QActionEvent_ITF):void;
		ChangeEventDefault(event:core.QEvent_ITF):void;
		CloseDefault():boolean;
		DragEnterEventDefault(event:gui.QDragEnterEvent_ITF):void;
		DragLeaveEventDefault(event:gui.QDragLeaveEvent_ITF):void;
		DragMoveEventDefault(event:gui.QDragMoveEvent_ITF):void;
		DropEventDefault(event:gui.QDropEvent_ITF):void;
		EnterEventDefault(event:core.QEvent_ITF):void;
		EventDefault(event:core.QEvent_ITF):boolean;
		FocusInEventDefault(event:gui.QFocusEvent_ITF):void;
		FocusNextPrevChildDefault(next:boolean):boolean;
		FocusOutEventDefault(event:gui.QFocusEvent_ITF):void;
		HasHeightForWidthDefault():boolean;
		HeightForWidthDefault(w:number):number;
		HideDefault():void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		InitPainterDefault(painter:gui.QPainter_ITF):void;
		InputMethodEventDefault(event:gui.QInputMethodEvent_ITF):void;
		InputMethodQueryDefault(query:number):core.QVariant;
		KeyReleaseEventDefault(event:gui.QKeyEvent_ITF):void;
		LeaveEventDefault(event:core.QEvent_ITF):void;
		LowerDefault():void;
		MetricDefault(m:number):number;
		MouseDoubleClickEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseMoveEventDefault(event:gui.QMouseEvent_ITF):void;
		MousePressEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseReleaseEventDefault(event:gui.QMouseEvent_ITF):void;
		MoveEventDefault(event:gui.QMoveEvent_ITF):void;
		NativeEventDefault(eventType:core.QByteArray_ITF,message:number,result:number):boolean;
		PaintEngineDefault():gui.QPaintEngine;
		PaintEventDefault(event:gui.QPaintEvent_ITF):void;
		RaiseDefault():void;
		RepaintDefault():void;
		SetDisabledDefault(disable:boolean):void;
		SetEnabledDefault(vbo:boolean):void;
		SetFocus2Default():void;
		SetHiddenDefault(hidden:boolean):void;
		SetStyleSheetDefault(styleSheet:string):void;
		SetWindowModifiedDefault(vbo:boolean):void;
		SetWindowTitleDefault(vqs:string):void;
		ShowDefault():void;
		ShowFullScreenDefault():void;
		ShowMaximizedDefault():void;
		ShowMinimizedDefault():void;
		ShowNormalDefault():void;
		TabletEventDefault(event:gui.QTabletEvent_ITF):void;
		UpdateDefault():void;
		UpdateMicroFocusDefault():void;
		WheelEventDefault(event:gui.QWheelEvent_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQAbstractPrintDialogFromPointer(ptr:number):QAbstractPrintDialog;
	function NewQAbstractPrintDialog(printer:QPrinter_ITF,parent:widgets.QWidget_ITF):QAbstractPrintDialog;
	const QAbstractPrintDialog__None: number;
	const QAbstractPrintDialog__PrintToFile: number;
	const QAbstractPrintDialog__PrintSelection: number;
	const QAbstractPrintDialog__PrintPageRange: number;
	const QAbstractPrintDialog__PrintShowPageSize: number;
	const QAbstractPrintDialog__PrintCollateCopies: number;
	const QAbstractPrintDialog__DontUseSheet: number;
	const QAbstractPrintDialog__PrintCurrentPage: number;
	const QAbstractPrintDialog__AllPages: number;
	const QAbstractPrintDialog__Selection: number;
	const QAbstractPrintDialog__PageRange: number;
	const QAbstractPrintDialog__CurrentPage: number;
	interface QPageSetupDialog_ITF extends widgets.QDialog_ITF {
		QPageSetupDialog_PTR():QPageSetupDialog;
	}

	class QPageSetupDialog extends widgets.QDialog {
		___pointer: number;
		QPageSetupDialog_PTR():QPageSetupDialog;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectDone(f:(result:number)=>void):void;
		DisconnectDone():void;
		Done(result:number):void;
		DoneDefault(result:number):void;
		ConnectExec(f:()=>number):void;
		DisconnectExec():void;
		Exec():number;
		ExecDefault():number;
		Printer():QPrinter;
		ConnectDestroyQPageSetupDialog(f:()=>void):void;
		DisconnectDestroyQPageSetupDialog():void;
		DestroyQPageSetupDialog():void;
		DestroyQPageSetupDialogDefault():void;
		AcceptDefault():void;
		CloseEventDefault(e:gui.QCloseEvent_ITF):void;
		ContextMenuEventDefault(e:gui.QContextMenuEvent_ITF):void;
		EventFilterDefault(o:core.QObject_ITF,e:core.QEvent_ITF):boolean;
		KeyPressEventDefault(e:gui.QKeyEvent_ITF):void;
		MinimumSizeHintDefault():core.QSize;
		RejectDefault():void;
		ResizeEventDefault(vqr:gui.QResizeEvent_ITF):void;
		SetVisibleDefault(visible:boolean):void;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		SizeHintDefault():core.QSize;
		ActionEventDefault(event:gui.QActionEvent_ITF):void;
		ChangeEventDefault(event:core.QEvent_ITF):void;
		CloseDefault():boolean;
		DragEnterEventDefault(event:gui.QDragEnterEvent_ITF):void;
		DragLeaveEventDefault(event:gui.QDragLeaveEvent_ITF):void;
		DragMoveEventDefault(event:gui.QDragMoveEvent_ITF):void;
		DropEventDefault(event:gui.QDropEvent_ITF):void;
		EnterEventDefault(event:core.QEvent_ITF):void;
		EventDefault(event:core.QEvent_ITF):boolean;
		FocusInEventDefault(event:gui.QFocusEvent_ITF):void;
		FocusNextPrevChildDefault(next:boolean):boolean;
		FocusOutEventDefault(event:gui.QFocusEvent_ITF):void;
		HasHeightForWidthDefault():boolean;
		HeightForWidthDefault(w:number):number;
		HideDefault():void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		InitPainterDefault(painter:gui.QPainter_ITF):void;
		InputMethodEventDefault(event:gui.QInputMethodEvent_ITF):void;
		InputMethodQueryDefault(query:number):core.QVariant;
		KeyReleaseEventDefault(event:gui.QKeyEvent_ITF):void;
		LeaveEventDefault(event:core.QEvent_ITF):void;
		LowerDefault():void;
		MetricDefault(m:number):number;
		MouseDoubleClickEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseMoveEventDefault(event:gui.QMouseEvent_ITF):void;
		MousePressEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseReleaseEventDefault(event:gui.QMouseEvent_ITF):void;
		MoveEventDefault(event:gui.QMoveEvent_ITF):void;
		NativeEventDefault(eventType:core.QByteArray_ITF,message:number,result:number):boolean;
		PaintEngineDefault():gui.QPaintEngine;
		PaintEventDefault(event:gui.QPaintEvent_ITF):void;
		RaiseDefault():void;
		RepaintDefault():void;
		SetDisabledDefault(disable:boolean):void;
		SetEnabledDefault(vbo:boolean):void;
		SetFocus2Default():void;
		SetHiddenDefault(hidden:boolean):void;
		SetStyleSheetDefault(styleSheet:string):void;
		SetWindowModifiedDefault(vbo:boolean):void;
		SetWindowTitleDefault(vqs:string):void;
		ShowDefault():void;
		ShowFullScreenDefault():void;
		ShowMaximizedDefault():void;
		ShowMinimizedDefault():void;
		ShowNormalDefault():void;
		TabletEventDefault(event:gui.QTabletEvent_ITF):void;
		UpdateDefault():void;
		UpdateMicroFocusDefault():void;
		WheelEventDefault(event:gui.QWheelEvent_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQPageSetupDialogFromPointer(ptr:number):QPageSetupDialog;
	function NewQPageSetupDialog(printer:QPrinter_ITF,parent:widgets.QWidget_ITF):QPageSetupDialog;
	function NewQPageSetupDialog2(parent:widgets.QWidget_ITF):QPageSetupDialog;
	interface QPlatformPrintDevice_ITF {
		QPlatformPrintDevice_PTR():QPlatformPrintDevice;
	}

	class QPlatformPrintDevice {
		___pointer: number;
		QPlatformPrintDevice_PTR():QPlatformPrintDevice;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQPlatformPrintDevice():void;
	}
	interface QPlatformPrinterSupportPlugin_ITF extends core.QObject_ITF {
		QPlatformPrinterSupportPlugin_PTR():QPlatformPrinterSupportPlugin;
	}

	class QPlatformPrinterSupportPlugin extends core.QObject {
		___pointer: number;
		QPlatformPrinterSupportPlugin_PTR():QPlatformPrinterSupportPlugin;
		Pointer():number;
		SetPointer(p:number):void;
	}
	interface QPrintDialog_ITF extends QAbstractPrintDialog_ITF {
		QPrintDialog_PTR():QPrintDialog;
	}

	class QPrintDialog extends QAbstractPrintDialog {
		___pointer: number;
		QPrintDialog_PTR():QPrintDialog;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectAccepted(f:(printer:QPrinter)=>void):void;
		DisconnectAccepted():void;
		Accepted(printer:QPrinter_ITF):void;
		ConnectDone(f:(result:number)=>void):void;
		DisconnectDone():void;
		Done(result:number):void;
		DoneDefault(result:number):void;
		ConnectExec(f:()=>number):void;
		DisconnectExec():void;
		Exec():number;
		ExecDefault():number;
		Open(receiver:core.QObject_ITF,member:string):void;
		Options():number;
		SetOption(option:number,on:boolean):void;
		SetOptions(options:number):void;
		TestOption(option:number):boolean;
		ConnectDestroyQPrintDialog(f:()=>void):void;
		DisconnectDestroyQPrintDialog():void;
		DestroyQPrintDialog():void;
		DestroyQPrintDialogDefault():void;
	}
	function NewQPrintDialogFromPointer(ptr:number):QPrintDialog;
	function NewQPrintDialog(printer:QPrinter_ITF,parent:widgets.QWidget_ITF):QPrintDialog;
	interface QPrintEngine_ITF {
		QPrintEngine_PTR():QPrintEngine;
	}

	class QPrintEngine {
		___pointer: number;
		QPrintEngine_PTR():QPrintEngine;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectAbort(f:()=>boolean):void;
		DisconnectAbort():void;
		Abort():boolean;
		ConnectMetric(f:(id:number)=>number):void;
		DisconnectMetric():void;
		Metric(id:number):number;
		ConnectNewPage(f:()=>boolean):void;
		DisconnectNewPage():void;
		NewPage():boolean;
		ConnectPrinterState(f:()=>number):void;
		DisconnectPrinterState():void;
		PrinterState():number;
		ConnectProperty(f:(key:number)=>core.QVariant):void;
		DisconnectProperty():void;
		Property(key:number):core.QVariant;
		ConnectSetProperty(f:(key:number,value:core.QVariant)=>void):void;
		DisconnectSetProperty():void;
		SetProperty(key:number,value:core.QVariant_ITF):void;
		ConnectDestroyQPrintEngine(f:()=>void):void;
		DisconnectDestroyQPrintEngine():void;
		DestroyQPrintEngine():void;
		DestroyQPrintEngineDefault():void;
	}
	function NewQPrintEngineFromPointer(ptr:number):QPrintEngine;
	const QPrintEngine__PPK_CollateCopies: number;
	const QPrintEngine__PPK_ColorMode: number;
	const QPrintEngine__PPK_Creator: number;
	const QPrintEngine__PPK_DocumentName: number;
	const QPrintEngine__PPK_FullPage: number;
	const QPrintEngine__PPK_NumberOfCopies: number;
	const QPrintEngine__PPK_Orientation: number;
	const QPrintEngine__PPK_OutputFileName: number;
	const QPrintEngine__PPK_PageOrder: number;
	const QPrintEngine__PPK_PageRect: number;
	const QPrintEngine__PPK_PageSize: number;
	const QPrintEngine__PPK_PaperRect: number;
	const QPrintEngine__PPK_PaperSource: number;
	const QPrintEngine__PPK_PrinterName: number;
	const QPrintEngine__PPK_PrinterProgram: number;
	const QPrintEngine__PPK_Resolution: number;
	const QPrintEngine__PPK_SelectionOption: number;
	const QPrintEngine__PPK_SupportedResolutions: number;
	const QPrintEngine__PPK_WindowsPageSize: number;
	const QPrintEngine__PPK_FontEmbedding: number;
	const QPrintEngine__PPK_Duplex: number;
	const QPrintEngine__PPK_PaperSources: number;
	const QPrintEngine__PPK_CustomPaperSize: number;
	const QPrintEngine__PPK_PageMargins: number;
	const QPrintEngine__PPK_CopyCount: number;
	const QPrintEngine__PPK_SupportsMultipleCopies: number;
	const QPrintEngine__PPK_PaperName: number;
	const QPrintEngine__PPK_QPageSize: number;
	const QPrintEngine__PPK_QPageMargins: number;
	const QPrintEngine__PPK_QPageLayout: number;
	const QPrintEngine__PPK_PaperSize: number;
	const QPrintEngine__PPK_CustomBase: number;
	interface QPrintPreviewDialog_ITF extends widgets.QDialog_ITF {
		QPrintPreviewDialog_PTR():QPrintPreviewDialog;
	}

	class QPrintPreviewDialog extends widgets.QDialog {
		___pointer: number;
		QPrintPreviewDialog_PTR():QPrintPreviewDialog;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectDone(f:(result:number)=>void):void;
		DisconnectDone():void;
		Done(result:number):void;
		DoneDefault(result:number):void;
		ConnectPaintRequested(f:(printer:QPrinter)=>void):void;
		DisconnectPaintRequested():void;
		PaintRequested(printer:QPrinter_ITF):void;
		Printer():QPrinter;
		SetVisibleDefault(visible:boolean):void;
		ConnectDestroyQPrintPreviewDialog(f:()=>void):void;
		DisconnectDestroyQPrintPreviewDialog():void;
		DestroyQPrintPreviewDialog():void;
		DestroyQPrintPreviewDialogDefault():void;
		AcceptDefault():void;
		CloseEventDefault(e:gui.QCloseEvent_ITF):void;
		ContextMenuEventDefault(e:gui.QContextMenuEvent_ITF):void;
		EventFilterDefault(o:core.QObject_ITF,e:core.QEvent_ITF):boolean;
		ExecDefault():number;
		KeyPressEventDefault(e:gui.QKeyEvent_ITF):void;
		MinimumSizeHintDefault():core.QSize;
		RejectDefault():void;
		ResizeEventDefault(vqr:gui.QResizeEvent_ITF):void;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		SizeHintDefault():core.QSize;
		ActionEventDefault(event:gui.QActionEvent_ITF):void;
		ChangeEventDefault(event:core.QEvent_ITF):void;
		CloseDefault():boolean;
		DragEnterEventDefault(event:gui.QDragEnterEvent_ITF):void;
		DragLeaveEventDefault(event:gui.QDragLeaveEvent_ITF):void;
		DragMoveEventDefault(event:gui.QDragMoveEvent_ITF):void;
		DropEventDefault(event:gui.QDropEvent_ITF):void;
		EnterEventDefault(event:core.QEvent_ITF):void;
		EventDefault(event:core.QEvent_ITF):boolean;
		FocusInEventDefault(event:gui.QFocusEvent_ITF):void;
		FocusNextPrevChildDefault(next:boolean):boolean;
		FocusOutEventDefault(event:gui.QFocusEvent_ITF):void;
		HasHeightForWidthDefault():boolean;
		HeightForWidthDefault(w:number):number;
		HideDefault():void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		InitPainterDefault(painter:gui.QPainter_ITF):void;
		InputMethodEventDefault(event:gui.QInputMethodEvent_ITF):void;
		InputMethodQueryDefault(query:number):core.QVariant;
		KeyReleaseEventDefault(event:gui.QKeyEvent_ITF):void;
		LeaveEventDefault(event:core.QEvent_ITF):void;
		LowerDefault():void;
		MetricDefault(m:number):number;
		MouseDoubleClickEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseMoveEventDefault(event:gui.QMouseEvent_ITF):void;
		MousePressEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseReleaseEventDefault(event:gui.QMouseEvent_ITF):void;
		MoveEventDefault(event:gui.QMoveEvent_ITF):void;
		NativeEventDefault(eventType:core.QByteArray_ITF,message:number,result:number):boolean;
		PaintEngineDefault():gui.QPaintEngine;
		PaintEventDefault(event:gui.QPaintEvent_ITF):void;
		RaiseDefault():void;
		RepaintDefault():void;
		SetDisabledDefault(disable:boolean):void;
		SetEnabledDefault(vbo:boolean):void;
		SetFocus2Default():void;
		SetHiddenDefault(hidden:boolean):void;
		SetStyleSheetDefault(styleSheet:string):void;
		SetWindowModifiedDefault(vbo:boolean):void;
		SetWindowTitleDefault(vqs:string):void;
		ShowDefault():void;
		ShowFullScreenDefault():void;
		ShowMaximizedDefault():void;
		ShowMinimizedDefault():void;
		ShowNormalDefault():void;
		TabletEventDefault(event:gui.QTabletEvent_ITF):void;
		UpdateDefault():void;
		UpdateMicroFocusDefault():void;
		WheelEventDefault(event:gui.QWheelEvent_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQPrintPreviewDialogFromPointer(ptr:number):QPrintPreviewDialog;
	function NewQPrintPreviewDialog(printer:QPrinter_ITF,parent:widgets.QWidget_ITF,flags:number):QPrintPreviewDialog;
	function NewQPrintPreviewDialog2(parent:widgets.QWidget_ITF,flags:number):QPrintPreviewDialog;
	interface QPrintPreviewWidget_ITF extends widgets.QWidget_ITF {
		QPrintPreviewWidget_PTR():QPrintPreviewWidget;
	}

	class QPrintPreviewWidget extends widgets.QWidget {
		___pointer: number;
		QPrintPreviewWidget_PTR():QPrintPreviewWidget;
		Pointer():number;
		SetPointer(p:number):void;
		CurrentPage():number;
		ConnectFitInView(f:()=>void):void;
		DisconnectFitInView():void;
		FitInView():void;
		FitInViewDefault():void;
		ConnectFitToWidth(f:()=>void):void;
		DisconnectFitToWidth():void;
		FitToWidth():void;
		FitToWidthDefault():void;
		Orientation():number;
		PageCount():number;
		ConnectPaintRequested(f:(printer:QPrinter)=>void):void;
		DisconnectPaintRequested():void;
		PaintRequested(printer:QPrinter_ITF):void;
		ConnectPreviewChanged(f:()=>void):void;
		DisconnectPreviewChanged():void;
		PreviewChanged():void;
		ConnectPrint(f:()=>void):void;
		DisconnectPrint():void;
		Print():void;
		PrintDefault():void;
		ConnectSetAllPagesViewMode(f:()=>void):void;
		DisconnectSetAllPagesViewMode():void;
		SetAllPagesViewMode():void;
		SetAllPagesViewModeDefault():void;
		ConnectSetCurrentPage(f:(page:number)=>void):void;
		DisconnectSetCurrentPage():void;
		SetCurrentPage(page:number):void;
		SetCurrentPageDefault(page:number):void;
		ConnectSetFacingPagesViewMode(f:()=>void):void;
		DisconnectSetFacingPagesViewMode():void;
		SetFacingPagesViewMode():void;
		SetFacingPagesViewModeDefault():void;
		ConnectSetLandscapeOrientation(f:()=>void):void;
		DisconnectSetLandscapeOrientation():void;
		SetLandscapeOrientation():void;
		SetLandscapeOrientationDefault():void;
		ConnectSetOrientation(f:(orientation:number)=>void):void;
		DisconnectSetOrientation():void;
		SetOrientation(orientation:number):void;
		SetOrientationDefault(orientation:number):void;
		ConnectSetPortraitOrientation(f:()=>void):void;
		DisconnectSetPortraitOrientation():void;
		SetPortraitOrientation():void;
		SetPortraitOrientationDefault():void;
		ConnectSetSinglePageViewMode(f:()=>void):void;
		DisconnectSetSinglePageViewMode():void;
		SetSinglePageViewMode():void;
		SetSinglePageViewModeDefault():void;
		ConnectSetViewMode(f:(mode:number)=>void):void;
		DisconnectSetViewMode():void;
		SetViewMode(mode:number):void;
		SetViewModeDefault(mode:number):void;
		ConnectSetVisible(f:(visible:boolean)=>void):void;
		DisconnectSetVisible():void;
		SetVisible(visible:boolean):void;
		SetVisibleDefault(visible:boolean):void;
		ConnectSetZoomFactor(f:(factor:number)=>void):void;
		DisconnectSetZoomFactor():void;
		SetZoomFactor(factor:number):void;
		SetZoomFactorDefault(factor:number):void;
		ConnectSetZoomMode(f:(zoomMode:number)=>void):void;
		DisconnectSetZoomMode():void;
		SetZoomMode(zoomMode:number):void;
		SetZoomModeDefault(zoomMode:number):void;
		ConnectUpdatePreview(f:()=>void):void;
		DisconnectUpdatePreview():void;
		UpdatePreview():void;
		UpdatePreviewDefault():void;
		ViewMode():number;
		ZoomFactor():number;
		ConnectZoomIn(f:(factor:number)=>void):void;
		DisconnectZoomIn():void;
		ZoomIn(factor:number):void;
		ZoomInDefault(factor:number):void;
		ZoomMode():number;
		ConnectZoomOut(f:(factor:number)=>void):void;
		DisconnectZoomOut():void;
		ZoomOut(factor:number):void;
		ZoomOutDefault(factor:number):void;
		ConnectDestroyQPrintPreviewWidget(f:()=>void):void;
		DisconnectDestroyQPrintPreviewWidget():void;
		DestroyQPrintPreviewWidget():void;
		DestroyQPrintPreviewWidgetDefault():void;
		ActionEventDefault(event:gui.QActionEvent_ITF):void;
		ChangeEventDefault(event:core.QEvent_ITF):void;
		CloseDefault():boolean;
		CloseEventDefault(event:gui.QCloseEvent_ITF):void;
		ContextMenuEventDefault(event:gui.QContextMenuEvent_ITF):void;
		DragEnterEventDefault(event:gui.QDragEnterEvent_ITF):void;
		DragLeaveEventDefault(event:gui.QDragLeaveEvent_ITF):void;
		DragMoveEventDefault(event:gui.QDragMoveEvent_ITF):void;
		DropEventDefault(event:gui.QDropEvent_ITF):void;
		EnterEventDefault(event:core.QEvent_ITF):void;
		EventDefault(event:core.QEvent_ITF):boolean;
		FocusInEventDefault(event:gui.QFocusEvent_ITF):void;
		FocusNextPrevChildDefault(next:boolean):boolean;
		FocusOutEventDefault(event:gui.QFocusEvent_ITF):void;
		HasHeightForWidthDefault():boolean;
		HeightForWidthDefault(w:number):number;
		HideDefault():void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		InitPainterDefault(painter:gui.QPainter_ITF):void;
		InputMethodEventDefault(event:gui.QInputMethodEvent_ITF):void;
		InputMethodQueryDefault(query:number):core.QVariant;
		KeyPressEventDefault(event:gui.QKeyEvent_ITF):void;
		KeyReleaseEventDefault(event:gui.QKeyEvent_ITF):void;
		LeaveEventDefault(event:core.QEvent_ITF):void;
		LowerDefault():void;
		MetricDefault(m:number):number;
		MinimumSizeHintDefault():core.QSize;
		MouseDoubleClickEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseMoveEventDefault(event:gui.QMouseEvent_ITF):void;
		MousePressEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseReleaseEventDefault(event:gui.QMouseEvent_ITF):void;
		MoveEventDefault(event:gui.QMoveEvent_ITF):void;
		NativeEventDefault(eventType:core.QByteArray_ITF,message:number,result:number):boolean;
		PaintEngineDefault():gui.QPaintEngine;
		PaintEventDefault(event:gui.QPaintEvent_ITF):void;
		RaiseDefault():void;
		RepaintDefault():void;
		ResizeEventDefault(event:gui.QResizeEvent_ITF):void;
		SetDisabledDefault(disable:boolean):void;
		SetEnabledDefault(vbo:boolean):void;
		SetFocus2Default():void;
		SetHiddenDefault(hidden:boolean):void;
		SetStyleSheetDefault(styleSheet:string):void;
		SetWindowModifiedDefault(vbo:boolean):void;
		SetWindowTitleDefault(vqs:string):void;
		ShowDefault():void;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		ShowFullScreenDefault():void;
		ShowMaximizedDefault():void;
		ShowMinimizedDefault():void;
		ShowNormalDefault():void;
		SizeHintDefault():core.QSize;
		TabletEventDefault(event:gui.QTabletEvent_ITF):void;
		UpdateDefault():void;
		UpdateMicroFocusDefault():void;
		WheelEventDefault(event:gui.QWheelEvent_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQPrintPreviewWidgetFromPointer(ptr:number):QPrintPreviewWidget;
	function NewQPrintPreviewWidget(printer:QPrinter_ITF,parent:widgets.QWidget_ITF,flags:number):QPrintPreviewWidget;
	function NewQPrintPreviewWidget2(parent:widgets.QWidget_ITF,flags:number):QPrintPreviewWidget;
	const QPrintPreviewWidget__SinglePageView: number;
	const QPrintPreviewWidget__FacingPagesView: number;
	const QPrintPreviewWidget__AllPagesView: number;
	const QPrintPreviewWidget__CustomZoom: number;
	const QPrintPreviewWidget__FitToWidth: number;
	const QPrintPreviewWidget__FitInView: number;
	interface QPrinter_ITF extends gui.QPagedPaintDevice_ITF {
		QPrinter_PTR():QPrinter;
	}

	class QPrinter extends gui.QPagedPaintDevice {
		___pointer: number;
		QPrinter_PTR():QPrinter;
		Pointer():number;
		SetPointer(p:number):void;
		Abort():boolean;
		CollateCopies():boolean;
		ColorMode():number;
		CopyCount():number;
		Creator():string;
		DocName():string;
		Duplex():number;
		FontEmbeddingEnabled():boolean;
		FromPage():number;
		FullPage():boolean;
		IsValid():boolean;
		ConnectNewPage(f:()=>boolean):void;
		DisconnectNewPage():void;
		NewPage():boolean;
		NewPageDefault():boolean;
		OutputFileName():string;
		OutputFormat():number;
		PageOrder():number;
		PageRect2(unit:number):core.QRectF;
		ConnectPaintEngine(f:()=>gui.QPaintEngine):void;
		DisconnectPaintEngine():void;
		PaintEngine():gui.QPaintEngine;
		PaintEngineDefault():gui.QPaintEngine;
		PaperRect2(unit:number):core.QRectF;
		PaperSource():number;
		PdfVersion():number;
		PrintEngine():QPrintEngine;
		PrintProgram():string;
		PrintRange():number;
		PrinterName():string;
		PrinterSelectionOption():string;
		PrinterState():number;
		Resolution():number;
		SetCollateCopies(collate:boolean):void;
		SetColorMode(newColorMode:number):void;
		SetCopyCount(count:number):void;
		SetCreator(creator:string):void;
		SetDocName(name:string):void;
		SetDuplex(duplex:number):void;
		SetEngines(printEngine:QPrintEngine_ITF,paintEngine:gui.QPaintEngine_ITF):void;
		SetFontEmbeddingEnabled(enable:boolean):void;
		SetFromTo(from:number,to:number):void;
		SetFullPage(fp:boolean):void;
		SetOutputFileName(fileName:string):void;
		SetOutputFormat(format:number):void;
		SetPageOrder(pageOrder:number):void;
		SetPaperSource(source:number):void;
		SetPdfVersion(version:number):void;
		SetPrintProgram(printProg:string):void;
		SetPrintRange(ran:number):void;
		SetPrinterName(name:string):void;
		SetPrinterSelectionOption(option:string):void;
		SetResolution(dpi:number):void;
		SupportedResolutions():number[];
		SupportsMultipleCopies():boolean;
		ToPage():number;
		ConnectDestroyQPrinter(f:()=>void):void;
		DisconnectDestroyQPrinter():void;
		DestroyQPrinter():void;
		DestroyQPrinterDefault():void;
		SetPageSize2Default(size:number):void;
		SetPageSizeMMDefault(size:core.QSizeF_ITF):void;
		MetricDefault(metric:number):number;
	}
	function NewQPrinterFromPointer(ptr:number):QPrinter;
	function NewQPrinter(mode:number):QPrinter;
	function NewQPrinter2(printer:QPrinterInfo_ITF,mode:number):QPrinter;
	const QPrinter__ScreenResolution: number;
	const QPrinter__PrinterResolution: number;
	const QPrinter__HighResolution: number;
	const QPrinter__Portrait: number;
	const QPrinter__Landscape: number;
	const QPrinter__FirstPageFirst: number;
	const QPrinter__LastPageFirst: number;
	const QPrinter__GrayScale: number;
	const QPrinter__Color: number;
	const QPrinter__OnlyOne: number;
	const QPrinter__Lower: number;
	const QPrinter__Middle: number;
	const QPrinter__Manual: number;
	const QPrinter__Envelope: number;
	const QPrinter__EnvelopeManual: number;
	const QPrinter__Auto: number;
	const QPrinter__Tractor: number;
	const QPrinter__SmallFormat: number;
	const QPrinter__LargeFormat: number;
	const QPrinter__LargeCapacity: number;
	const QPrinter__Cassette: number;
	const QPrinter__FormSource: number;
	const QPrinter__MaxPageSource: number;
	const QPrinter__CustomSource: number;
	const QPrinter__LastPaperSource: number;
	const QPrinter__Upper: number;
	const QPrinter__Idle: number;
	const QPrinter__Active: number;
	const QPrinter__Aborted: number;
	const QPrinter__Error: number;
	const QPrinter__NativeFormat: number;
	const QPrinter__PdfFormat: number;
	const QPrinter__AllPages: number;
	const QPrinter__Selection: number;
	const QPrinter__PageRange: number;
	const QPrinter__CurrentPage: number;
	const QPrinter__Millimeter: number;
	const QPrinter__Point: number;
	const QPrinter__Inch: number;
	const QPrinter__Pica: number;
	const QPrinter__Didot: number;
	const QPrinter__Cicero: number;
	const QPrinter__DevicePixel: number;
	const QPrinter__DuplexNone: number;
	const QPrinter__DuplexAuto: number;
	const QPrinter__DuplexLongSide: number;
	const QPrinter__DuplexShortSide: number;
	interface QPrinterInfo_ITF {
		QPrinterInfo_PTR():QPrinterInfo;
	}

	class QPrinterInfo {
		___pointer: number;
		QPrinterInfo_PTR():QPrinterInfo;
		Pointer():number;
		SetPointer(p:number):void;
		AvailablePrinterNames():string[];
		AvailablePrinters():QPrinterInfo[];
		DefaultColorMode():number;
		DefaultDuplexMode():number;
		DefaultPageSize():gui.QPageSize;
		DefaultPrinter():QPrinterInfo;
		DefaultPrinterName():string;
		Description():string;
		IsDefault():boolean;
		IsNull():boolean;
		IsRemote():boolean;
		Location():string;
		MakeAndModel():string;
		MaximumPhysicalPageSize():gui.QPageSize;
		MinimumPhysicalPageSize():gui.QPageSize;
		PrinterInfo(printerName:string):QPrinterInfo;
		PrinterName():string;
		State():number;
		SupportedColorModes():number;
		SupportedDuplexModes():number;
		SupportedPageSizes():gui.QPageSize[];
		SupportedResolutions():number[];
		SupportsCustomPageSizes():boolean;
		DestroyQPrinterInfo():void;
	}
	function NewQPrinterInfoFromPointer(ptr:number):QPrinterInfo;
	function NewQPrinterInfo():QPrinterInfo;
	function NewQPrinterInfo2(other:QPrinterInfo_ITF):QPrinterInfo;
	function NewQPrinterInfo3(printer:QPrinter_ITF):QPrinterInfo;
	function QPrinterInfo_AvailablePrinterNames():string[];
	function QPrinterInfo_AvailablePrinters():QPrinterInfo[];
	function QPrinterInfo_DefaultPrinter():QPrinterInfo;
	function QPrinterInfo_DefaultPrinterName():string;
	function QPrinterInfo_PrinterInfo(printerName:string):QPrinterInfo;
}
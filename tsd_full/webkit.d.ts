/// <reference path="core.d.ts" />
/// <reference path="gui.d.ts" />
/// <reference path="network.d.ts" />
/// <reference path="widgets.d.ts" />
/// <reference path="printsupport.d.ts" />
declare namespace webkit {
	interface QGraphicsWebView_ITF extends widgets.QGraphicsWidget_ITF {
		QGraphicsWebView_PTR():QGraphicsWebView;
	}

	class QGraphicsWebView extends widgets.QGraphicsWidget {
		___pointer: number;
		QGraphicsWebView_PTR():QGraphicsWebView;
		Pointer():number;
		SetPointer(p:number):void;
		ItemChange(change:number,value:core.QVariant_ITF):core.QVariant;
		EventDefault(event:core.QEvent_ITF):boolean;
		FindText(subString:string,options:number):boolean;
		FocusNextPrevChildDefault(next:boolean):boolean;
		SceneEventDefault(event:core.QEvent_ITF):boolean;
		ConnectBack(f:()=>void):void;
		DisconnectBack():void;
		Back():void;
		BackDefault():void;
		ContextMenuEventDefault(ev:widgets.QGraphicsSceneContextMenuEvent_ITF):void;
		DragEnterEventDefault(ev:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DragLeaveEventDefault(ev:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DragMoveEventDefault(ev:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		DropEventDefault(ev:widgets.QGraphicsSceneDragDropEvent_ITF):void;
		FocusInEventDefault(ev:gui.QFocusEvent_ITF):void;
		FocusOutEventDefault(ev:gui.QFocusEvent_ITF):void;
		ConnectForward(f:()=>void):void;
		DisconnectForward():void;
		Forward():void;
		ForwardDefault():void;
		HoverLeaveEventDefault(ev:widgets.QGraphicsSceneHoverEvent_ITF):void;
		HoverMoveEventDefault(ev:widgets.QGraphicsSceneHoverEvent_ITF):void;
		ConnectIconChanged(f:()=>void):void;
		DisconnectIconChanged():void;
		IconChanged():void;
		InputMethodEventDefault(ev:gui.QInputMethodEvent_ITF):void;
		KeyPressEventDefault(ev:gui.QKeyEvent_ITF):void;
		KeyReleaseEventDefault(ev:gui.QKeyEvent_ITF):void;
		ConnectLinkClicked(f:(url:core.QUrl)=>void):void;
		DisconnectLinkClicked():void;
		LinkClicked(url:core.QUrl_ITF):void;
		Load2(request:network.QNetworkRequest_ITF,operation:number,body:core.QByteArray_ITF):void;
		Load(url:core.QUrl_ITF):void;
		ConnectLoadFinished(f:(ok:boolean)=>void):void;
		DisconnectLoadFinished():void;
		LoadFinished(ok:boolean):void;
		ConnectLoadProgress(f:(progress:number)=>void):void;
		DisconnectLoadProgress():void;
		LoadProgress(progress:number):void;
		ConnectLoadStarted(f:()=>void):void;
		DisconnectLoadStarted():void;
		LoadStarted():void;
		MouseDoubleClickEventDefault(ev:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MouseMoveEventDefault(ev:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MousePressEventDefault(ev:widgets.QGraphicsSceneMouseEvent_ITF):void;
		MouseReleaseEventDefault(ev:widgets.QGraphicsSceneMouseEvent_ITF):void;
		PaintDefault(painter:gui.QPainter_ITF,option:widgets.QStyleOptionGraphicsItem_ITF,widget:widgets.QWidget_ITF):void;
		ConnectReload(f:()=>void):void;
		DisconnectReload():void;
		Reload():void;
		ReloadDefault():void;
		SetContent(data:core.QByteArray_ITF,mimeType:string,baseUrl:core.QUrl_ITF):void;
		SetGeometryDefault(rect:core.QRectF_ITF):void;
		SetHtml(html:string,baseUrl:core.QUrl_ITF):void;
		SetPage(page:QWebPage_ITF):void;
		SetRenderHint(hint:number,enabled:boolean):void;
		SetRenderHints(hints:number):void;
		SetResizesToContents(enabled:boolean):void;
		SetTiledBackingStoreFrozen(frozen:boolean):void;
		SetUrl(vqu:core.QUrl_ITF):void;
		SetZoomFactor(vqr:number):void;
		ConnectStatusBarMessage(f:(text:string)=>void):void;
		DisconnectStatusBarMessage():void;
		StatusBarMessage(text:string):void;
		ConnectStop(f:()=>void):void;
		DisconnectStop():void;
		Stop():void;
		StopDefault():void;
		ConnectTitleChanged(f:(vqs:string)=>void):void;
		DisconnectTitleChanged():void;
		TitleChanged(vqs:string):void;
		TriggerPageAction(action:number,checked:boolean):void;
		UpdateGeometryDefault():void;
		ConnectUrlChanged(f:(vqu:core.QUrl)=>void):void;
		DisconnectUrlChanged():void;
		UrlChanged(vqu:core.QUrl_ITF):void;
		WheelEventDefault(ev:widgets.QGraphicsSceneWheelEvent_ITF):void;
		DestroyQGraphicsWebView():void;
		PageAction(action:number):widgets.QAction;
		Icon():gui.QIcon;
		RenderHints():number;
		SizeHintDefault(which:number,constraint:core.QSizeF_ITF):core.QSizeF;
		Title():string;
		Url():core.QUrl;
		InputMethodQueryDefault(query:number):core.QVariant;
		History():QWebHistory;
		Page():QWebPage;
		Settings():QWebSettings;
		IsModified():boolean;
		IsTiledBackingStoreFrozen():boolean;
		ResizesToContents():boolean;
		ZoomFactor():number;
		BoundingRectDefault():core.QRectF;
		ChangeEventDefault(event:core.QEvent_ITF):void;
		CloseDefault():boolean;
		CloseEventDefault(event:gui.QCloseEvent_ITF):void;
		GetContentsMarginsDefault(left:number,top:number,right:number,bottom:number):void;
		GrabKeyboardEventDefault(event:core.QEvent_ITF):void;
		GrabMouseEventDefault(event:core.QEvent_ITF):void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		InitStyleOptionDefault(option:widgets.QStyleOption_ITF):void;
		MoveEventDefault(event:widgets.QGraphicsSceneMoveEvent_ITF):void;
		PaintWindowFrameDefault(painter:gui.QPainter_ITF,option:widgets.QStyleOptionGraphicsItem_ITF,widget:widgets.QWidget_ITF):void;
		PolishEventDefault():void;
		ResizeEventDefault(event:widgets.QGraphicsSceneResizeEvent_ITF):void;
		ShapeDefault():gui.QPainterPath;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		TypeDefault():number;
		UngrabKeyboardEventDefault(event:core.QEvent_ITF):void;
		UngrabMouseEventDefault(event:core.QEvent_ITF):void;
		WindowFrameEventDefault(event:core.QEvent_ITF):boolean;
		WindowFrameSectionAtDefault(pos:core.QPointF_ITF):number;
		UpdateMicroFocusDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
		AdvanceDefault(phase:number):void;
		CollidesWithItemDefault(other:widgets.QGraphicsItem_ITF,mode:number):boolean;
		CollidesWithPathDefault(path:gui.QPainterPath_ITF,mode:number):boolean;
		ContainsDefault(point:core.QPointF_ITF):boolean;
		HoverEnterEventDefault(event:widgets.QGraphicsSceneHoverEvent_ITF):void;
		IsObscuredByDefault(item:widgets.QGraphicsItem_ITF):boolean;
		OpaqueAreaDefault():gui.QPainterPath;
		SceneEventFilterDefault(watched:widgets.QGraphicsItem_ITF,event:core.QEvent_ITF):boolean;
	}
	function NewQGraphicsWebViewFromPointer(ptr:number):QGraphicsWebView;
	function NewQGraphicsWebView(parent:widgets.QGraphicsItem_ITF):QGraphicsWebView;
	interface QWebDatabase_ITF {
		QWebDatabase_PTR():QWebDatabase;
	}

	class QWebDatabase {
		___pointer: number;
		QWebDatabase_PTR():QWebDatabase;
		Pointer():number;
		SetPointer(p:number):void;
		RemoveAllDatabases():void;
		RemoveDatabase(db:QWebDatabase_ITF):void;
		DestroyQWebDatabase():void;
		DisplayName():string;
		FileName():string;
		Name():string;
		Origin():QWebSecurityOrigin;
		ExpectedSize():number;
		Size():number;
	}
	function NewQWebDatabaseFromPointer(ptr:number):QWebDatabase;
	function NewQWebDatabase(other:QWebDatabase_ITF):QWebDatabase;
	function QWebDatabase_RemoveAllDatabases():void;
	function QWebDatabase_RemoveDatabase(db:QWebDatabase_ITF):void;
	interface QWebElement_ITF {
		QWebElement_PTR():QWebElement;
	}

	class QWebElement {
		___pointer: number;
		QWebElement_PTR():QWebElement;
		Pointer():number;
		SetPointer(p:number):void;
		EvaluateJavaScript(scriptSource:string):core.QVariant;
		TakeFromDocument():QWebElement;
		AddClass(name:string):void;
		AppendInside(markup:string):void;
		AppendInside2(element:QWebElement_ITF):void;
		AppendOutside(markup:string):void;
		AppendOutside2(element:QWebElement_ITF):void;
		EncloseContentsWith2(markup:string):void;
		EncloseContentsWith(element:QWebElement_ITF):void;
		EncloseWith(markup:string):void;
		EncloseWith2(element:QWebElement_ITF):void;
		PrependInside(markup:string):void;
		PrependInside2(element:QWebElement_ITF):void;
		PrependOutside(markup:string):void;
		PrependOutside2(element:QWebElement_ITF):void;
		RemoveAllChildren():void;
		RemoveAttribute(name:string):void;
		RemoveAttributeNS(namespaceUri:string,name:string):void;
		RemoveClass(name:string):void;
		RemoveFromDocument():void;
		Render(painter:gui.QPainter_ITF):void;
		Render2(painter:gui.QPainter_ITF,clip:core.QRect_ITF):void;
		Replace(markup:string):void;
		Replace2(element:QWebElement_ITF):void;
		SetAttribute(name:string,value:string):void;
		SetAttributeNS(namespaceUri:string,name:string,value:string):void;
		SetFocus():void;
		SetInnerXml(markup:string):void;
		SetOuterXml(markup:string):void;
		SetPlainText(text:string):void;
		SetStyleProperty(name:string,value:string):void;
		ToggleClass(name:string):void;
		DestroyQWebElement():void;
		Geometry():core.QRect;
		Attribute(name:string,defaultValue:string):string;
		AttributeNS(namespaceUri:string,name:string,defaultValue:string):string;
		LocalName():string;
		NamespaceUri():string;
		Prefix():string;
		StyleProperty(name:string,strategy:number):string;
		TagName():string;
		ToInnerXml():string;
		ToOuterXml():string;
		ToPlainText():string;
		AttributeNames(namespaceUri:string):string[];
		Classes():string[];
		Clone():QWebElement;
		Document():QWebElement;
		FindFirst(selectorQuery:string):QWebElement;
		FirstChild():QWebElement;
		LastChild():QWebElement;
		NextSibling():QWebElement;
		Parent():QWebElement;
		PreviousSibling():QWebElement;
		FindAll(selectorQuery:string):QWebElementCollection;
		WebFrame():QWebFrame;
		HasAttribute(name:string):boolean;
		HasAttributeNS(namespaceUri:string,name:string):boolean;
		HasAttributes():boolean;
		HasClass(name:string):boolean;
		HasFocus():boolean;
		IsNull():boolean;
	}
	function NewQWebElementFromPointer(ptr:number):QWebElement;
	function NewQWebElement():QWebElement;
	function NewQWebElement2(other:QWebElement_ITF):QWebElement;
	function NewQWebElementCollection():QWebElementCollection;
	function NewQWebElementCollection2(contextElement:QWebElement_ITF,query:string):QWebElementCollection;
	function NewQWebElementCollection3(other:QWebElementCollection_ITF):QWebElementCollection;
	const QWebElement__InlineStyle: number;
	const QWebElement__CascadedStyle: number;
	const QWebElement__ComputedStyle: number;
	interface QWebElementCollection_ITF {
		QWebElementCollection_PTR():QWebElementCollection;
	}

	class QWebElementCollection {
		___pointer: number;
		QWebElementCollection_PTR():QWebElementCollection;
		Pointer():number;
		SetPointer(p:number):void;
		Append(other:QWebElementCollection_ITF):void;
		DestroyQWebElementCollection():void;
		ToList():QWebElement[];
		At(i:number):QWebElement;
		First():QWebElement;
		Last():QWebElement;
		Count():number;
	}
	function NewQWebElementCollectionFromPointer(ptr:number):QWebElementCollection;
	function NewQWebElementCollection():QWebElementCollection;
	function NewQWebElementCollection2(contextElement:QWebElement_ITF,query:string):QWebElementCollection;
	function NewQWebElementCollection3(other:QWebElementCollection_ITF):QWebElementCollection;
	interface QWebFrame_ITF extends core.QObject_ITF {
		QWebFrame_PTR():QWebFrame;
	}

	class QWebFrame extends core.QObject {
		___pointer: number;
		QWebFrame_PTR():QWebFrame;
		Pointer():number;
		SetPointer(p:number):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		AddToJavaScriptWindowObject(name:string,object:core.QObject_ITF,own:number):void;
		ConnectEvaluateJavaScript(f:(scriptSource:string)=>core.QVariant):void;
		DisconnectEvaluateJavaScript():void;
		EvaluateJavaScript(scriptSource:string):core.QVariant;
		EvaluateJavaScriptDefault(scriptSource:string):core.QVariant;
		ConnectContentsSizeChanged(f:(size:core.QSize)=>void):void;
		DisconnectContentsSizeChanged():void;
		ContentsSizeChanged(size:core.QSize_ITF):void;
		ConnectIconChanged(f:()=>void):void;
		DisconnectIconChanged():void;
		IconChanged():void;
		ConnectInitialLayoutCompleted(f:()=>void):void;
		DisconnectInitialLayoutCompleted():void;
		InitialLayoutCompleted():void;
		ConnectJavaScriptWindowObjectCleared(f:()=>void):void;
		DisconnectJavaScriptWindowObjectCleared():void;
		JavaScriptWindowObjectCleared():void;
		Load2(req:network.QNetworkRequest_ITF,operation:number,body:core.QByteArray_ITF):void;
		Load(url:core.QUrl_ITF):void;
		ConnectLoadFinished(f:(ok:boolean)=>void):void;
		DisconnectLoadFinished():void;
		LoadFinished(ok:boolean):void;
		ConnectLoadStarted(f:()=>void):void;
		DisconnectLoadStarted():void;
		LoadStarted():void;
		ConnectPageChanged(f:()=>void):void;
		DisconnectPageChanged():void;
		PageChanged():void;
		Render2(painter:gui.QPainter_ITF,layer:number,clip:gui.QRegion_ITF):void;
		Render(painter:gui.QPainter_ITF,clip:gui.QRegion_ITF):void;
		Scroll(dx:number,dy:number):void;
		ScrollToAnchor(anchor:string):void;
		SetContent(data:core.QByteArray_ITF,mimeType:string,baseUrl:core.QUrl_ITF):void;
		SetFocus():void;
		SetHtml(html:string,baseUrl:core.QUrl_ITF):void;
		SetScrollBarPolicy(orientation:number,policy:number):void;
		SetScrollBarValue(orientation:number,value:number):void;
		SetScrollPosition(pos:core.QPoint_ITF):void;
		SetTextSizeMultiplier(factor:number):void;
		SetUrl(url:core.QUrl_ITF):void;
		SetZoomFactor(factor:number):void;
		ConnectTitleChanged(f:(title:string)=>void):void;
		DisconnectTitleChanged():void;
		TitleChanged(title:string):void;
		ConnectUrlChanged(f:(url:core.QUrl)=>void):void;
		DisconnectUrlChanged():void;
		UrlChanged(url:core.QUrl_ITF):void;
		Icon():gui.QIcon;
		ChildFrames():QWebFrame[];
		MetaData():Map<string,string>;
		Pos():core.QPoint;
		ScrollPosition():core.QPoint;
		Geometry():core.QRect;
		ScrollBarGeometry(orientation:number):core.QRect;
		ContentsSize():core.QSize;
		FrameName():string;
		Title():string;
		ToHtml():string;
		ToPlainText():string;
		BaseUrl():core.QUrl;
		RequestedUrl():core.QUrl;
		Url():core.QUrl;
		DocumentElement():QWebElement;
		FindFirstElement(selectorQuery:string):QWebElement;
		OwnerElement():QWebElement;
		FindAllElements(selectorQuery:string):QWebElementCollection;
		ParentFrame():QWebFrame;
		HitTestContent(pos:core.QPoint_ITF):QWebHitTestResult;
		Page():QWebPage;
		SecurityOrigin():QWebSecurityOrigin;
		ScrollBarPolicy(orientation:number):number;
		HasFocus():boolean;
		ScrollBarMaximum(orientation:number):number;
		ScrollBarMinimum(orientation:number):number;
		ScrollBarValue(orientation:number):number;
		TextSizeMultiplier():number;
		ZoomFactor():number;
		ConnectPrint(f:(printer:printsupport.QPrinter)=>void):void;
		DisconnectPrint():void;
		Print(printer:printsupport.QPrinter_ITF):void;
		PrintDefault(printer:printsupport.QPrinter_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQWebFrameFromPointer(ptr:number):QWebFrame;
	const QWebFrame__ContentsLayer: number;
	const QWebFrame__ScrollBarLayer: number;
	const QWebFrame__PanIconLayer: number;
	const QWebFrame__AllLayers: number;
	const QWebFrame__QtOwnership: number;
	const QWebFrame__ScriptOwnership: number;
	const QWebFrame__AutoOwnership: number;
	interface QWebHistory_ITF {
		QWebHistory_PTR():QWebHistory;
	}

	class QWebHistory {
		___pointer: number;
		QWebHistory_PTR():QWebHistory;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQWebHistory():void;
		Back():void;
		Clear():void;
		Forward():void;
		GoToItem(item:QWebHistoryItem_ITF):void;
		SetMaximumItemCount(count:number):void;
		BackItems(maxItems:number):QWebHistoryItem[];
		ForwardItems(maxItems:number):QWebHistoryItem[];
		Items():QWebHistoryItem[];
		ToMap():Map<string,core.QVariant>;
		BackItem():QWebHistoryItem;
		CurrentItem():QWebHistoryItem;
		ForwardItem():QWebHistoryItem;
		ItemAt(i:number):QWebHistoryItem;
		CanGoBack():boolean;
		CanGoForward():boolean;
		Count():number;
		CurrentItemIndex():number;
		MaximumItemCount():number;
	}
	function NewQWebHistoryFromPointer(ptr:number):QWebHistory;
	function NewQWebHistoryInterface(parent:core.QObject_ITF):QWebHistoryInterface;
	function NewQWebHistoryItem(other:QWebHistoryItem_ITF):QWebHistoryItem;
	interface QWebHistoryInterface_ITF extends core.QObject_ITF {
		QWebHistoryInterface_PTR():QWebHistoryInterface;
	}

	class QWebHistoryInterface extends core.QObject {
		___pointer: number;
		QWebHistoryInterface_PTR():QWebHistoryInterface;
		Pointer():number;
		SetPointer(p:number):void;
		DefaultInterface():QWebHistoryInterface;
		ConnectAddHistoryEntry(f:(url:string)=>void):void;
		DisconnectAddHistoryEntry():void;
		AddHistoryEntry(url:string):void;
		SetDefaultInterface(defaultInterface:QWebHistoryInterface_ITF):void;
		DestroyQWebHistoryInterface():void;
		ConnectHistoryContains(f:(url:string)=>boolean):void;
		DisconnectHistoryContains():void;
		HistoryContains(url:string):boolean;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQWebHistoryInterfaceFromPointer(ptr:number):QWebHistoryInterface;
	function QWebHistoryInterface_DefaultInterface():QWebHistoryInterface;
	function NewQWebHistoryInterface(parent:core.QObject_ITF):QWebHistoryInterface;
	function QWebHistoryInterface_SetDefaultInterface(defaultInterface:QWebHistoryInterface_ITF):void;
	interface QWebHistoryItem_ITF {
		QWebHistoryItem_PTR():QWebHistoryItem;
	}

	class QWebHistoryItem {
		___pointer: number;
		QWebHistoryItem_PTR():QWebHistoryItem;
		Pointer():number;
		SetPointer(p:number):void;
		SetUserData(userData:core.QVariant_ITF):void;
		DestroyQWebHistoryItem():void;
		LastVisited():core.QDateTime;
		Icon():gui.QIcon;
		Title():string;
		OriginalUrl():core.QUrl;
		Url():core.QUrl;
		UserData():core.QVariant;
		ToMap():Map<string,core.QVariant>;
		IsValid():boolean;
	}
	function NewQWebHistoryItemFromPointer(ptr:number):QWebHistoryItem;
	function NewQWebHistoryItem(other:QWebHistoryItem_ITF):QWebHistoryItem;
	interface QWebHitTestResult_ITF {
		QWebHitTestResult_PTR():QWebHitTestResult;
	}

	class QWebHitTestResult {
		___pointer: number;
		QWebHitTestResult_PTR():QWebHitTestResult;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQWebHitTestResult():void;
		Pixmap():gui.QPixmap;
		Pos():core.QPoint;
		BoundingRect():core.QRect;
		AlternateText():string;
		LinkText():string;
		LinkTitleString():string;
		Title():string;
		ImageUrl():core.QUrl;
		LinkUrl():core.QUrl;
		MediaUrl():core.QUrl;
		Element():QWebElement;
		EnclosingBlockElement():QWebElement;
		LinkElement():QWebElement;
		Frame():QWebFrame;
		LinkTargetFrame():QWebFrame;
		IsContentEditable():boolean;
		IsContentSelected():boolean;
		IsNull():boolean;
	}
	function NewQWebHitTestResultFromPointer(ptr:number):QWebHitTestResult;
	function NewQWebHitTestResult():QWebHitTestResult;
	function NewQWebHitTestResult2(other:QWebHitTestResult_ITF):QWebHitTestResult;
	interface QWebInspector_ITF extends widgets.QWidget_ITF {
		QWebInspector_PTR():QWebInspector;
	}

	class QWebInspector extends widgets.QWidget {
		___pointer: number;
		QWebInspector_PTR():QWebInspector;
		Pointer():number;
		SetPointer(p:number):void;
		EventDefault(ev:core.QEvent_ITF):boolean;
		CloseEventDefault(event:gui.QCloseEvent_ITF):void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		ResizeEventDefault(event:gui.QResizeEvent_ITF):void;
		SetPage(page:QWebPage_ITF):void;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		DestroyQWebInspector():void;
		SizeHintDefault():core.QSize;
		Page():QWebPage;
		ActionEventDefault(event:gui.QActionEvent_ITF):void;
		ChangeEventDefault(event:core.QEvent_ITF):void;
		CloseDefault():boolean;
		ContextMenuEventDefault(event:gui.QContextMenuEvent_ITF):void;
		DragEnterEventDefault(event:gui.QDragEnterEvent_ITF):void;
		DragLeaveEventDefault(event:gui.QDragLeaveEvent_ITF):void;
		DragMoveEventDefault(event:gui.QDragMoveEvent_ITF):void;
		DropEventDefault(event:gui.QDropEvent_ITF):void;
		EnterEventDefault(event:core.QEvent_ITF):void;
		FocusInEventDefault(event:gui.QFocusEvent_ITF):void;
		FocusNextPrevChildDefault(next:boolean):boolean;
		FocusOutEventDefault(event:gui.QFocusEvent_ITF):void;
		HasHeightForWidthDefault():boolean;
		HeightForWidthDefault(w:number):number;
		HideDefault():void;
		InitPainterDefault(painter:gui.QPainter_ITF):void;
		InputMethodEventDefault(event:gui.QInputMethodEvent_ITF):void;
		InputMethodQueryDefault(query:number):core.QVariant;
		KeyPressEventDefault(event:gui.QKeyEvent_ITF):void;
		KeyReleaseEventDefault(event:gui.QKeyEvent_ITF):void;
		LeaveEventDefault(event:core.QEvent_ITF):void;
		LowerDefault():void;
		MetricDefault(m:number):number;
		MinimumSizeHintDefault():core.QSize;
		MouseDoubleClickEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseMoveEventDefault(event:gui.QMouseEvent_ITF):void;
		MousePressEventDefault(event:gui.QMouseEvent_ITF):void;
		MouseReleaseEventDefault(event:gui.QMouseEvent_ITF):void;
		MoveEventDefault(event:gui.QMoveEvent_ITF):void;
		NativeEventDefault(eventType:core.QByteArray_ITF,message:number,result:number):boolean;
		PaintEngineDefault():gui.QPaintEngine;
		PaintEventDefault(event:gui.QPaintEvent_ITF):void;
		RaiseDefault():void;
		RepaintDefault():void;
		SetDisabledDefault(disable:boolean):void;
		SetEnabledDefault(vbo:boolean):void;
		SetFocus2Default():void;
		SetHiddenDefault(hidden:boolean):void;
		SetStyleSheetDefault(styleSheet:string):void;
		SetVisibleDefault(visible:boolean):void;
		SetWindowModifiedDefault(vbo:boolean):void;
		SetWindowTitleDefault(vqs:string):void;
		ShowDefault():void;
		ShowFullScreenDefault():void;
		ShowMaximizedDefault():void;
		ShowMinimizedDefault():void;
		ShowNormalDefault():void;
		TabletEventDefault(event:gui.QTabletEvent_ITF):void;
		UpdateDefault():void;
		UpdateMicroFocusDefault():void;
		WheelEventDefault(event:gui.QWheelEvent_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQWebInspectorFromPointer(ptr:number):QWebInspector;
	function NewQWebInspector(parent:widgets.QWidget_ITF):QWebInspector;
	interface QWebPage_ITF extends core.QObject_ITF {
		QWebPage_PTR():QWebPage;
	}

	class QWebPage extends core.QObject {
		___pointer: number;
		QWebPage_PTR():QWebPage;
		Pointer():number;
		SetPointer(p:number):void;
		CreateStandardContextMenu():widgets.QMenu;
		ConnectCreatePlugin(f:(classid:string,url:core.QUrl,paramNames:string[],paramValues:string[])=>core.QObject):void;
		DisconnectCreatePlugin():void;
		CreatePlugin(classid:string,url:core.QUrl_ITF,paramNames:string[],paramValues:string[]):core.QObject;
		CreatePluginDefault(classid:string,url:core.QUrl_ITF,paramNames:string[],paramValues:string[]):core.QObject;
		ConnectChooseFile(f:(parentFrame:QWebFrame,suggestedFile:string)=>string):void;
		DisconnectChooseFile():void;
		ChooseFile(parentFrame:QWebFrame_ITF,suggestedFile:string):string;
		ChooseFileDefault(parentFrame:QWebFrame_ITF,suggestedFile:string):string;
		ConnectCreateWindow(f:(ty:number)=>QWebPage):void;
		DisconnectCreateWindow():void;
		CreateWindow(ty:number):QWebPage;
		CreateWindowDefault(ty:number):QWebPage;
		ConnectAcceptNavigationRequest(f:(frame:QWebFrame,request:network.QNetworkRequest,ty:number)=>boolean):void;
		DisconnectAcceptNavigationRequest():void;
		AcceptNavigationRequest(frame:QWebFrame_ITF,request:network.QNetworkRequest_ITF,ty:number):boolean;
		AcceptNavigationRequestDefault(frame:QWebFrame_ITF,request:network.QNetworkRequest_ITF,ty:number):boolean;
		EventDefault(ev:core.QEvent_ITF):boolean;
		FindText(subString:string,options:number):boolean;
		FocusNextPrevChild(next:boolean):boolean;
		ConnectJavaScriptConfirm(f:(frame:QWebFrame,msg:string)=>boolean):void;
		DisconnectJavaScriptConfirm():void;
		JavaScriptConfirm(frame:QWebFrame_ITF,msg:string):boolean;
		JavaScriptConfirmDefault(frame:QWebFrame_ITF,msg:string):boolean;
		ConnectJavaScriptPrompt(f:(frame:QWebFrame,msg:string,defaultValue:string,result:string)=>boolean):void;
		DisconnectJavaScriptPrompt():void;
		JavaScriptPrompt(frame:QWebFrame_ITF,msg:string,defaultValue:string,result:string):boolean;
		JavaScriptPromptDefault(frame:QWebFrame_ITF,msg:string,defaultValue:string,result:string):boolean;
		ConnectShouldInterruptJavaScript(f:()=>boolean):void;
		DisconnectShouldInterruptJavaScript():void;
		ShouldInterruptJavaScript():boolean;
		ShouldInterruptJavaScriptDefault():boolean;
		SwallowContextMenuEvent(event:gui.QContextMenuEvent_ITF):boolean;
		ConnectApplicationCacheQuotaExceeded(f:(origi:QWebSecurityOrigin,defaultOriginQuota:number,totalSpaceNeeded:number)=>void):void;
		DisconnectApplicationCacheQuotaExceeded():void;
		ApplicationCacheQuotaExceeded(origi:QWebSecurityOrigin_ITF,defaultOriginQuota:number,totalSpaceNeeded:number):void;
		ConnectConsoleMessageReceived(f:(source:number,level:number,message:string,lineNumber:number,sourceID:string)=>void):void;
		DisconnectConsoleMessageReceived():void;
		ConsoleMessageReceived(source:number,level:number,message:string,lineNumber:number,sourceID:string):void;
		ConnectContentsChanged(f:()=>void):void;
		DisconnectContentsChanged():void;
		ContentsChanged():void;
		ConnectDatabaseQuotaExceeded(f:(frame:QWebFrame,databaseName:string)=>void):void;
		DisconnectDatabaseQuotaExceeded():void;
		DatabaseQuotaExceeded(frame:QWebFrame_ITF,databaseName:string):void;
		ConnectDownloadRequested(f:(request:network.QNetworkRequest)=>void):void;
		DisconnectDownloadRequested():void;
		DownloadRequested(request:network.QNetworkRequest_ITF):void;
		ConnectFeaturePermissionRequestCanceled(f:(frame:QWebFrame,feature:number)=>void):void;
		DisconnectFeaturePermissionRequestCanceled():void;
		FeaturePermissionRequestCanceled(frame:QWebFrame_ITF,feature:number):void;
		ConnectFeaturePermissionRequested(f:(frame:QWebFrame,feature:number)=>void):void;
		DisconnectFeaturePermissionRequested():void;
		FeaturePermissionRequested(frame:QWebFrame_ITF,feature:number):void;
		ConnectFocusedElementChanged(f:(element:QWebElement)=>void):void;
		DisconnectFocusedElementChanged():void;
		FocusedElementChanged(element:QWebElement_ITF):void;
		ConnectFrameCreated(f:(frame:QWebFrame)=>void):void;
		DisconnectFrameCreated():void;
		FrameCreated(frame:QWebFrame_ITF):void;
		ConnectGeometryChangeRequested(f:(geom:core.QRect)=>void):void;
		DisconnectGeometryChangeRequested():void;
		GeometryChangeRequested(geom:core.QRect_ITF):void;
		ConnectJavaScriptAlert(f:(frame:QWebFrame,msg:string)=>void):void;
		DisconnectJavaScriptAlert():void;
		JavaScriptAlert(frame:QWebFrame_ITF,msg:string):void;
		JavaScriptAlertDefault(frame:QWebFrame_ITF,msg:string):void;
		ConnectJavaScriptConsoleMessage(f:(message:string,lineNumber:number,sourceID:string)=>void):void;
		DisconnectJavaScriptConsoleMessage():void;
		JavaScriptConsoleMessage(message:string,lineNumber:number,sourceID:string):void;
		JavaScriptConsoleMessageDefault(message:string,lineNumber:number,sourceID:string):void;
		ConnectLinkClicked(f:(url:core.QUrl)=>void):void;
		DisconnectLinkClicked():void;
		LinkClicked(url:core.QUrl_ITF):void;
		ConnectLinkHovered(f:(link:string,title:string,textContent:string)=>void):void;
		DisconnectLinkHovered():void;
		LinkHovered(link:string,title:string,textContent:string):void;
		ConnectLoadFinished(f:(ok:boolean)=>void):void;
		DisconnectLoadFinished():void;
		LoadFinished(ok:boolean):void;
		ConnectLoadProgress(f:(progress:number)=>void):void;
		DisconnectLoadProgress():void;
		LoadProgress(progress:number):void;
		ConnectLoadStarted(f:()=>void):void;
		DisconnectLoadStarted():void;
		LoadStarted():void;
		ConnectMenuBarVisibilityChangeRequested(f:(visible:boolean)=>void):void;
		DisconnectMenuBarVisibilityChangeRequested():void;
		MenuBarVisibilityChangeRequested(visible:boolean):void;
		ConnectMicroFocusChanged(f:()=>void):void;
		DisconnectMicroFocusChanged():void;
		MicroFocusChanged():void;
		ConnectPrintRequested(f:(frame:QWebFrame)=>void):void;
		DisconnectPrintRequested():void;
		PrintRequested(frame:QWebFrame_ITF):void;
		ConnectRecentlyAudibleChanged(f:(recentlyAudible:boolean)=>void):void;
		DisconnectRecentlyAudibleChanged():void;
		RecentlyAudibleChanged(recentlyAudible:boolean):void;
		ConnectRepaintRequested(f:(dirtyRect:core.QRect)=>void):void;
		DisconnectRepaintRequested():void;
		RepaintRequested(dirtyRect:core.QRect_ITF):void;
		ConnectRestoreFrameStateRequested(f:(frame:QWebFrame)=>void):void;
		DisconnectRestoreFrameStateRequested():void;
		RestoreFrameStateRequested(frame:QWebFrame_ITF):void;
		ConnectSaveFrameStateRequested(f:(frame:QWebFrame,item:QWebHistoryItem)=>void):void;
		DisconnectSaveFrameStateRequested():void;
		SaveFrameStateRequested(frame:QWebFrame_ITF,item:QWebHistoryItem_ITF):void;
		ConnectScrollRequested(f:(dx:number,dy:number,rectToScroll:core.QRect)=>void):void;
		DisconnectScrollRequested():void;
		ScrollRequested(dx:number,dy:number,rectToScroll:core.QRect_ITF):void;
		ConnectSelectionChanged(f:()=>void):void;
		DisconnectSelectionChanged():void;
		SelectionChanged():void;
		SetContentEditable(editable:boolean):void;
		SetFeaturePermission(frame:QWebFrame_ITF,feature:number,policy:number):void;
		SetForwardUnsupportedContent(forward:boolean):void;
		SetLinkDelegationPolicy(policy:number):void;
		SetNetworkAccessManager(manager:network.QNetworkAccessManager_ITF):void;
		SetPalette(palette:gui.QPalette_ITF):void;
		SetPluginFactory(factory:QWebPluginFactory_ITF):void;
		SetView(view:widgets.QWidget_ITF):void;
		SetVisibilityState(vvi:number):void;
		ConnectStatusBarMessage(f:(text:string)=>void):void;
		DisconnectStatusBarMessage():void;
		StatusBarMessage(text:string):void;
		ConnectStatusBarVisibilityChangeRequested(f:(visible:boolean)=>void):void;
		DisconnectStatusBarVisibilityChangeRequested():void;
		StatusBarVisibilityChangeRequested(visible:boolean):void;
		ConnectToolBarVisibilityChangeRequested(f:(visible:boolean)=>void):void;
		DisconnectToolBarVisibilityChangeRequested():void;
		ToolBarVisibilityChangeRequested(visible:boolean):void;
		ConnectTriggerAction(f:(action:number,checked:boolean)=>void):void;
		DisconnectTriggerAction():void;
		TriggerAction(action:number,checked:boolean):void;
		TriggerActionDefault(action:number,checked:boolean):void;
		ConnectUnsupportedContent(f:(reply:network.QNetworkReply)=>void):void;
		DisconnectUnsupportedContent():void;
		UnsupportedContent(reply:network.QNetworkReply_ITF):void;
		UpdatePositionDependentActions(pos:core.QPoint_ITF):void;
		ConnectViewportChangeRequested(f:()=>void):void;
		DisconnectViewportChangeRequested():void;
		ViewportChangeRequested():void;
		ConnectWindowCloseRequested(f:()=>void):void;
		DisconnectWindowCloseRequested():void;
		WindowCloseRequested():void;
		DestroyQWebPage():void;
		LinkDelegationPolicy():number;
		Action(action:number):widgets.QAction;
		CustomAction(action:number):widgets.QAction;
		NetworkAccessManager():network.QNetworkAccessManager;
		Palette():gui.QPalette;
		PreferredContentsSize():core.QSize;
		ViewportSize():core.QSize;
		SelectedHtml():string;
		SelectedText():string;
		ConnectUserAgentForUrl(f:(url:core.QUrl)=>string):void;
		DisconnectUserAgentForUrl():void;
		UserAgentForUrl(url:core.QUrl_ITF):string;
		UserAgentForUrlDefault(url:core.QUrl_ITF):string;
		SupportedContentTypes():string[];
		UndoStack():widgets.QUndoStack;
		InputMethodQuery(property:number):core.QVariant;
		CurrentFrame():QWebFrame;
		FrameAt(pos:core.QPoint_ITF):QWebFrame;
		MainFrame():QWebFrame;
		History():QWebHistory;
		PluginFactory():QWebPluginFactory;
		Settings():QWebSettings;
		View():widgets.QWidget;
		VisibilityState():number;
		ForwardUnsupportedContent():boolean;
		HasSelection():boolean;
		IsContentEditable():boolean;
		IsModified():boolean;
		RecentlyAudible():boolean;
		SupportsContentType(mimeType:string):boolean;
		ConnectSupportsExtension(f:(extension:number)=>boolean):void;
		DisconnectSupportsExtension():void;
		SupportsExtension(extension:number):boolean;
		SupportsExtensionDefault(extension:number):boolean;
		BytesReceived():number;
		TotalBytes():number;
		SetActualVisibleContentRect(rect:core.QRect_ITF):void;
		SetPreferredContentsSize(size:core.QSize_ITF):void;
		SetViewportSize(size:core.QSize_ITF):void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQWebPageFromPointer(ptr:number):QWebPage;
	function NewQWebPage(parent:core.QObject_ITF):QWebPage;
	const QWebPage__QtNetwork: number;
	const QWebPage__Http: number;
	const QWebPage__WebKit: number;
	const QWebPage__ChooseMultipleFilesExtension: number;
	const QWebPage__ErrorPageExtension: number;
	const QWebPage__Notifications: number;
	const QWebPage__Geolocation: number;
	const QWebPage__FindBackward: number;
	const QWebPage__FindCaseSensitively: number;
	const QWebPage__FindWrapsAroundDocument: number;
	const QWebPage__HighlightAllOccurrences: number;
	const QWebPage__FindAtWordBeginningsOnly: number;
	const QWebPage__TreatMedialCapitalAsWordBeginning: number;
	const QWebPage__FindBeginsInSelection: number;
	const QWebPage__DontDelegateLinks: number;
	const QWebPage__DelegateExternalLinks: number;
	const QWebPage__DelegateAllLinks: number;
	const QWebPage__LogMessageLevel: number;
	const QWebPage__WarningMessageLevel: number;
	const QWebPage__ErrorMessageLevel: number;
	const QWebPage__DebugMessageLevel: number;
	const QWebPage__InfoMessageLevel: number;
	const QWebPage__XmlMessageSource: number;
	const QWebPage__JSMessageSource: number;
	const QWebPage__NetworkMessageSource: number;
	const QWebPage__ConsoleAPIMessageSource: number;
	const QWebPage__StorageMessageSource: number;
	const QWebPage__AppCacheMessageSource: number;
	const QWebPage__RenderingMessageSource: number;
	const QWebPage__CSSMessageSource: number;
	const QWebPage__SecurityMessageSource: number;
	const QWebPage__ContentBlockerMessageSource: number;
	const QWebPage__OtherMessageSource: number;
	const QWebPage__NavigationTypeLinkClicked: number;
	const QWebPage__NavigationTypeFormSubmitted: number;
	const QWebPage__NavigationTypeBackOrForward: number;
	const QWebPage__NavigationTypeReload: number;
	const QWebPage__NavigationTypeFormResubmitted: number;
	const QWebPage__NavigationTypeOther: number;
	const QWebPage__PermissionUnknown: number;
	const QWebPage__PermissionGrantedByUser: number;
	const QWebPage__PermissionDeniedByUser: number;
	const QWebPage__VisibilityStateVisible: number;
	const QWebPage__VisibilityStateHidden: number;
	const QWebPage__VisibilityStatePrerender: number;
	const QWebPage__VisibilityStateUnloaded: number;
	const QWebPage__NoWebAction: number;
	const QWebPage__OpenLink: number;
	const QWebPage__OpenLinkInNewWindow: number;
	const QWebPage__OpenFrameInNewWindow: number;
	const QWebPage__DownloadLinkToDisk: number;
	const QWebPage__CopyLinkToClipboard: number;
	const QWebPage__OpenImageInNewWindow: number;
	const QWebPage__DownloadImageToDisk: number;
	const QWebPage__CopyImageToClipboard: number;
	const QWebPage__Back: number;
	const QWebPage__Forward: number;
	const QWebPage__Stop: number;
	const QWebPage__Reload: number;
	const QWebPage__Cut: number;
	const QWebPage__Copy: number;
	const QWebPage__Paste: number;
	const QWebPage__Undo: number;
	const QWebPage__Redo: number;
	const QWebPage__MoveToNextChar: number;
	const QWebPage__MoveToPreviousChar: number;
	const QWebPage__MoveToNextWord: number;
	const QWebPage__MoveToPreviousWord: number;
	const QWebPage__MoveToNextLine: number;
	const QWebPage__MoveToPreviousLine: number;
	const QWebPage__MoveToStartOfLine: number;
	const QWebPage__MoveToEndOfLine: number;
	const QWebPage__MoveToStartOfBlock: number;
	const QWebPage__MoveToEndOfBlock: number;
	const QWebPage__MoveToStartOfDocument: number;
	const QWebPage__MoveToEndOfDocument: number;
	const QWebPage__SelectNextChar: number;
	const QWebPage__SelectPreviousChar: number;
	const QWebPage__SelectNextWord: number;
	const QWebPage__SelectPreviousWord: number;
	const QWebPage__SelectNextLine: number;
	const QWebPage__SelectPreviousLine: number;
	const QWebPage__SelectStartOfLine: number;
	const QWebPage__SelectEndOfLine: number;
	const QWebPage__SelectStartOfBlock: number;
	const QWebPage__SelectEndOfBlock: number;
	const QWebPage__SelectStartOfDocument: number;
	const QWebPage__SelectEndOfDocument: number;
	const QWebPage__DeleteStartOfWord: number;
	const QWebPage__DeleteEndOfWord: number;
	const QWebPage__SetTextDirectionDefault: number;
	const QWebPage__SetTextDirectionLeftToRight: number;
	const QWebPage__SetTextDirectionRightToLeft: number;
	const QWebPage__ToggleBold: number;
	const QWebPage__ToggleItalic: number;
	const QWebPage__ToggleUnderline: number;
	const QWebPage__InspectElement: number;
	const QWebPage__InsertParagraphSeparator: number;
	const QWebPage__InsertLineSeparator: number;
	const QWebPage__SelectAll: number;
	const QWebPage__ReloadAndBypassCache: number;
	const QWebPage__PasteAndMatchStyle: number;
	const QWebPage__RemoveFormat: number;
	const QWebPage__ToggleStrikethrough: number;
	const QWebPage__ToggleSubscript: number;
	const QWebPage__ToggleSuperscript: number;
	const QWebPage__InsertUnorderedList: number;
	const QWebPage__InsertOrderedList: number;
	const QWebPage__Indent: number;
	const QWebPage__Outdent: number;
	const QWebPage__AlignCenter: number;
	const QWebPage__AlignJustified: number;
	const QWebPage__AlignLeft: number;
	const QWebPage__AlignRight: number;
	const QWebPage__StopScheduledPageRefresh: number;
	const QWebPage__CopyImageUrlToClipboard: number;
	const QWebPage__OpenLinkInThisWindow: number;
	const QWebPage__DownloadMediaToDisk: number;
	const QWebPage__CopyMediaUrlToClipboard: number;
	const QWebPage__ToggleMediaControls: number;
	const QWebPage__ToggleMediaLoop: number;
	const QWebPage__ToggleMediaPlayPause: number;
	const QWebPage__ToggleMediaMute: number;
	const QWebPage__ToggleVideoFullscreen: number;
	const QWebPage__WebActionCount: number;
	const QWebPage__WebBrowserWindow: number;
	const QWebPage__WebModalDialog: number;
	interface QWebPluginFactory_ITF extends core.QObject_ITF {
		QWebPluginFactory_PTR():QWebPluginFactory;
	}

	class QWebPluginFactory extends core.QObject {
		___pointer: number;
		QWebPluginFactory_PTR():QWebPluginFactory;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectRefreshPlugins(f:()=>void):void;
		DisconnectRefreshPlugins():void;
		RefreshPlugins():void;
		RefreshPluginsDefault():void;
		ConnectDestroyQWebPluginFactory(f:()=>void):void;
		DisconnectDestroyQWebPluginFactory():void;
		DestroyQWebPluginFactory():void;
		DestroyQWebPluginFactoryDefault():void;
		ConnectCreate(f:(mimeType:string,url:core.QUrl,argumentNames:string[],argumentValues:string[])=>core.QObject):void;
		DisconnectCreate():void;
		Create(mimeType:string,url:core.QUrl_ITF,argumentNames:string[],argumentValues:string[]):core.QObject;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventDefault(e:core.QEvent_ITF):boolean;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQWebPluginFactoryFromPointer(ptr:number):QWebPluginFactory;
	interface QWebSecurityOrigin_ITF {
		QWebSecurityOrigin_PTR():QWebSecurityOrigin;
	}

	class QWebSecurityOrigin {
		___pointer: number;
		QWebSecurityOrigin_PTR():QWebSecurityOrigin;
		Pointer():number;
		SetPointer(p:number):void;
		AllOrigins():QWebSecurityOrigin[];
		LocalSchemes():string[];
		AddAccessWhitelistEntry(scheme:string,host:string,subdomainSetting:number):void;
		AddLocalScheme(scheme:string):void;
		RemoveAccessWhitelistEntry(scheme:string,host:string,subdomainSetting:number):void;
		RemoveLocalScheme(scheme:string):void;
		SetApplicationCacheQuota(quota:number):void;
		SetDatabaseQuota(quota:number):void;
		DestroyQWebSecurityOrigin():void;
		Databases():QWebDatabase[];
		Host():string;
		Scheme():string;
		Port():number;
		DatabaseQuota():number;
		DatabaseUsage():number;
	}
	function NewQWebSecurityOriginFromPointer(ptr:number):QWebSecurityOrigin;
	function QWebSecurityOrigin_AllOrigins():QWebSecurityOrigin[];
	function QWebSecurityOrigin_LocalSchemes():string[];
	function NewQWebSecurityOrigin(url:core.QUrl_ITF):QWebSecurityOrigin;
	function NewQWebSecurityOrigin2(other:QWebSecurityOrigin_ITF):QWebSecurityOrigin;
	function QWebSecurityOrigin_AddLocalScheme(scheme:string):void;
	function QWebSecurityOrigin_RemoveLocalScheme(scheme:string):void;
	const QWebSecurityOrigin__AllowSubdomains: number;
	const QWebSecurityOrigin__DisallowSubdomains: number;
	interface QWebSettings_ITF {
		QWebSettings_PTR():QWebSettings;
	}

	class QWebSettings {
		___pointer: number;
		QWebSettings_PTR():QWebSettings;
		Pointer():number;
		SetPointer(p:number):void;
		DestroyQWebSettings():void;
		IconForUrl(url:core.QUrl_ITF):gui.QIcon;
		WebGraphic(ty:number):gui.QPixmap;
		IconDatabasePath():string;
		OfflineStoragePath():string;
		OfflineWebApplicationCachePath():string;
		PluginSearchPaths():string[];
		GlobalSettings():QWebSettings;
		MaximumPagesInCache():number;
		OfflineStorageDefaultQuota():number;
		OfflineWebApplicationCacheQuota():number;
		ClearIconDatabase():void;
		ClearMemoryCaches():void;
		EnablePersistentStorage(path:string):void;
		ResetAttribute(attribute:number):void;
		ResetFontFamily(which:number):void;
		ResetFontSize(ty:number):void;
		SetAttribute(attribute:number,on:boolean):void;
		SetCSSMediaType(ty:string):void;
		SetDefaultTextEncoding(encoding:string):void;
		SetFontFamily(which:number,family:string):void;
		SetFontSize(ty:number,size:number):void;
		SetIconDatabasePath(path:string):void;
		SetLocalStoragePath(path:string):void;
		SetMaximumPagesInCache(pages:number):void;
		SetObjectCacheCapacities(cacheMinDeadCapacity:number,cacheMaxDead:number,totalCapacity:number):void;
		SetOfflineStorageDefaultQuota(maximumSize:number):void;
		SetOfflineStoragePath(path:string):void;
		SetOfflineWebApplicationCachePath(path:string):void;
		SetOfflineWebApplicationCacheQuota(maximumSize:number):void;
		SetPluginSearchPaths(paths:string[]):void;
		SetThirdPartyCookiePolicy(policy:number):void;
		SetUserStyleSheetUrl(location:core.QUrl_ITF):void;
		SetWebGraphic(ty:number,graphic:gui.QPixmap_ITF):void;
		CssMediaType():string;
		DefaultTextEncoding():string;
		FontFamily(which:number):string;
		LocalStoragePath():string;
		UserStyleSheetUrl():core.QUrl;
		ThirdPartyCookiePolicy():number;
		TestAttribute(attribute:number):boolean;
		FontSize(ty:number):number;
	}
	function NewQWebSettingsFromPointer(ptr:number):QWebSettings;
	function QWebSettings_IconForUrl(url:core.QUrl_ITF):gui.QIcon;
	function QWebSettings_WebGraphic(ty:number):gui.QPixmap;
	function QWebSettings_IconDatabasePath():string;
	function QWebSettings_OfflineStoragePath():string;
	function QWebSettings_OfflineWebApplicationCachePath():string;
	function QWebSettings_PluginSearchPaths():string[];
	function QWebSettings_GlobalSettings():QWebSettings;
	function QWebSettings_MaximumPagesInCache():number;
	function QWebSettings_OfflineStorageDefaultQuota():number;
	function QWebSettings_OfflineWebApplicationCacheQuota():number;
	function QWebSettings_ClearIconDatabase():void;
	function QWebSettings_ClearMemoryCaches():void;
	function QWebSettings_EnablePersistentStorage(path:string):void;
	function QWebSettings_SetIconDatabasePath(path:string):void;
	function QWebSettings_SetMaximumPagesInCache(pages:number):void;
	function QWebSettings_SetObjectCacheCapacities(cacheMinDeadCapacity:number,cacheMaxDead:number,totalCapacity:number):void;
	function QWebSettings_SetOfflineStorageDefaultQuota(maximumSize:number):void;
	function QWebSettings_SetOfflineStoragePath(path:string):void;
	function QWebSettings_SetOfflineWebApplicationCachePath(path:string):void;
	function QWebSettings_SetOfflineWebApplicationCacheQuota(maximumSize:number):void;
	function QWebSettings_SetPluginSearchPaths(paths:string[]):void;
	function QWebSettings_SetWebGraphic(ty:number,graphic:gui.QPixmap_ITF):void;
	const QWebSettings__StandardFont: number;
	const QWebSettings__FixedFont: number;
	const QWebSettings__SerifFont: number;
	const QWebSettings__SansSerifFont: number;
	const QWebSettings__CursiveFont: number;
	const QWebSettings__FantasyFont: number;
	const QWebSettings__MinimumFontSize: number;
	const QWebSettings__MinimumLogicalFontSize: number;
	const QWebSettings__DefaultFontSize: number;
	const QWebSettings__DefaultFixedFontSize: number;
	const QWebSettings__AlwaysAllowThirdPartyCookies: number;
	const QWebSettings__AlwaysBlockThirdPartyCookies: number;
	const QWebSettings__AllowThirdPartyWithExistingCookies: number;
	const QWebSettings__AutoLoadImages: number;
	const QWebSettings__JavascriptEnabled: number;
	const QWebSettings__JavaEnabled: number;
	const QWebSettings__PluginsEnabled: number;
	const QWebSettings__PrivateBrowsingEnabled: number;
	const QWebSettings__JavascriptCanOpenWindows: number;
	const QWebSettings__JavascriptCanAccessClipboard: number;
	const QWebSettings__DeveloperExtrasEnabled: number;
	const QWebSettings__LinksIncludedInFocusChain: number;
	const QWebSettings__ZoomTextOnly: number;
	const QWebSettings__PrintElementBackgrounds: number;
	const QWebSettings__OfflineStorageDatabaseEnabled: number;
	const QWebSettings__OfflineWebApplicationCacheEnabled: number;
	const QWebSettings__LocalStorageEnabled: number;
	const QWebSettings__LocalStorageDatabaseEnabled: number;
	const QWebSettings__LocalContentCanAccessRemoteUrls: number;
	const QWebSettings__DnsPrefetchEnabled: number;
	const QWebSettings__XSSAuditingEnabled: number;
	const QWebSettings__AcceleratedCompositingEnabled: number;
	const QWebSettings__SpatialNavigationEnabled: number;
	const QWebSettings__LocalContentCanAccessFileUrls: number;
	const QWebSettings__TiledBackingStoreEnabled: number;
	const QWebSettings__FrameFlatteningEnabled: number;
	const QWebSettings__SiteSpecificQuirksEnabled: number;
	const QWebSettings__JavascriptCanCloseWindows: number;
	const QWebSettings__WebGLEnabled: number;
	const QWebSettings__CSSRegionsEnabled: number;
	const QWebSettings__HyperlinkAuditingEnabled: number;
	const QWebSettings__CSSGridLayoutEnabled: number;
	const QWebSettings__ScrollAnimatorEnabled: number;
	const QWebSettings__CaretBrowsingEnabled: number;
	const QWebSettings__NotificationsEnabled: number;
	const QWebSettings__WebAudioEnabled: number;
	const QWebSettings__Accelerated2dCanvasEnabled: number;
	const QWebSettings__MediaSourceEnabled: number;
	const QWebSettings__MediaEnabled: number;
	const QWebSettings__WebSecurityEnabled: number;
	const QWebSettings__FullScreenSupportEnabled: number;
	const QWebSettings__MissingImageGraphic: number;
	const QWebSettings__MissingPluginGraphic: number;
	const QWebSettings__DefaultFrameIconGraphic: number;
	const QWebSettings__TextAreaSizeGripCornerGraphic: number;
	const QWebSettings__DeleteButtonGraphic: number;
	const QWebSettings__InputSpeechButtonGraphic: number;
	const QWebSettings__SearchCancelButtonGraphic: number;
	const QWebSettings__SearchCancelButtonPressedGraphic: number;
	interface QWebView_ITF extends widgets.QWidget_ITF {
		QWebView_PTR():QWebView;
	}

	class QWebView extends widgets.QWidget {
		___pointer: number;
		QWebView_PTR():QWebView;
		Pointer():number;
		SetPointer(p:number):void;
		ConnectCreateWindow(f:(ty:number)=>QWebView):void;
		DisconnectCreateWindow():void;
		CreateWindow(ty:number):QWebView;
		CreateWindowDefault(ty:number):QWebView;
		EventDefault(e:core.QEvent_ITF):boolean;
		FindText(subString:string,options:number):boolean;
		FocusNextPrevChildDefault(next:boolean):boolean;
		ConnectBack(f:()=>void):void;
		DisconnectBack():void;
		Back():void;
		BackDefault():void;
		ChangeEventDefault(e:core.QEvent_ITF):void;
		ContextMenuEventDefault(ev:gui.QContextMenuEvent_ITF):void;
		DragEnterEventDefault(ev:gui.QDragEnterEvent_ITF):void;
		DragLeaveEventDefault(ev:gui.QDragLeaveEvent_ITF):void;
		DragMoveEventDefault(ev:gui.QDragMoveEvent_ITF):void;
		DropEventDefault(ev:gui.QDropEvent_ITF):void;
		FocusInEventDefault(ev:gui.QFocusEvent_ITF):void;
		FocusOutEventDefault(ev:gui.QFocusEvent_ITF):void;
		ConnectForward(f:()=>void):void;
		DisconnectForward():void;
		Forward():void;
		ForwardDefault():void;
		ConnectIconChanged(f:()=>void):void;
		DisconnectIconChanged():void;
		IconChanged():void;
		InputMethodEventDefault(e:gui.QInputMethodEvent_ITF):void;
		KeyPressEventDefault(ev:gui.QKeyEvent_ITF):void;
		KeyReleaseEventDefault(ev:gui.QKeyEvent_ITF):void;
		ConnectLinkClicked(f:(url:core.QUrl)=>void):void;
		DisconnectLinkClicked():void;
		LinkClicked(url:core.QUrl_ITF):void;
		Load2(request:network.QNetworkRequest_ITF,operation:number,body:core.QByteArray_ITF):void;
		Load(url:core.QUrl_ITF):void;
		ConnectLoadFinished(f:(ok:boolean)=>void):void;
		DisconnectLoadFinished():void;
		LoadFinished(ok:boolean):void;
		ConnectLoadProgress(f:(progress:number)=>void):void;
		DisconnectLoadProgress():void;
		LoadProgress(progress:number):void;
		ConnectLoadStarted(f:()=>void):void;
		DisconnectLoadStarted():void;
		LoadStarted():void;
		MouseDoubleClickEventDefault(ev:gui.QMouseEvent_ITF):void;
		MouseMoveEventDefault(ev:gui.QMouseEvent_ITF):void;
		MousePressEventDefault(ev:gui.QMouseEvent_ITF):void;
		MouseReleaseEventDefault(ev:gui.QMouseEvent_ITF):void;
		PaintEventDefault(ev:gui.QPaintEvent_ITF):void;
		ConnectReload(f:()=>void):void;
		DisconnectReload():void;
		Reload():void;
		ReloadDefault():void;
		ResizeEventDefault(e:gui.QResizeEvent_ITF):void;
		ConnectSelectionChanged(f:()=>void):void;
		DisconnectSelectionChanged():void;
		SelectionChanged():void;
		SetContent(data:core.QByteArray_ITF,mimeType:string,baseUrl:core.QUrl_ITF):void;
		SetHtml(html:string,baseUrl:core.QUrl_ITF):void;
		SetPage(page:QWebPage_ITF):void;
		SetRenderHint(hint:number,enabled:boolean):void;
		SetRenderHints(hints:number):void;
		SetTextSizeMultiplier(factor:number):void;
		SetUrl(url:core.QUrl_ITF):void;
		SetZoomFactor(factor:number):void;
		ConnectStatusBarMessage(f:(text:string)=>void):void;
		DisconnectStatusBarMessage():void;
		StatusBarMessage(text:string):void;
		ConnectStop(f:()=>void):void;
		DisconnectStop():void;
		Stop():void;
		StopDefault():void;
		ConnectTitleChanged(f:(title:string)=>void):void;
		DisconnectTitleChanged():void;
		TitleChanged(title:string):void;
		TriggerPageAction(action:number,checked:boolean):void;
		ConnectUrlChanged(f:(url:core.QUrl)=>void):void;
		DisconnectUrlChanged():void;
		UrlChanged(url:core.QUrl_ITF):void;
		WheelEventDefault(ev:gui.QWheelEvent_ITF):void;
		DestroyQWebView():void;
		PageAction(action:number):widgets.QAction;
		Icon():gui.QIcon;
		RenderHints():number;
		SizeHintDefault():core.QSize;
		SelectedHtml():string;
		SelectedText():string;
		Title():string;
		Url():core.QUrl;
		InputMethodQueryDefault(property:number):core.QVariant;
		History():QWebHistory;
		Page():QWebPage;
		Settings():QWebSettings;
		HasSelection():boolean;
		IsModified():boolean;
		TextSizeMultiplier():number;
		ZoomFactor():number;
		ConnectPrint(f:(printer:printsupport.QPrinter)=>void):void;
		DisconnectPrint():void;
		Print(printer:printsupport.QPrinter_ITF):void;
		PrintDefault(printer:printsupport.QPrinter_ITF):void;
		ActionEventDefault(event:gui.QActionEvent_ITF):void;
		CloseDefault():boolean;
		CloseEventDefault(event:gui.QCloseEvent_ITF):void;
		EnterEventDefault(event:core.QEvent_ITF):void;
		HasHeightForWidthDefault():boolean;
		HeightForWidthDefault(w:number):number;
		HideDefault():void;
		HideEventDefault(event:gui.QHideEvent_ITF):void;
		InitPainterDefault(painter:gui.QPainter_ITF):void;
		LeaveEventDefault(event:core.QEvent_ITF):void;
		LowerDefault():void;
		MetricDefault(m:number):number;
		MinimumSizeHintDefault():core.QSize;
		MoveEventDefault(event:gui.QMoveEvent_ITF):void;
		NativeEventDefault(eventType:core.QByteArray_ITF,message:number,result:number):boolean;
		PaintEngineDefault():gui.QPaintEngine;
		RaiseDefault():void;
		RepaintDefault():void;
		SetDisabledDefault(disable:boolean):void;
		SetEnabledDefault(vbo:boolean):void;
		SetFocus2Default():void;
		SetHiddenDefault(hidden:boolean):void;
		SetStyleSheetDefault(styleSheet:string):void;
		SetVisibleDefault(visible:boolean):void;
		SetWindowModifiedDefault(vbo:boolean):void;
		SetWindowTitleDefault(vqs:string):void;
		ShowDefault():void;
		ShowEventDefault(event:gui.QShowEvent_ITF):void;
		ShowFullScreenDefault():void;
		ShowMaximizedDefault():void;
		ShowMinimizedDefault():void;
		ShowNormalDefault():void;
		TabletEventDefault(event:gui.QTabletEvent_ITF):void;
		UpdateDefault():void;
		UpdateMicroFocusDefault():void;
		ChildEventDefault(event:core.QChildEvent_ITF):void;
		ConnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		CustomEventDefault(event:core.QEvent_ITF):void;
		DeleteLaterDefault():void;
		DisconnectNotifyDefault(sign:core.QMetaMethod_ITF):void;
		EventFilterDefault(watched:core.QObject_ITF,event:core.QEvent_ITF):boolean;
		MetaObjectDefault():core.QMetaObject;
		TimerEventDefault(event:core.QTimerEvent_ITF):void;
	}
	function NewQWebViewFromPointer(ptr:number):QWebView;
	function NewQWebView(parent:widgets.QWidget_ITF):QWebView;
}